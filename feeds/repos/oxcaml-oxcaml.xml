<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>https://thicket.dev/feeds/repos/oxcaml-oxcaml.xml</id><title>oxcaml/oxcaml (Weekly)</title><updated>2025-09-14T00:00:00+00:00</updated><author><name>Anil Madhavapeddy</name><email>anil@recoil.org</email></author><link href="https://thicket.dev/feeds/repos/oxcaml-oxcaml.xml" rel="self"/><link href="https://thicket.dev/" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Weekly activity reports for oxcaml/oxcaml</subtitle><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-37</id><title>Week 37, 2025: Major infrastructure development with JSIR backend, TLS implementation, small integers expansion, and comprehensive DWARF debugging improvements</title><updated>2025-09-14T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Major development across JavaScript backend, threading infrastructure, small integers, debugging, and performance optimizations with 27 new PRs and 48 merges&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4675" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Major ongoing development&lt;/strong&gt;&lt;/a&gt; with 27 new PRs opened including prototype ikind system by &lt;a href="https://github.com/julesjacobs"&gt;@julesjacobs&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4675"&gt;#4675&lt;/a&gt;), untagged char range patterns by &lt;a href="https://github.com/jra4"&gt;James Rayman&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4716"&gt;#4716&lt;/a&gt;), and dataflow-based shrink wrapping by &lt;a href="https://github.com/cfalas"&gt;Christos Falas&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4710"&gt;#4710&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript backend&lt;/strong&gt;&lt;/a&gt; reached major milestone with &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; merging 12+ PRs for comprehensive JSIR implementation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;#4638&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4717"&gt;#4717&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4715"&gt;#4715&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4714"&gt;#4714&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4708"&gt;#4708&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4709"&gt;#4709&lt;/a&gt;) plus &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; adding dynamic width selection (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4681"&gt;#4681&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4671" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Threading infrastructure&lt;/strong&gt;&lt;/a&gt; delivered through TLS implementation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4671"&gt;#4671&lt;/a&gt;), DLS portability improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4630"&gt;#4630&lt;/a&gt;), and format module integration by &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4635" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Small integers expansion&lt;/strong&gt;&lt;/a&gt; with unboxed literals (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4635"&gt;#4635&lt;/a&gt;), char literals (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658"&gt;#4658&lt;/a&gt;), array indexing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4677"&gt;#4677&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4691"&gt;#4691&lt;/a&gt;), and Char_u module (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4659"&gt;#4659&lt;/a&gt;) by &lt;a href="https://github.com/jra4"&gt;James Rayman&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4531" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DWARF debugging improvements&lt;/strong&gt;&lt;/a&gt; delivered through metrics collection (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4531"&gt;#4531&lt;/a&gt;), performance dials (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4535"&gt;#4535&lt;/a&gt;), small integer support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4478"&gt;#4478&lt;/a&gt;), recursive types (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4492"&gt;#4492&lt;/a&gt;), and Merlin integration (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440"&gt;#4440&lt;/a&gt;) by &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; and &lt;a href="https://github.com/gretay-js"&gt;Greta Yorsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4369" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization&lt;/strong&gt;&lt;/a&gt; through n-way join algorithm rewrite (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4369"&gt;#4369&lt;/a&gt;), free names optimization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4684"&gt;#4684&lt;/a&gt;), and register allocation workaround (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4685"&gt;#4685&lt;/a&gt;) by multiple contributors&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4699" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Strategic planning&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; opening 13 roadmap issues covering testing infrastructure (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4699"&gt;#4699&lt;/a&gt;), reaper code review (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4694"&gt;#4694&lt;/a&gt;), function specialization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4701"&gt;#4701&lt;/a&gt;), and Cmm replacement design (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4700"&gt;#4700&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4692" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system maintenance&lt;/strong&gt;&lt;/a&gt; including Nix configuration fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4692"&gt;#4692&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4683"&gt;#4683&lt;/a&gt;), DWARF objcopy workflow improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4706"&gt;#4706&lt;/a&gt;), and CI enhancements by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; and &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4574" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend reliability&lt;/strong&gt;&lt;/a&gt; through polling safe map fix (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4574"&gt;#4574&lt;/a&gt;) ongoing work, CFG infrastructure improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4665"&gt;#4665&lt;/a&gt;), and shrink-wrapping enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4579"&gt;#4579&lt;/a&gt;) by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; and &lt;a href="https://github.com/cfalas"&gt;Christos Falas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major infrastructure development with JSIR backend, TLS implementation, small integers expansion, and comprehensive DWARF debugging improvements</summary><published>2025-09-14T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-36</id><title>Week 36, 2025: Active week with major DWARF improvements, atomic operations refinements, and extensive JSIR backend development</title><updated>2025-09-07T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Major JSIR backend development with 12+ merged PRs, atomic operations improvements, DWARF debugging enhancements, and type system refinements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JSIR backend development&lt;/strong&gt;&lt;/a&gt; reached substantial progress with &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; contributing 12+ PRs covering JavaScript target improvements, bytecode stdlib compatibility, external function handling, and exception continuation fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598"&gt;#4598&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4573"&gt;#4573&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4570"&gt;#4570&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4569"&gt;#4569&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4566"&gt;#4566&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4565"&gt;#4565&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4559"&gt;#4559&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4550"&gt;#4550&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4620"&gt;#4620&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4637"&gt;#4637&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4653"&gt;#4653&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4654"&gt;#4654&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4646"&gt;#4646&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4621" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Atomic operations improvements&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/mdelvecchio-jsc"&gt;Megan Del Vecchio&lt;/a&gt; refining type system integration and removing redundant contended operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4621"&gt;#4621&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4636"&gt;#4636&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DWARF debugging enhancements&lt;/strong&gt;&lt;/a&gt; through &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; with comprehensive Type Shapes integration for functor support and pedantic error checking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;#4398&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4555"&gt;#4555&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4644" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimizations&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/ccasin"&gt;Chris Casinghino&lt;/a&gt; eliminating unnecessary memory operations in block indices (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4644"&gt;#4644&lt;/a&gt;) and &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt; restoring frontend atomic specialization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4639"&gt;#4639&lt;/a&gt;) plus fixing runtime race conditions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4609"&gt;#4609&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4619" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system refinements&lt;/strong&gt;&lt;/a&gt; including modality atom refactoring by &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; to decouple polarity from atoms (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4619"&gt;#4619&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4627"&gt;#4627&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system improvements&lt;/strong&gt;&lt;/a&gt; with ocamllex symbolic link fix for cross-device scenarios (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292"&gt;#4292&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4626" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Active open PRs&lt;/strong&gt;&lt;/a&gt; include new DWARF test additions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4626"&gt;#4626&lt;/a&gt;), register allocation attributes refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4633"&gt;#4633&lt;/a&gt;), and module inclusion error message improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4634"&gt;#4634&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active week with major DWARF improvements, atomic operations refinements, and extensive JSIR backend development</summary><published>2025-09-07T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-35</id><title>Week 35, 2025: Major mode system improvements, backend optimizations, and new static label type safety across 20 merged commits</title><updated>2025-08-31T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Significant backend development with 52 new PRs including register allocator attributes and CFG refactoring&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4633" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Nine new PRs opened&lt;/strong&gt;&lt;/a&gt; this week including register allocator attributes by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4633"&gt;#4633&lt;/a&gt;), CFG instruction refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4591"&gt;#4591&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4594"&gt;#4594&lt;/a&gt;), and polling safety fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4574"&gt;#4574&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4620" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript backend improvements&lt;/strong&gt;&lt;/a&gt; with JSIR bug fixes by &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4620"&gt;#4620&lt;/a&gt;), new .cmjx file extension for JSIR compilation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598"&gt;#4598&lt;/a&gt;), and cleanup of deprecated CRs (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4573"&gt;#4573&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4619" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Major mode system advances&lt;/strong&gt;&lt;/a&gt; including modality atom refactoring by &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4619"&gt;#4619&lt;/a&gt;), Mode.Modality.Value unzipping (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4481"&gt;#4481&lt;/a&gt;), and atomic fields treated as sync_data by &lt;a href="https://github.com/mdelvecchio-jsc"&gt;Megan Del Vecchio&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4621"&gt;#4621&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4585" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend optimization work&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/cfalas"&gt;Christos Falas&lt;/a&gt; with prologue validation tests (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4585"&gt;#4585&lt;/a&gt;), shrink-wrapping improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4578"&gt;#4578&lt;/a&gt;), and smart prologue stopping (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4616"&gt;#4616&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DWARF debugging enhancements&lt;/strong&gt;&lt;/a&gt; including shape merging for functor support by &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;#4398&lt;/a&gt;), additional test cases (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4530"&gt;#4530&lt;/a&gt;), and phantom variable support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4595"&gt;#4595&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4609" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime improvements&lt;/strong&gt;&lt;/a&gt; with race condition fixes in continuation handling by &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4609"&gt;#4609&lt;/a&gt;), SIMD intrinsic cleanup (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4458"&gt;#4458&lt;/a&gt;), and GC root mishandling fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4580"&gt;#4580&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4590" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda2 improvements&lt;/strong&gt;&lt;/a&gt; including reaper tail call preservation by &lt;a href="https://github.com/Ekdohibs"&gt;Nathanaëlle Courant&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4590"&gt;#4590&lt;/a&gt;), leaked constant fixes by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4617"&gt;#4617&lt;/a&gt;), and separability checking extensions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4575"&gt;#4575&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major mode system improvements, backend optimizations, and new static label type safety across 20 merged commits</summary><published>2025-08-31T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-34</id><title>Week 34, 2025: Major week with prologue optimization, atomic API improvements, and extensive unboxed types fixes</title><updated>2025-08-24T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Multiple backend optimizations with prologue placement, unboxed types improvements, and module compilation cleanup&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend optimization focus&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/cfalas"&gt;Christos Falas&lt;/a&gt; implementing prologue shrink wrapping (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544"&gt;#4544&lt;/a&gt;) and dataflow analysis for validation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4521"&gt;#4521&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4553" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed types refinements&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/ccasin"&gt;Chris Casinghino&lt;/a&gt; eliminating unnecessary &lt;code&gt;caml_modify&lt;/code&gt; calls for nested product records (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4553"&gt;#4553&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4560" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda2 bug fixes&lt;/strong&gt;&lt;/a&gt; including assertion loosening for match-in-match by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4560"&gt;#4560&lt;/a&gt;) and preventing unboxing in indirect unknown arity calls by &lt;a href="https://github.com/Ekdohibs"&gt;Nathanaëlle Courant&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4554"&gt;#4554&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4527" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Module compilation cleanup&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; removing obsolete transl_store pipeline and unifying native/bytecode approaches (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4527"&gt;#4527&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4546" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CFG improvements&lt;/strong&gt;&lt;/a&gt; including loop computation fixes by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4546"&gt;#4546&lt;/a&gt;) and register allocation pass repositioning by &lt;a href="https://github.com/gretay-js"&gt;Greta Yorsh&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4545"&gt;#4545&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4477" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Pattern and typing enhancements&lt;/strong&gt;&lt;/a&gt; extending &lt;code&gt;Tpat_var&lt;/code&gt; and &lt;code&gt;Tpat_alias&lt;/code&gt; to contain sorts by &lt;a href="https://github.com/jra4"&gt;James Rayman&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4477"&gt;#4477&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4552" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development tooling&lt;/strong&gt;&lt;/a&gt; updates including jane-street-merlin-setup improvements for AI usage by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4552"&gt;#4552&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week with prologue optimization, atomic API improvements, and extensive unboxed types fixes</summary><published>2025-08-24T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-33</id><title>Week 33, 2025: Heavy week with 39 commits including small integer type stabilization, atomic fields support, and LLVM backend development</title><updated>2025-08-17T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Nine new LLVM backend PRs opened with extensive functionality additions, plus numerous performance optimizations and debugging improvements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4476" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Nine new LLVM backend PRs&lt;/strong&gt;&lt;/a&gt; opened by &lt;a href="https://github.com/usuyus"&gt;Yusuf Onur Üşümez&lt;/a&gt; including exception handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4476"&gt;#4476&lt;/a&gt;), tailcalls (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4507"&gt;#4507&lt;/a&gt;), local/heap allocation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4508"&gt;#4508&lt;/a&gt;), integer/float operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4509"&gt;#4509&lt;/a&gt;), and switches (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4510"&gt;#4510&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4525" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript backend development&lt;/strong&gt;&lt;/a&gt; with multi-file compilation support by &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4525"&gt;#4525&lt;/a&gt;) and extensive ocamlj changes merged (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;#4638&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4478" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DWARF debugging system&lt;/strong&gt;&lt;/a&gt; enhancements by &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; including debugging support for small integers (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4478"&gt;#4478&lt;/a&gt;), recursive types in shapes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4492"&gt;#4492&lt;/a&gt;), and merged type shapes for functor support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;#4398&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4428" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimizations&lt;/strong&gt;&lt;/a&gt; including unboxed int64 conversion fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4428"&gt;#4428&lt;/a&gt;), peephole rule improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4513"&gt;#4513&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4519"&gt;#4519&lt;/a&gt;), and atomic counter consolidation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3796"&gt;#3796&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4514"&gt;#4514&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4471" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode system improvements&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; with error message enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4471"&gt;#4471&lt;/a&gt;) and modality system refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4481"&gt;#4481&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3133" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Bug fixes and testing&lt;/strong&gt;&lt;/a&gt; including type printing with &lt;code&gt;-rectypes&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3133"&gt;#3133&lt;/a&gt;), arm64 assembler issues (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4511"&gt;#4511&lt;/a&gt;), and comprehensive test generation for DWARF debugging (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4468"&gt;#4468&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Heavy week with 39 commits including small integer type stabilization, atomic fields support, and LLVM backend development</summary><published>2025-08-17T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-32</id><title>Week 32, 2025: Active week with 27 commits featuring block indices, LLVM backend improvements, and multiple compiler optimizations</title><updated>2025-08-10T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Two new PRs opened focusing on LLVM backend and Merlin support, plus ongoing work on mode crossing functionality&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4476" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;LLVM exception handling&lt;/strong&gt;&lt;/a&gt; PR opened by &lt;a href="https://github.com/usuyus"&gt;Yusuf Onur Üşümez&lt;/a&gt; adding support for Raise, Pushtrap, and Poptrap instructions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4476"&gt;#4476&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Merlin support for new shapes&lt;/strong&gt;&lt;/a&gt; PR opened by &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; extending shape representation with missing UIDs for DWARF emission (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440"&gt;#4440&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode crossing functionality&lt;/strong&gt;&lt;/a&gt; continued development by &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; with per-axis version of Mode.Crossing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314"&gt;#4314&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active week with 27 commits featuring block indices, LLVM backend improvements, and multiple compiler optimizations</summary><published>2025-08-10T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-31</id><title>Week 31, 2025: Active development with atomic fields support, SIMD improvements, command-line flag deprecations, and Flambda2 optimizations.</title><updated>2025-08-03T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Five new PRs opened covering Flambda2 type system improvements, runtime quotations, and DWARF shape merging, with two PRs merged for JavaScript backend and debugging shapes.&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4405" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Five new PRs opened&lt;/strong&gt;&lt;/a&gt; this week with ongoing development in core areas: match-in-match heuristics tracking by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4405"&gt;#4405&lt;/a&gt;), recursive meet prevention for Flambda2 types (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4397"&gt;#4397&lt;/a&gt;), improved naked immediate meets (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4394"&gt;#4394&lt;/a&gt;), relations as projections implementation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4390"&gt;#4390&lt;/a&gt;), and runtime quotations system by &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Two major PRs merged&lt;/strong&gt;&lt;/a&gt; including JavaScript backend updates by &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; bringing ocamlj changes into main branch (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;#4638&lt;/a&gt;) and type shapes merger for DWARF functor support by &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;#4398&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 type system enhancements&lt;/strong&gt; with multiple interconnected PRs focusing on meet algorithm improvements, projection handling, and recursive type safety to support advanced match optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime quotations system&lt;/strong&gt; introducing new syntax with &lt;code&gt;&lt;[&lt;/code&gt; and &lt;code&gt;]&gt;&lt;/code&gt; brackets for AST manipulation and staged computation capabilities&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active development with atomic fields support, SIMD improvements, command-line flag deprecations, and Flambda2 optimizations.</summary><published>2025-08-03T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-30</id><title>Week 30, 2025: Major week with 40+ commits including new unboxed small integer types, SIMD enhancements, and string local annotations</title><updated>2025-07-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Two new PRs opened for flambda2 improvements while legacy work continues across JSIR backend and memory management&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4369" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New PRs opened&lt;/strong&gt;&lt;/a&gt; this week including flambda2 n-way join rewrite by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4369"&gt;#4369&lt;/a&gt;) and match-in-match heuristic development (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4374"&gt;#4374&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JSIR backend continued development&lt;/strong&gt;&lt;/a&gt; with multiple merged PRs by &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; including file extension changes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598"&gt;#4598&lt;/a&gt;), bug fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4620"&gt;#4620&lt;/a&gt;), and merge from ocamlj branch (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;#4638&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance improvements&lt;/strong&gt; delivered including mode solver regression fix (&lt;a href="https://github.com/oxcaml/oxcaml/commit/9d46f41"&gt;9d46f41&lt;/a&gt;), patricia tree optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/df3dacd"&gt;df3dacd&lt;/a&gt;), and greedy allocator enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/8e6d751"&gt;8e6d751&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime stability improvements&lt;/strong&gt; with better SEGV handling (&lt;a href="https://github.com/oxcaml/oxcaml/commit/1c7209c"&gt;1c7209c&lt;/a&gt;), atomic operations bug fixes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3fed616"&gt;3fed616&lt;/a&gt;), and garbage collection improvements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/85b92ad"&gt;85b92ad&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week with 40+ commits including new unboxed small integer types, SIMD enhancements, and string local annotations</summary><published>2025-07-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-29</id><title>Week 29, 2025: Major compiler improvements with SIMD Vec256 support, atomic primitives refactoring, and new LLVM backend features</title><updated>2025-07-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
One new issue opened about typer performance regression, one new draft PR for Mode.Crossing.Atom improvements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Typer performance regression&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; showing non-linear behavior in typing phase (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323"&gt;#4323&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode.Crossing.Atom improvements&lt;/strong&gt;&lt;/a&gt; draft PR opened by &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; adding per-axis version of Mode.Crossing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314"&gt;#4314&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler improvements with SIMD Vec256 support, atomic primitives refactoring, and new LLVM backend features</summary><published>2025-07-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-28</id><title>Week 28, 2025: Active development week with CPU feature detection improvements, stdlib portability enhancements, and type system refinements</title><updated>2025-07-13T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
New type system PR opened, build system fix merged, and segmentation fault issue resolved with BMI detection&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4273" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New type system enhancement&lt;/strong&gt;&lt;/a&gt; opened by &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; implementing Mode.Crossing usage in jkinds with performance analysis showing minimal impact (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4273"&gt;#4273&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system fix merged&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; resolving cross-device installation issues when ocamllex is on a different device (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292"&gt;#4292&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Multiple compiler improvements&lt;/strong&gt; delivered including lambda to flambda2 conversion exposure, symbol initialization optimization, and n-way join bug fixes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system enhancements&lt;/strong&gt; with mutable variable use tracking, recursive module constraint fixes, and externals information in CMS files&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime improvements&lt;/strong&gt; including non-float or_null handling, runtime metaprogramming operator validation, and sandbox version updates&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active development week with CPU feature detection improvements, stdlib portability enhancements, and type system refinements</summary><published>2025-07-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-27</id><title>Week 27, 2025: Active development week with 17 merged PRs implementing atomic operations improvements, CPU relaxation primitives, type system fixes, and Claude integration documentation</title><updated>2025-07-06T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Extensive backporting from upstream OCaml with type system improvements, runtime enhancements, and tooling additions across 17 merged PRs&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4241" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system robustness&lt;/strong&gt;&lt;/a&gt; improved through multiple backports from upstream OCaml including module type substitution fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4241"&gt;#4241&lt;/a&gt;), illegal recursive module checking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4240"&gt;#4240&lt;/a&gt;), and signature merge constraint refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4246"&gt;#4246&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4225" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime improvements&lt;/strong&gt;&lt;/a&gt; delivered including Domain.Stdlib implementation expansion (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4225"&gt;#4225&lt;/a&gt;), promoted header checking macros (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3493"&gt;#3493&lt;/a&gt;), and type hygiene fixes in compaction (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4256"&gt;#4256&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4234" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend optimizations&lt;/strong&gt;&lt;/a&gt; implemented with deterministic CSE parameter ordering (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4234"&gt;#4234&lt;/a&gt;), flow analysis improvements allowing Simple dominators (&lt;a href="https://github.com/oxcaml/oxcaml/issues/2782"&gt;#2782&lt;/a&gt;), and atomic operation return layout fixes for bytecode (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4265"&gt;#4265&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4206" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Claude integration support&lt;/strong&gt;&lt;/a&gt; added through comprehensive development documentation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4206"&gt;#4206&lt;/a&gt;) providing build commands, testing procedures, and coding style guidelines&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active development week with 17 merged PRs implementing atomic operations improvements, CPU relaxation primitives, type system fixes, and Claude integration documentation</summary><published>2025-07-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-26</id><title>Week 26, 2025: Major language feature addition with let mutable syntax plus ARM64 SIMD implementation and error message improvements</title><updated>2025-06-29T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Active week with 43 merged PRs covering language features, ARM64 improvements, compiler optimizations, and bug fixes&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3964" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Language implementation&lt;/strong&gt;&lt;/a&gt; merged major &lt;strong class="achievement"&gt;&lt;code&gt;let mutable&lt;/code&gt; feature&lt;/strong&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3964"&gt;#3964&lt;/a&gt;) enabling mutable variables without ref allocation overhead, plus &lt;strong class="achievement"&gt;void function types&lt;/strong&gt; support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4088"&gt;#4088&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 backend&lt;/strong&gt;&lt;/a&gt; received comprehensive &lt;strong class="achievement"&gt;SIMD intrinsics implementation&lt;/strong&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140"&gt;#4140&lt;/a&gt;) with full test coverage, stack overflow fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4104"&gt;#4104&lt;/a&gt;), and Rosetta compatibility improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4178"&gt;#4178&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4218" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler optimizations&lt;/strong&gt;&lt;/a&gt; delivered through Flambda2 improvements including unbound name checks (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4218"&gt;#4218&lt;/a&gt;), inlining annotations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4181"&gt;#4181&lt;/a&gt;), and continuation use handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4202"&gt;#4202&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4208" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system enhancements&lt;/strong&gt;&lt;/a&gt; including modality preservation in unboxed types (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4208"&gt;#4208&lt;/a&gt;), polymorphic variant bounds removal (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4198"&gt;#4198&lt;/a&gt;), and GADT mode crossing counterexamples (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4223"&gt;#4223&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4169" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime improvements&lt;/strong&gt;&lt;/a&gt; with finalizer bug fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4169"&gt;#4169&lt;/a&gt;), domain termination stack cache cleanup (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4153"&gt;#4153&lt;/a&gt;), and I/O channel flush error handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4193"&gt;#4193&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer experience&lt;/strong&gt;&lt;/a&gt; enhanced through better error messages (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4160"&gt;#4160&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4161"&gt;#4161&lt;/a&gt;), documentation updates (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4164"&gt;#4164&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4194"&gt;#4194&lt;/a&gt;), and bytecode SIMD primitive safety (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4176"&gt;#4176&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major language feature addition with let mutable syntax plus ARM64 SIMD implementation and error message improvements</summary><published>2025-06-29T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-25</id><title>Week 25, 2025: Multiple new stdlib modules, runtime optimizations, and documentation improvements merged this week</title><updated>2025-06-22T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Several compiler issues reported affecting package compatibility with OxCaml variant requiring specialized versions&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compilation failures&lt;/strong&gt;&lt;/a&gt; affecting external packages like ppx&lt;em&gt;import, ppxlib&lt;/em&gt;jane, and ppx_deriving reported by &lt;a href="https://github.com/joelreymont"&gt;Joel Reymont&lt;/a&gt; due to OxCaml-specific changes requiring compatible versions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141"&gt;#4141&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4146"&gt;#4146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4162" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Segmentation fault&lt;/strong&gt;&lt;/a&gt; during compilation reported by &lt;a href="https://github.com/gipec"&gt;Gilson Costa&lt;/a&gt; when installing ocaml-variants.5.2.0+ox due to missing FMA instructions, resolved by maintainers (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4162"&gt;#4162&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4156" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Tutorial issues&lt;/strong&gt;&lt;/a&gt; identified including missing footnote and module loading problems with parallel library setup reported by &lt;a href="https://github.com/shwestrick"&gt;Sam Westrick&lt;/a&gt; and &lt;a href="https://github.com/kayceesrk"&gt;KC Sivaramakrishnan&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4156"&gt;#4156&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4149"&gt;#4149&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4155" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system bug&lt;/strong&gt;&lt;/a&gt; with polymorphic parameters and letop interactions reported by &lt;a href="https://github.com/samsa1"&gt;Samuel Vivien&lt;/a&gt; affecting universal variable scope handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4155"&gt;#4155&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Multiple new stdlib modules, runtime optimizations, and documentation improvements merged this week</summary><published>2025-06-22T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-24</id><title>Week 24, 2025: Major project rebranding from flambda-backend to OxCaml with extensive SIMD enhancements and new documentation</title><updated>2025-06-15T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Major project rebranding with extensive backend improvements and ongoing runtime quotations development&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/7cd3a9de86b0957258bfe8bfbe0e0b80145e3e78" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Project-wide rebranding&lt;/strong&gt;&lt;/a&gt; from flambda-backend to OxCaml affecting all configuration files, documentation, build scripts, and test directories (&lt;a href="https://github.com/oxcaml/oxcaml/issues/7cd3a9de86b0957258bfe8bfbe0e0b80145e3e78"&gt;7cd3a9de86b0957258bfe8bfbe0e0b80145e3e78&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/90721ce009d4705c5fd4e6f61bd254bfa6e701df"&gt;90721ce009d4705c5fd4e6f61bd254bfa6e701df&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Extensive backend architecture improvements&lt;/strong&gt; including datalog system enhancements, flambda2 type system updates, and CMM code generation refinements across 28 commits this week&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Active development&lt;/strong&gt;&lt;/a&gt; on runtime quotations feature by &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; introducing AST-like structures and type system staging (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2858" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Community support&lt;/strong&gt;&lt;/a&gt; provided to &lt;a href="https://github.com/patrick-nicodemus"&gt;Patrick Nicodemus&lt;/a&gt; for ppxlib compilation issues with suggestions for using patched repositories (&lt;a href="https://github.com/oxcaml/oxcaml/issues/2858"&gt;#2858&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Build system and tooling updates&lt;/strong&gt; including VERSION file removal, config printout improvements, and license file updates to reflect the new OxCaml identity&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major project rebranding from flambda-backend to OxCaml with extensive SIMD enhancements and new documentation</summary><published>2025-06-15T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-23</id><title>Week 23, 2025: Heavy development week with 35 merged PRs covering new CLI options, compiler optimizations, and Domain module improvements</title><updated>2025-06-08T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
One new PR opened for runtime quotations feature, plus extensive cleanup and optimization work across compiler backend&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime quotations PR opened&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; introducing &lt;code&gt;&lt;[, ]&gt;&lt;/code&gt; bracket syntax and AST-like structure with stage-based type system (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4079" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Major compiler backend improvements&lt;/strong&gt;&lt;/a&gt; including register allocation shortcuts (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4079"&gt;#4079&lt;/a&gt;), stack overflow recovery (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4078"&gt;#4078&lt;/a&gt;), and garbage collection optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4051"&gt;#4051&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4099" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Systhreads4 restructuring&lt;/strong&gt;&lt;/a&gt; with stubs moved into runtime4 itself (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4099"&gt;#4099&lt;/a&gt;) and fiber stack improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4082"&gt;#4082&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4077" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system enhancements&lt;/strong&gt;&lt;/a&gt; covering mode cross modalities (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4077"&gt;#4077&lt;/a&gt;), visibility improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3974"&gt;#3974&lt;/a&gt;), and poly parameter fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4102"&gt;#4102&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4097" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system and tooling updates&lt;/strong&gt;&lt;/a&gt; including CI fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4097"&gt;#4097&lt;/a&gt;), ASAN build improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4087"&gt;#4087&lt;/a&gt;), and AST version error enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4084"&gt;#4084&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Heavy development week with 35 merged PRs covering new CLI options, compiler optimizations, and Domain module improvements</summary><published>2025-06-08T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-22</id><title>Week 22, 2025: Heavy development week with 30 commits implementing continuation specialization, mode documentation, x86 optimizations, and jkind inference improvements</title><updated>2025-06-01T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Active compiler development with continuation specialization implementation, assembly directive cleanups, jkind inference improvements, and runtime fixes&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3501" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Continuation specialization&lt;/strong&gt;&lt;/a&gt; system implementation with match-in-match optimization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3501"&gt;#3501&lt;/a&gt;) introducing continuation copying and specialization capabilities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3952" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Assembly directive cleanup&lt;/strong&gt;&lt;/a&gt; removing deprecated &lt;code&gt;asm_directives_new&lt;/code&gt; modules and consolidating functionality (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3952"&gt;#3952&lt;/a&gt;) across multiple backend files&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3814" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Jkind inference&lt;/strong&gt;&lt;/a&gt; enhancements including GADT support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3814"&gt;#3814&lt;/a&gt;) and polymorphic variant improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3845"&gt;#3845&lt;/a&gt;) with later revert of GADT changes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4066"&gt;#4066&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4062" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime stability&lt;/strong&gt;&lt;/a&gt; improvements including &lt;code&gt;exn&lt;/code&gt; crossing portable/contended modes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4062"&gt;#4062&lt;/a&gt;), GC bug fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4042"&gt;#4042&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4046"&gt;#4046&lt;/a&gt;), and memory mapping optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4004"&gt;#4004&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4071" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CI infrastructure&lt;/strong&gt;&lt;/a&gt; enhancements with 80-character line check skipping support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4071"&gt;#4071&lt;/a&gt;) and build system improvements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Heavy development week with 30 commits implementing continuation specialization, mode documentation, x86 optimizations, and jkind inference improvements</summary><published>2025-06-01T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-21</id><title>Week 21, 2025: Major cleanup removing capsule and effect APIs, plus atomics support for value_or_null, unboxed records enhancements, and x86 backend improvements</title><updated>2025-05-25T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
One new PR opened for mixed module support, three documentation-related issues reported, plus large-scale API cleanup effort&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4020" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New PR opened&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/jra4"&gt;James Rayman&lt;/a&gt; for automatic reordering of module fields to allow mixed modules with extensive typing and lambda changes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4020"&gt;#4020&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4041" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Major API removal&lt;/strong&gt;&lt;/a&gt; completed with deletion of capsule and effect APIs, removing thousands of lines of experimental code (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4041"&gt;#4041&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3961" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system improvements&lt;/strong&gt;&lt;/a&gt; including modality fixes, lattice flipping refactor for modes, and separability axis renaming from &lt;code&gt;non_separable&lt;/code&gt; to &lt;code&gt;maybe_separable&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3961"&gt;#3961&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3949"&gt;#3949&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4036"&gt;#4036&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4030" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend enhancements&lt;/strong&gt;&lt;/a&gt; with ARM64 register encoding fixes, stack checks in CI, and test infrastructure improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4030"&gt;#4030&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3928"&gt;#3928&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4019"&gt;#4019&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3962" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Attribute cleanup&lt;/strong&gt;&lt;/a&gt; removing &lt;code&gt;@no_mutable_implied_modalities&lt;/code&gt; and updating flambda-backend tests to use &lt;code&gt;[@opaque]&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3962"&gt;#3962&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4019"&gt;#4019&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major cleanup removing capsule and effect APIs, plus atomics support for value_or_null, unboxed records enhancements, and x86 backend improvements</summary><published>2025-05-25T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-20</id><title>Week 20, 2025: Active development week with separability axis implementation, CI enhancements, runtime fixes, and extensive type system improvements</title><updated>2025-05-18T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Issue opened about improving code example quality in documentation, plus ongoing runtime quotations PR development&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation quality improvement&lt;/strong&gt;&lt;/a&gt; request by &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; to make code examples in jane/doc/extensions copy-paste ready (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;#4016&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime quotations development&lt;/strong&gt;&lt;/a&gt; continues with &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt;'s extensive implementation introducing &lt;code&gt;&lt;[&lt;/code&gt;, &lt;code&gt;]&gt;&lt;/code&gt; bracket syntax and stage-based type system (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active development week with separability axis implementation, CI enhancements, runtime fixes, and extensive type system improvements</summary><published>2025-05-18T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-19</id><title>Week 19, 2025: Major bytecode compilation improvements with new Blambda IR, ARM64 optimizations, and signal stack enhancements</title><updated>2025-05-11T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Comprehensive bytecode compilation overhaul with new Blambda IR implementation and multiple backend optimizations&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major bytecode compilation infrastructure&lt;/strong&gt; introduced with new Blambda intermediate representation, providing cleaner separation between Lambda and bytecode generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/58b8e0c10da98ee3ce5e808fa81f3bf4e05fa506"&gt;58b8e0c1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Bytecode generator refactoring&lt;/strong&gt; with comprehensive reformatting and code organization improvements, plus new &lt;code&gt;printblambda.ml&lt;/code&gt; module for debugging support (&lt;a href="https://github.com/oxcaml/oxcaml/commit/be6e477ef3177e765c665752df7bf16ae1865ed9"&gt;be6e477e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 backend optimizations&lt;/strong&gt; including efficient implementations for population count and count trailing zeros without requiring CSSC extensions (&lt;a href="https://github.com/oxcaml/oxcaml/commit/30b5ee65653db2e02b17404a6ad6b72a84c13b49"&gt;30b5ee65&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Critical miscompilation fix&lt;/strong&gt; for string operations addressing liveness errors that could cause incorrect code generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/9994ecdb57ea0c8abcb0afef8d22db12f10d7d77"&gt;9994ecdb&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;X86 directive improvements&lt;/strong&gt; with implementation and subsequent revert of new assembler directives, demonstrating careful testing approach (&lt;a href="https://github.com/oxcaml/oxcaml/commit/66a06b9e7871f3f46debb717182deb40cc32023f"&gt;66a06b9e&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/77ac4507d58873e6a47ee023de0a9c4b751c5390"&gt;77ac4507&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime system enhancements&lt;/strong&gt; including signal handling improvements and profiling category fixes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/768b131f89d6e69ea9f571d7acb638570a9e44a4"&gt;768b131f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system improvements&lt;/strong&gt; with better handling of omitted arguments and type argument sorting (&lt;a href="https://github.com/oxcaml/oxcaml/commit/54d64677f66920099264c718c8e0207048818ff3"&gt;54d64677&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation cleanup&lt;/strong&gt; addressing spelling errors and code block formatting issues (&lt;a href="https://github.com/oxcaml/oxcaml/commit/05cc2b018d6fc61c3133df19350bfc50106a236b"&gt;05cc2b01&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/2b308d4926a14b3c4a4a0fcf289b0a67305ef9e1"&gt;2b308d49&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major bytecode compilation improvements with new Blambda IR, ARM64 optimizations, and signal stack enhancements</summary><published>2025-05-11T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-18</id><title>Week 18, 2025: New SIMD and small-numbers documentation, CFG instruction tracking, and Flambda2 phantom bindings support</title><updated>2025-05-04T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Multiple new PRs opened including Flambda2 indexing improvements and phantom bindings support with ongoing runtime quotations work&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3954" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New PRs opened&lt;/strong&gt;&lt;/a&gt; this week include Flambda2 nativeint indexing operations by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3954"&gt;#3954&lt;/a&gt;) and phantom bindings support by &lt;a href="https://github.com/lthls"&gt;Vincent Laviron&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3937"&gt;#3937&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime quotations implementation&lt;/strong&gt;&lt;/a&gt; continues with extensive AST-like structure and stage-based type system by &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3933" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda2 optimization improvements&lt;/strong&gt;&lt;/a&gt; delivered through CFG instruction sequence tracking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3933"&gt;#3933&lt;/a&gt;), replay history for consistent name matching (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3302"&gt;#3302&lt;/a&gt;), and phantom bindings restoration with comprehensive bug fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3937"&gt;#3937&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3958" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Testing and formatting improvements&lt;/strong&gt;&lt;/a&gt; with SIMD array test refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3958"&gt;#3958&lt;/a&gt;), comprehensive test formatting (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3957"&gt;#3957&lt;/a&gt;), and code cleanup with unused function removal (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3950"&gt;#3950&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>New SIMD and small-numbers documentation, CFG instruction tracking, and Flambda2 phantom bindings support</summary><published>2025-05-04T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-17</id><title>Week 17, 2025: Major backend improvements including register allocation fixes, DLS API changes, and comprehensive kind system documentation</title><updated>2025-04-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
24 commits addressing backend optimization, Flambda2 improvements, register allocation fixes, and compiler infrastructure&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Register allocation&lt;/strong&gt; improvements with new threshold configuration and selection fixes addressing performance on large functions (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4b42aa3a1bffc28a2cc55ca6887f47dfe33578f0"&gt;#3912&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/79633d2b5c7e72a7e66392088217e81d1ae8e3a3"&gt;#3913&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 backend&lt;/strong&gt; enhancements including removal of unary negation primitive, continuation parameter indexing improvements, and DLS API updates (&lt;a href="https://github.com/oxcaml/oxcaml/commit/db8aba1dff1a87a1c75d6ca5a1f63e680f93597b"&gt;#3572&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/1c732b74778ce16bf9c8c3cba7db95155b2b932b"&gt;#3303&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/48e006b0fe3d0589ccc2d351c64d991620773fba"&gt;#3885&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM architecture&lt;/strong&gt; support improvements with new assembly directives, stack check allowances, and debugging patches (&lt;a href="https://github.com/oxcaml/oxcaml/commit/35b86850f07b6b2d4a94c03e2077e1e8c92bfe31"&gt;#3929&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/85e96496d7a5390c67453eef91c05af44dc54256"&gt;#3927&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/03c8aa76efeb189e46110c492e07c85494405f66"&gt;#3917&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Assembly generation&lt;/strong&gt; cleanup including FCM deletion in emitters, direct assignment removal, and expression ordering fixes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/0ef22fba83ad1979d2998c1c0887765bc84f8d26"&gt;#3892&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/7524bbb1bfcc9329e72861ca974c61e28446bc9b"&gt;#3906&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/e23ff86b5b3f240e077cd701c5f950d8c958dde3"&gt;#3902&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;AMD64 SIMD&lt;/strong&gt; refactoring and mixed-float record handling improvements affecting vectorization capabilities (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6284de0005064d72c17fdaab7dfb534c5cf1f9dd"&gt;#3907&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/7d862d097ce9189f8a06ecf4c2a93a81561ab050"&gt;#3915&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major backend improvements including register allocation fixes, DLS API changes, and comprehensive kind system documentation</summary><published>2025-04-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-16</id><title>Week 16, 2025: Intensive week with 35 merged PRs focusing on backend improvements, SIMD instruction generation, and register allocation refactoring</title><updated>2025-04-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
35 PRs merged this week focusing on backend refactoring, register allocation improvements, and compiler infrastructure enhancements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3780" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Register allocation infrastructure&lt;/strong&gt;&lt;/a&gt; underwent comprehensive refactoring with &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; delivering major improvements to register stamps, machine registers (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3780"&gt;#3780&lt;/a&gt;), register names and creation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3772"&gt;#3772&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3876" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;AMD64 backend improvements&lt;/strong&gt;&lt;/a&gt; including emit code formatting and warning enablement across processor modules (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3876"&gt;#3876&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3862"&gt;#3862&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3861"&gt;#3861&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3858"&gt;#3858&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3881" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;First-class module implementations&lt;/strong&gt;&lt;/a&gt; replaced for both x86 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3881"&gt;#3881&lt;/a&gt;) and ARM (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3880"&gt;#3880&lt;/a&gt;) architectures improving performance&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3866" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda2 type system enhancements&lt;/strong&gt;&lt;/a&gt; including CSE join result improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3866"&gt;#3866&lt;/a&gt;), type relation refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3867"&gt;#3867&lt;/a&gt;), and equation handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3873"&gt;#3873&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3869" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code quality improvements&lt;/strong&gt;&lt;/a&gt; with widespread warning enablement, formatting standardization, and better error handling across backend modules (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3869"&gt;#3869&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3870"&gt;#3870&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3871"&gt;#3871&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3882" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Data flow analysis fixes&lt;/strong&gt;&lt;/a&gt; for continuations that are never called ensuring correct optimization behavior (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3882"&gt;#3882&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3849" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Block insertion improvements&lt;/strong&gt;&lt;/a&gt; moved to &lt;code&gt;Cfg_layout&lt;/code&gt; for better code organization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3849"&gt;#3849&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Intensive week with 35 merged PRs focusing on backend improvements, SIMD instruction generation, and register allocation refactoring</summary><published>2025-04-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-15</id><title>Week 15, 2025: Major backend refactoring week with register allocation improvements, CFG simplification, and mode system enhancements</title><updated>2025-04-13T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Comprehensive backend modernization across register allocation, ARM64 code generation, and type system components&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3835" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Register allocation modernization&lt;/strong&gt;&lt;/a&gt; with extensive refactoring removing legacy IRC fields from Reg.t (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3835"&gt;#3835&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3836"&gt;#3836&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3838"&gt;#3838&lt;/a&gt;) and introducing new Substitution module for cleaner abstraction&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3813" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 backend improvements&lt;/strong&gt;&lt;/a&gt; including extended DSL capabilities (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3813"&gt;#3813&lt;/a&gt;), peephole pass refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3797"&gt;#3797&lt;/a&gt;), and enhanced instruction emission (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3827"&gt;#3827&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3831"&gt;#3831&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3538" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda2 type system enhancements&lt;/strong&gt;&lt;/a&gt; with new n-way join algorithm implementation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3538"&gt;#3538&lt;/a&gt;) and meet operation improvements for better type inference performance&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3819" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime and memory management fixes&lt;/strong&gt;&lt;/a&gt; including Weak.set ARM64 fix (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3819"&gt;#3819&lt;/a&gt;), hugepage support restoration (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3834"&gt;#3834&lt;/a&gt;), and runtime events test improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3830"&gt;#3830&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3768" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code generation improvements&lt;/strong&gt;&lt;/a&gt; with CFG simplification pass (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3768"&gt;#3768&lt;/a&gt;), operation module consolidation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3805"&gt;#3805&lt;/a&gt;), and peephole optimization enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode system development&lt;/strong&gt;&lt;/a&gt; introducing statefulness and visibility axes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3774"&gt;#3774&lt;/a&gt;) with comprehensive syntax documentation updates and enhanced type system integration&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major backend refactoring week with register allocation improvements, CFG simplification, and mode system enhancements</summary><published>2025-04-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-14</id><title>Week 14, 2025: Major compiler backend refactoring with new instruction selection code, implicit unboxed records, and modal kinds system</title><updated>2025-04-06T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Intensive backend refactoring with 31 commits focusing on instruction selection, code generation, and type system improvements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Backend architecture overhaul&lt;/strong&gt; with extensive refactoring of instruction selection code affecting both AMD64 and ARM64 targets (&lt;a href="https://github.com/oxcaml/oxcaml/commit/1d4aee2ab69103ffadc409670986acfc06a2843d"&gt;1d4aee2&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/fd8bf0a4b6332f1d184c3654e5f9bfc60f59229b"&gt;fd8bf0a&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/683ba77ee967cd79c8f1ba95be0b647fc16bcce3"&gt;683ba77&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Code generation improvements&lt;/strong&gt; including new target-specific interfaces and cleaner separation of concerns (&lt;a href="https://github.com/oxcaml/oxcaml/commit/517ca3934360c35e02f350ec6356461a77ea3459"&gt;517ca39&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/c480f838d2315b1c48af9d65287c170dfb3ea92c"&gt;c480f83&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/df336a3b3d8ede4d9a9847852f39b93e262d2c29"&gt;df336a3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Register allocation enhancements&lt;/strong&gt; with stack class refactoring and improved validation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/1a88f2076364d023825a3f2be5e1ff94fb9cdd63"&gt;1a88f20&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/63f8e153f28fb552523fa5b8e452ae7873d05599"&gt;63f8e15&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/437af94daad591e41934d887808a6d232fcaf051"&gt;437af94&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system advances&lt;/strong&gt; in comprehensions layouts and jkind violation error reporting (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d58e67d23a51904fefee773124d0f3d6e7c98e75"&gt;d58e67d&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/2657341164628e995f594c44a25b92ca26c4ec18"&gt;2657341&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Bug fixes&lt;/strong&gt; including probe free variables handling, unsafe mode crossing persistence, and condition wait reversion (&lt;a href="https://github.com/oxcaml/oxcaml/commit/cf211625f7ae8e4f241a7c96a3996fc2c7c12ed7"&gt;cf211625&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/1661e74872dd5eaa8de699fa3dff9fd5d00f0277"&gt;1661e74&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/7a1e3674378c82dc7675c359e995fd0e8ab781e9"&gt;7a1e367&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler backend refactoring with new instruction selection code, implicit unboxed records, and modal kinds system</summary><published>2025-04-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-13</id><title>Week 13, 2025: Active development week with 35 commits introducing portable continuations, new externals extraction tool, and ARM64 SIMD improvements</title><updated>2025-03-30T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Intensive development across compiler backend, runtime system, and ARM64 architecture with 35 merged commits from multiple contributors&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3669" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend compiler optimizations&lt;/strong&gt;&lt;/a&gt; with CMM shift and tag improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3669"&gt;#3669&lt;/a&gt;), register allocator memory allocation reductions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3683"&gt;#3683&lt;/a&gt;), and removal of unused &lt;code&gt;part&lt;/code&gt; field from &lt;code&gt;Reg.t&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3720"&gt;#3720&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3752" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime system enhancements&lt;/strong&gt;&lt;/a&gt; including signal handling improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3752"&gt;#3752&lt;/a&gt;), atomic operations specialization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3731"&gt;#3731&lt;/a&gt;), and pending actions handling optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3740"&gt;#3740&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3741"&gt;#3741&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3742"&gt;#3742&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3739"&gt;#3739&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3733" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Standard library improvements&lt;/strong&gt;&lt;/a&gt; with mode-related enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3733"&gt;#3733&lt;/a&gt;), Unix.file_descr immediate annotation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3712"&gt;#3712&lt;/a&gt;), and portable annotations for Unix and Thread modules (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3694"&gt;#3694&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3756" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Bug fixes and maintenance&lt;/strong&gt;&lt;/a&gt; including Invalid exception args fix (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3756"&gt;#3756&lt;/a&gt;), branch relaxation call fix (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3762"&gt;#3762&lt;/a&gt;), modality axis handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3738"&gt;#3738&lt;/a&gt;), and ocamltest line number fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3548"&gt;#3548&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3580" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation updates&lt;/strong&gt;&lt;/a&gt; for Datalog scheduling functions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3580"&gt;#3580&lt;/a&gt;) and magic number bumps for version 5.2.0minus-9 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3753"&gt;#3753&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3510" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development tool improvements&lt;/strong&gt;&lt;/a&gt; with objinfo code loading enhancement (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3510"&gt;#3510&lt;/a&gt;) and example file cleanup (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3755"&gt;#3755&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active development week with 35 commits introducing portable continuations, new externals extraction tool, and ARM64 SIMD improvements</summary><published>2025-03-30T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-12</id><title>Week 12, 2025: Major Atomic module API improvements, ARM64 SIMD enhancements, and GC parameter optimizations across 27 commits</title><updated>2025-03-23T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Two new issues opened addressing code generation optimization and register allocation, with extensive ARM64 backend work&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3718" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code generation optimization&lt;/strong&gt;&lt;/a&gt; issue opened by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; identifying problems with &lt;code&gt;bind&lt;/code&gt; function usage affecting peephole optimizations around array indexing and other performance-sensitive operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3718"&gt;#3718&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3719" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 register allocation&lt;/strong&gt;&lt;/a&gt; enhancement proposed by &lt;a href="https://github.com/gretay-js"&gt;Greta Yorsh&lt;/a&gt; for implementing register rotation optimization in CFG to match upstream compiler behavior and improve code density (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3719"&gt;#3719&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime quotations PR&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; continues development with 9K+ line addition introducing &lt;code&gt;&lt;[, ]&gt;&lt;/code&gt; bracket syntax, AST-like structure in camlInternalQuote module, and stage-based type system extensions (&lt;a href="https://github.com/oxcaml/oxcaml/pull/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 backend modernization&lt;/strong&gt; with multiple commits improving warning coverage, enabling unaligned accesses, and substantial SIMD infrastructure development (&lt;a href="https://github.com/oxcaml/oxcaml/commit/5d5e55c4ca1450b444bfcc3782b6bcb8fc05c5fe"&gt;5d5e55c4ca1450b444bfcc3782b6bcb8fc05c5fe&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/6c7c7cde0f4ac893beeab5135708273242622787"&gt;6c7c7cde0f4ac893beeab5135708273242622787&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Backend cleanup&lt;/strong&gt; removing obsolete AMD64 selection module and unused register fields while improving type safety (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3974014923149f04e071b60ec885ef43fd812e90"&gt;3974014923149f04e071b60ec885ef43fd812e90&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/ebb98a1e9bab9b448cf182b4c877f4dce0525fc2"&gt;ebb98a1e9bab9b448cf182b4c877f4dce0525fc2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Mode crossing implementation&lt;/strong&gt; for &lt;code&gt;mutable(m0)&lt;/code&gt; enabling new type system features around mutability modes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c570e0640beec93fcebd06066a21c22c308f0f50"&gt;c570e0640beec93fcebd06066a21c22c308f0f50&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;AddressSanitizer compatibility&lt;/strong&gt; restored after previous revert, improving build compatibility for debugging tools (&lt;a href="https://github.com/oxcaml/oxcaml/commit/88559392024ad607ce99d9060582a31f4c30931a"&gt;88559392024ad607ce99d9060582a31f4c30931a&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major Atomic module API improvements, ARM64 SIMD enhancements, and GC parameter optimizations across 27 commits</summary><published>2025-03-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-11</id><title>Week 11, 2025: None</title><updated>2025-03-16T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 11, 2025&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 11, 2025</summary><published>2025-03-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-10</id><title>Week 10, 2025: Major week with new alternative Effects API, `-infer-with-bounds` flag removal, record field reordering, and 25 commits across runtime, typing, and backend systems</title><updated>2025-03-09T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Intensive backend optimization week focusing on polymorphic comparison elimination, CMM function refactoring, and comprehensive code quality improvements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Large-scale polymorphic comparison elimination&lt;/strong&gt; across multiple backend modules including AMD64, ARM64, CFG, debug, regalloc, and peephole systems for improved performance and code quality&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CMM function refactoring&lt;/strong&gt; to be more generic over operand width, enhancing code generation flexibility (&lt;a href="https://github.com/oxcaml/oxcaml/commit/7811bd72fa242b2ea795b05f007ae708109fefd0"&gt;7811bd72fa242b2ea795b05f007ae708109fefd0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Locals x Effects II&lt;/strong&gt; implementation advancing the integration of local values with effects system (&lt;a href="https://github.com/oxcaml/oxcaml/commit/26a0b0cb1e65b30b1c92069e4c16dc44da532e5b"&gt;26a0b0cb1e65b30b1c92069e4c16dc44da532e5b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced debugging and optimization&lt;/strong&gt; for with-kinds functionality including improved debugging output (&lt;a href="https://github.com/oxcaml/oxcaml/commit/29c4fc1f6e854d1b6296105728751c715b089e46"&gt;29c4fc1f6e854d1b6296105728751c715b089e46&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Root safety improvements&lt;/strong&gt; in &lt;code&gt;caml_register_named_value&lt;/code&gt; strengthening runtime memory management (&lt;a href="https://github.com/oxcaml/oxcaml/commit/358cd7ce9060edb68753d30033ae5b0f0827bc40"&gt;358cd7ce9060edb68753d30033ae5b0f0827bc40&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Major GC work units refactoring&lt;/strong&gt; updating slice work calculations and memory management (&lt;a href="https://github.com/oxcaml/oxcaml/commit/fb3b767ccaf985ea38c91705541ec83bd7301cbe"&gt;fb3b767ccaf985ea38c91705541ec83bd7301cbe&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;AddressSanitizer compatibility&lt;/strong&gt; improvements with build fixes and subsequent revert due to issues (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6ffa5abaefc8d1f83f18808db325937ea9454404"&gt;6ffa5abaefc8d1f83f18808db325937ea9454404&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/1cdf2811acf6e8f05dfef3f16c87593b9fb80de0"&gt;1cdf2811acf6e8f05dfef3f16c87593b9fb80de0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Nullability fast-path optimization&lt;/strong&gt; improving performance for null-checking operations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e1ef6f059170bfed869f56ccdb2e78377720ca5b"&gt;e1ef6f059170bfed869f56ccdb2e78377720ca5b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Datalog dependency cleanup&lt;/strong&gt; removing &lt;code&gt;Named_ref&lt;/code&gt; dependencies from trie.ml and leapfrog.ml for better modularity (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b584f5fb39faae843e6241745bc8eb5f70e03f82"&gt;b584f5fb39faae843e6241745bc8eb5f70e03f82&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week with new alternative Effects API, `-infer-with-bounds` flag removal, record field reordering, and 25 commits across runtime, typing, and backend systems</summary><published>2025-03-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-9</id><title>Week 9, 2025: Core compiler improvements with instruction ID abstraction, GC work accounting fixes, and new stack allocation documentation</title><updated>2025-03-02T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Type-directed integer literal disambiguation and runtime quotations PRs opened, with ongoing sign-extension validation discussion&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3617" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type-directed disambiguation&lt;/strong&gt;&lt;/a&gt; for integer literals opened by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; to reduce verbosity of unboxed types using type annotations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3617"&gt;#3617&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime quotations implementation&lt;/strong&gt;&lt;/a&gt; in development by &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; introducing &lt;code&gt;&lt;[, ]&gt;&lt;/code&gt; bracket syntax and AST-like structure with stage typing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3638" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Sign-extension validation&lt;/strong&gt;&lt;/a&gt; issue raised by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; regarding proper sign-extension of int32 values in mixed blocks for Flambda2 compatibility (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3638"&gt;#3638&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Core compiler improvements with instruction ID abstraction, GC work accounting fixes, and new stack allocation documentation</summary><published>2025-03-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-8</id><title>Week 8, 2025: Major week with 20 commits including runtime events fixes, capsule API improvements, and extensive Flambda2 enhancements</title><updated>2025-02-23T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Extensive lambda function system refactoring, Flambda2 region tracking improvements, and comprehensive ephemeron garbage collection fixes&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Lambda function system overhaul&lt;/strong&gt; with significant changes to &lt;code&gt;Lambda.lfunction&lt;/code&gt; structure including cleanup of &lt;code&gt;ret_mode&lt;/code&gt; and &lt;code&gt;region&lt;/code&gt; fields, affecting core compilation pipeline (&lt;a href="https://github.com/oxcaml/oxcaml/commit/1a73a72b385049b6a1e9ded22cc74b68e614f62f"&gt;1a73a72&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 parent region tracking&lt;/strong&gt; implementation providing enhanced memory management capabilities for the advanced optimizer (&lt;a href="https://github.com/oxcaml/oxcaml/commit/92d8707a773ac497b9b3a63c6709421667130802"&gt;92d8707&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CMM unboxed field operations refactoring&lt;/strong&gt; improving backend code generation for unboxed record and variant field access (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d6971f8895e4296e8dda8bb84010beac2c7a1459"&gt;d6971f8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Ephemeron garbage collection improvements&lt;/strong&gt; with proper clearing of ephemerons during minor GC cycles, affecting weak reference behavior (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c1a05006ae138e7450c73117612369c0ef812eb1"&gt;c1a0500&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 axis normalization optimization&lt;/strong&gt; skipping irrelevant axes during normalize operations for improved compilation performance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/a41be0f458ca4c0a0d5a3b51c9fd2eab1b343966"&gt;a41be0f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Build system improvements&lt;/strong&gt; with conditional OCAMLPARAM setting only when BUILD_OCAMLPARAM is defined (&lt;a href="https://github.com/oxcaml/oxcaml/commit/a7eb55262fad22d5a064b7d8ad3d45d8aa780a16"&gt;a7eb552&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory tracing enhancements&lt;/strong&gt; porting upstream memtrace improvements for better debugging capabilities (&lt;a href="https://github.com/oxcaml/oxcaml/commit/eb3fbc8a18401d79e7dec8d2c525b2abec1aaa7a"&gt;eb3fbc8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Test infrastructure updates&lt;/strong&gt; including functorized test improvements in &lt;code&gt;test_gen_u_array.ml&lt;/code&gt; and probe handler parameter fixes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/dbfaa329313e6da42ab40336b4beff79db7bc84a"&gt;dbfaa32&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/e743d6c5fdfd190eabc44c6747a2404ba3ed62b9"&gt;e743d6c&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week with 20 commits including runtime events fixes, capsule API improvements, and extensive Flambda2 enhancements</summary><published>2025-02-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-7</id><title>Week 7, 2025: Major jkind system improvements with 30 commits including with-kinds implementation, AddressSanitizer support, and runtime enhancements</title><updated>2025-02-16T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
One new issue reported regarding an elusive arm64+greedy compilation bug with cross-references to related issues&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3574" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compilation bug investigation&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; reporting arm64+greedy miscompilation issue (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3574"&gt;#3574&lt;/a&gt;) with cross-references to related failures in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3496"&gt;#3496&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/oxcaml/issues/3561"&gt;#3561&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Bug reproduction efforts&lt;/strong&gt; by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; setting up compile loops with different random seeds on arm64 machines to get consistent reproducer&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major jkind system improvements with 30 commits including with-kinds implementation, AddressSanitizer support, and runtime enhancements</summary><published>2025-02-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-6</id><title>Week 6, 2025: Expanded zero-alloc infrastructure with new command-line tools, enhanced unboxed type support, and improved compiler optimization features</title><updated>2025-02-09T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Major compiler infrastructure improvements with 17 merged PRs focusing on zero-alloc checking, type system enhancements, and optimization features&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3125" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Zero-alloc infrastructure expansion&lt;/strong&gt;&lt;/a&gt; with major improvements including new command-line flag support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3125"&gt;#3125&lt;/a&gt;), custom error messaging (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3143"&gt;#3143&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3228"&gt;#3228&lt;/a&gt;), and new assume&lt;em&gt;unless&lt;/em&gt;opt payload (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3140"&gt;#3140&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system enhancements&lt;/strong&gt;&lt;/a&gt; including removal of restrictions on non-value types in unboxed types (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558"&gt;#3558&lt;/a&gt;), improved field_set behavior (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3550"&gt;#3550&lt;/a&gt;), and enhanced shift operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3523"&gt;#3523&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3537" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda2 type system improvements&lt;/strong&gt;&lt;/a&gt; with enhanced meet operations returning new typing environments (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3537"&gt;#3537&lt;/a&gt;), constant aliasing support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3539"&gt;#3539&lt;/a&gt;), and continued work on issue &lt;a href="https://github.com/oxcaml/oxcaml/issues/2857"&gt;#2857&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3528"&gt;#3528&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3415" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler pipeline refinements&lt;/strong&gt;&lt;/a&gt; including updated CMM helpers interface for additional integer sizes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3415"&gt;#3415&lt;/a&gt;), CFG polling optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3390"&gt;#3390&lt;/a&gt;), and debug information enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3118"&gt;#3118&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3531" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation and testing improvements&lt;/strong&gt;&lt;/a&gt; with enhanced unboxed types documentation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3531"&gt;#3531&lt;/a&gt;), improved variable printing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3546"&gt;#3546&lt;/a&gt;), and string validation fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3540"&gt;#3540&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime quotations development&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; continuing work on comprehensive runtime quotations implementation including AST representation, staging support, and parsing infrastructure (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;#4395&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Expanded zero-alloc infrastructure with new command-line tools, enhanced unboxed type support, and improved compiler optimization features</summary><published>2025-02-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-5</id><title>Week 5, 2025: None</title><updated>2025-02-02T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 5, 2025&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 5, 2025</summary><published>2025-02-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-4</id><title>Week 4, 2025: None</title><updated>2025-01-26T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 4, 2025&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 4, 2025</summary><published>2025-01-26T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-3</id><title>Week 3, 2025: Major vectorizer expansion with comprehensive tests, or_null feature implementation, and new CLI flags</title><updated>2025-01-19T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Two compiler optimization issues opened discussing Cmm IR improvements and selection logic enhancements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3484" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cmm optimization architecture&lt;/strong&gt;&lt;/a&gt; discussion opened by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; identifying underutilized IR potential with proposal for SSA-form replacement (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3484"&gt;#3484&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3480" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Selection logic optimization&lt;/strong&gt;&lt;/a&gt; issue raised by &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt; highlighting missed optimizations for non-simple subexpressions in arithmetic operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3480"&gt;#3480&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major vectorizer expansion with comprehensive tests, or_null feature implementation, and new CLI flags</summary><published>2025-01-19T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-2</id><title>Week 2, 2025: None</title><updated>2025-01-12T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 2, 2025&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 2, 2025</summary><published>2025-01-12T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2025/week-1</id><title>Week 1, 2025: None</title><updated>2025-01-05T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 1, 2025&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 1, 2025</summary><published>2025-01-05T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-52</id><title>Week 52, 2024: None</title><updated>2024-12-29T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 52, 2024&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 52, 2024</summary><published>2024-12-29T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-51</id><title>Week 51, 2024: None</title><updated>2024-12-22T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 51, 2024&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 51, 2024</summary><published>2024-12-22T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-50</id><title>Week 50, 2024: None</title><updated>2024-12-15T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 50, 2024&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 50, 2024</summary><published>2024-12-15T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-49</id><title>Week 49, 2024: Major week with unboxed records feature implementation, GC improvements, and backend optimizations</title><updated>2024-12-08T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Extensive development on unboxed types, uniqueness analysis, GC fixes, and backend optimizations across multiple PRs&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3229" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed records implementation&lt;/strong&gt;&lt;/a&gt; represents the biggest feature addition with comprehensive syntax support including record creation &lt;code&gt;#{field = value}&lt;/code&gt;, pattern matching &lt;code&gt;#{}&lt;/code&gt;, field access &lt;code&gt;E.#l&lt;/code&gt;, and full type system integration (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3229"&gt;#3229&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3319" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Uniqueness analysis improvements&lt;/strong&gt;&lt;/a&gt; with stable DRF uniqueness implementation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3319"&gt;#3319&lt;/a&gt;), overwrite expression cherry-picking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3310"&gt;#3310&lt;/a&gt;), and pattern consumption for unique barriers (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3335"&gt;#3335&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3332" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Garbage collection fixes&lt;/strong&gt;&lt;/a&gt; addressing ephemeron-adoption problems (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3332"&gt;#3332&lt;/a&gt;), mark-delay pacing issues (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3331"&gt;#3331&lt;/a&gt;), and minor GC requests when marking fails (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3333"&gt;#3333&lt;/a&gt;), with one fix reverted (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3341"&gt;#3341&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3343" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend optimizations&lt;/strong&gt;&lt;/a&gt; for unboxed products on ARM64 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3343"&gt;#3343&lt;/a&gt;) and unboxed pair returns from C externals (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3337"&gt;#3337&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3342" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development infrastructure&lt;/strong&gt;&lt;/a&gt; improvements with macOS CI tweaks (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3342"&gt;#3342&lt;/a&gt;), modality semantics workarounds (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3338"&gt;#3338&lt;/a&gt;), and PPX attribute handling improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3334"&gt;#3334&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week with unboxed records feature implementation, GC improvements, and backend optimizations</summary><published>2024-12-08T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-48</id><title>Week 48, 2024: Week featured new template instantiation features, major capsule API enhancements, and extensive CFG backend refactoring work</title><updated>2024-12-01T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Extensive CFG backend refactoring with new modules and performance improvements, plus CI infrastructure updates&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3294" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CFG backend restructuring&lt;/strong&gt;&lt;/a&gt; with extraction of common elements into dedicated modules including new &lt;code&gt;cfgize_utils.ml&lt;/code&gt; and &lt;code&gt;polling_utils.ml&lt;/code&gt; modules (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3294"&gt;#3294&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3295"&gt;#3295&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3314" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CFG selection improvements&lt;/strong&gt;&lt;/a&gt; including avoidance of polymorphic compare operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3314"&gt;#3314&lt;/a&gt;), removal of debugging statements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3313"&gt;#3313&lt;/a&gt;), and fixes to trywith expression handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3312"&gt;#3312&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3322" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New Sub_cfg module&lt;/strong&gt;&lt;/a&gt; extracted to handle sub-control flow graph operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3322"&gt;#3322&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3315" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization&lt;/strong&gt;&lt;/a&gt; for &lt;code&gt;flush_delayed_lets&lt;/code&gt; function when processing large expressions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3315"&gt;#3315&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3308" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build and CI infrastructure&lt;/strong&gt;&lt;/a&gt; updates including migration from macos-12 to macos-latest (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3308"&gt;#3308&lt;/a&gt;) and macOS CI tweaks (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3320"&gt;#3320&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3271" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unique barrier creation&lt;/strong&gt;&lt;/a&gt; now controlled by a dedicated flag (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3271"&gt;#3271&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3323" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code quality improvements&lt;/strong&gt;&lt;/a&gt; with "contains calls" judgement moved to cfg.ml (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3323"&gt;#3323&lt;/a&gt;) and fixes to Terminator case in emit&lt;em&gt;tail&lt;/em&gt;apply (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3324"&gt;#3324&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3087" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Test infrastructure&lt;/strong&gt;&lt;/a&gt; fixes including backtrace test with embedded line numbers from compiler (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3087"&gt;#3087&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Week featured new template instantiation features, major capsule API enhancements, and extensive CFG backend refactoring work</summary><published>2024-12-01T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-47</id><title>Week 47, 2024: Backend refactoring and Flambda2 performance optimization focus with new profiling capabilities</title><updated>2024-11-24T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Performance analysis discussions and infrastructure planning dominated the week&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization discussions&lt;/strong&gt;&lt;/a&gt; around imperative loops and allocation patterns with &lt;a href="https://github.com/patrick-nicodemus"&gt;Patrick Nicodemus&lt;/a&gt; reporting Flambda2 performance findings (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293"&gt;#3293&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3300" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Join performance infrastructure&lt;/strong&gt;&lt;/a&gt; work by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; tracking compilation time issues up to 30% spent on joins (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3300"&gt;#3300&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3299" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance tracking infrastructure&lt;/strong&gt;&lt;/a&gt; planning by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; for systematic measurement of stdlib, compiler, and opam package compilation times (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3299"&gt;#3299&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Backend refactoring and Flambda2 performance optimization focus with new profiling capabilities</summary><published>2024-11-24T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-46</id><title>Week 46, 2024: Major week implementing frontend support for unboxed product arrays and strengthening uniqueness soundness</title><updated>2024-11-17T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Extensive compiler development with 26 merged PRs focusing on unboxed types, uniqueness, and compiler infrastructure&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3139" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed types infrastructure&lt;/strong&gt;&lt;/a&gt; received major development with frontend support for product arrays (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3139"&gt;#3139&lt;/a&gt;), moving unboxed tuples to stable (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3246"&gt;#3246&lt;/a&gt;), and comprehensive test additions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3247" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Uniqueness analysis&lt;/strong&gt;&lt;/a&gt; improvements including soundness fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3247"&gt;#3247&lt;/a&gt;), documentation disclaimers (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3252"&gt;#3252&lt;/a&gt;), and protection against codegen pessimization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3236"&gt;#3236&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3112" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Middle-end enhancements&lt;/strong&gt;&lt;/a&gt; with or_null primitive support in Flambda2 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3112"&gt;#3112&lt;/a&gt;), CSE environment error improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3248"&gt;#3248&lt;/a&gt;), and unused kind computation removal (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3258"&gt;#3258&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3254" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system improvements&lt;/strong&gt;&lt;/a&gt; including META file generation for otherlibs (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3254"&gt;#3254&lt;/a&gt;), autoconf script fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3263"&gt;#3263&lt;/a&gt;), and dynlink parallelization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3250"&gt;#3250&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3276" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform-specific fixes&lt;/strong&gt;&lt;/a&gt; with ARM64 bytecode test disabling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3276"&gt;#3276&lt;/a&gt;), float32 test restrictions to AMD64 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3253"&gt;#3253&lt;/a&gt;), and partial inlining cflags corrections (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3264"&gt;#3264&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3279" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code quality improvements&lt;/strong&gt;&lt;/a&gt; including formatting fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3279"&gt;#3279&lt;/a&gt;), Label.t abstraction (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3259"&gt;#3259&lt;/a&gt;), and Numbers.Int_base.compare fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3268"&gt;#3268&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3223" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Syntax enhancements&lt;/strong&gt;&lt;/a&gt; with modal module support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3223"&gt;#3223&lt;/a&gt;), mode coercion restrictions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3281"&gt;#3281&lt;/a&gt;), and variable binding reversion (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3278"&gt;#3278&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3260" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Version management&lt;/strong&gt;&lt;/a&gt; with magic number bumps for 5.2.0minus-3 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3260"&gt;#3260&lt;/a&gt;) and Apply return arity checking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3270"&gt;#3270&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week implementing frontend support for unboxed product arrays and strengthening uniqueness soundness</summary><published>2024-11-17T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-45</id><title>Week 45, 2024: Major backend refactoring week with new command-line switches, reader-writer locks, and extensive Flambda 2 type system improvements</title><updated>2024-11-10T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Backend architecture underwent significant refactoring with Mach module split, Simple_operation extraction, and dataflow improvements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3234" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend architecture refactoring&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; splitting the &lt;code&gt;Mach&lt;/code&gt; module for better modularity (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3234"&gt;#3234&lt;/a&gt;) and extracting &lt;code&gt;Simple_operation&lt;/code&gt; module (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3235"&gt;#3235&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3192" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CFG pipeline improvements&lt;/strong&gt;&lt;/a&gt; including minor refactoring of &lt;code&gt;Cfg_selectgen&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3192"&gt;#3192&lt;/a&gt;) and dataflow bug fixes with Invalid extra_args (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3226"&gt;#3226&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3244" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system enhancements&lt;/strong&gt;&lt;/a&gt; with jkind improvements for function type detection (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3244"&gt;#3244&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3245"&gt;#3245&lt;/a&gt;) and join handling for no-input scenarios (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3232"&gt;#3232&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3231" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Effect system corrections&lt;/strong&gt;&lt;/a&gt; fixing stack manipulation inlining issues (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3231"&gt;#3231&lt;/a&gt;) and unique allocation read semantics (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3230"&gt;#3230&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3227" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Terminator simplification&lt;/strong&gt;&lt;/a&gt; ensuring correct predecessor sets after optimization passes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3227"&gt;#3227&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major backend refactoring week with new command-line switches, reader-writer locks, and extensive Flambda 2 type system improvements</summary><published>2024-11-10T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-44</id><title>Week 44, 2024: Extensive Flambda2 optimization work with reaper implementation, Jane Syntax removal, and backend improvements</title><updated>2024-11-03T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Major infrastructure work with Jane Syntax removal, extensive Flambda2 optimization improvements, and multiple bug fixes&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major infrastructure cleanup&lt;/strong&gt; with complete removal of Jane Syntax system simplifying parser and AST handling (&lt;a href="https://github.com/oxcaml/oxcaml/commit/da43185a2a937dc1760b38d133f3bd895bccb5d3"&gt;da43185a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 optimization infrastructure&lt;/strong&gt; improvements including light vs heavy invariant distinction (&lt;a href="https://github.com/oxcaml/oxcaml/commit/0559555278137bb1cddeb93838feb9a64a910fdc"&gt;0559555&lt;/a&gt;), consistent variable binding times (&lt;a href="https://github.com/oxcaml/oxcaml/commit/40c4705b7df9efbb34c7eb9690146ae1007e5721"&gt;40c4705b&lt;/a&gt;), and mode solver enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/f5d8aa1cf1de517938b5f1b426c54ff7110992ac"&gt;f5d8aa1c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Backend compilation fixes&lt;/strong&gt; including SIMD ARM64 build fixes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/21614a5c2733d455592d58fcfd408d2ae64ea306"&gt;21614a5c&lt;/a&gt;), CMM arity checks (&lt;a href="https://github.com/oxcaml/oxcaml/commit/87e7a70c80d84f2d2486febdbeffcad91bbefda9"&gt;87e7a70c&lt;/a&gt;), and cross-mode object handling (&lt;a href="https://github.com/oxcaml/oxcaml/commit/677386f2f9ecb0d0c70a8e2227a97fd3001be86c"&gt;677386f2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime improvements&lt;/strong&gt; with upstream port fixing issue 11865 (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3b18c285431a7d395e240d0a8f3ffb2658e37dc0"&gt;3b18c285&lt;/a&gt;) and unique barrier mapping (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e2a2e0b9ff578c424ce8e8b8951f737f740ec752"&gt;e2a2e0b9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development tooling&lt;/strong&gt; with chamelon quality-of-life improvements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/dd6652f07de0a0c06e57e5bef678d2f698fd7ad6"&gt;dd6652f0&lt;/a&gt;) and test infrastructure fixes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/be190753c713aaab020a0ffe5d939118ccc79d80"&gt;be190753&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Extensive Flambda2 optimization work with reaper implementation, Jane Syntax removal, and backend improvements</summary><published>2024-11-03T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-43</id><title>Week 43, 2024: Major pivot_root restructuring moved OCaml upstream content to repository root with significant compiler improvements and bug fixes</title><updated>2024-10-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Major repository restructuring dominated the week alongside runtime fixes and compiler pipeline improvements&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Repository pivot_root operation&lt;/strong&gt; involved extensive file reorganization with over 30 commits dedicated to moving OCaml upstream content from &lt;code&gt;ocaml/&lt;/code&gt; subdirectory to repository root, affecting thousands of files and requiring careful history preservation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/66cd3efb9c463a125c03f6d13f6ceafcd2be1e15"&gt;66cd3efb9&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/b4bc395006dd5a1481bc30e99a8fa6be754ef96c"&gt;b4bc395006&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3177" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime bug fixes&lt;/strong&gt;&lt;/a&gt; included temporary fix for compaction/hugepage interaction preventing pool freeing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3177"&gt;#3177&lt;/a&gt;), debug runtime assert fix (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3186"&gt;#3186&lt;/a&gt;), and objinfo.ml improvements for better upstream diffing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3167"&gt;#3167&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3174" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system cleanup&lt;/strong&gt;&lt;/a&gt; with README file reorganization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3174"&gt;#3174&lt;/a&gt;) and removal of stale workflow configuration (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3173"&gt;#3173&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler infrastructure&lt;/strong&gt; enhancements through CFG selection improvements for AMD64 and ARM64 backends, plus register allocation optimizations using doubly-linked lists&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major pivot_root restructuring moved OCaml upstream content to repository root with significant compiler improvements and bug fixes</summary><published>2024-10-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-42</id><title>Week 42, 2024: Repository restructuring with backend directory moved to asmcomp, plus runtime and flambda improvements</title><updated>2024-10-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
Major repository restructuring completed with backend directory moved to asmcomp, plus runtime issues addressed&lt;/p&gt;

&lt;h2&gt;Activity&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Repository restructuring&lt;/strong&gt; completed by moving entire &lt;code&gt;backend/&lt;/code&gt; directory structure to &lt;code&gt;asmcomp/&lt;/code&gt; location, affecting hundreds of files including compiler internals, architecture-specific code, and debugging infrastructure&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3158" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime compatibility&lt;/strong&gt;&lt;/a&gt; addressed with &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt; reporting OCAMLRUNPARAM=v=4096 flag overloading issue where custom timestamp behavior conflicts with upstream OCaml 5.1 changes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3158"&gt;#3158&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2413" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda2 development&lt;/strong&gt;&lt;/a&gt; progressed with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; closing continuation lifting issue after implementation completion (&lt;a href="https://github.com/oxcaml/oxcaml/issues/2413"&gt;#2413&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3117" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler optimizations&lt;/strong&gt;&lt;/a&gt; delivered through multiple PRs including string scope refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3117"&gt;#3117&lt;/a&gt;), directory flag refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3120"&gt;#3120&lt;/a&gt;), and debuginfo comparison improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3119"&gt;#3119&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3144" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system enhancements&lt;/strong&gt;&lt;/a&gt; completed with layouts documentation for contravariance (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3144"&gt;#3144&lt;/a&gt;) and unboxed vector types mode crossing fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3138"&gt;#3138&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3152" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance improvements&lt;/strong&gt;&lt;/a&gt; achieved through array reference kind refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3152"&gt;#3152&lt;/a&gt;) and block header field reordering reversion (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3145"&gt;#3145&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Repository restructuring with backend directory moved to asmcomp, plus runtime and flambda improvements</summary><published>2024-10-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/repos/oxcaml-oxcaml/2024/week-41</id><title>Week 41, 2024: None</title><updated>2024-10-13T00:00:00+00:00</updated><content type="html">&lt;p&gt;Activity report for oxcaml/oxcaml - Week 41, 2024&lt;/p&gt;</content><link href="https://thicket.dev/"/><summary>Activity report for oxcaml/oxcaml - Week 41, 2024</summary><published>2024-10-13T00:00:00+00:00</published></entry></feed>
<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>https://thicket.dev/feeds/multicore.xml</id><title>Multicore (Weekly)</title><updated>2025-09-14T00:00:00+00:00</updated><author><name>Anil Madhavapeddy</name><email>anil@recoil.org</email></author><link href="https://thicket.dev/feeds/multicore.xml" rel="self"/><link href="https://thicket.dev/" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Multicore OCaml</subtitle><entry><id>https://thicket.dev/groups/multicore/2025/week-37</id><title>Week 37, 2025: Two repositories showed activity: EIO domain management design discussions and domainslib TSAN violation reports</title><updated>2025-09-14T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;EIO domain management&lt;/strong&gt;&lt;/a&gt; design discussions continued with &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; reporting fiber-local state inheritance issues in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;TSAN compatibility issues&lt;/strong&gt;&lt;/a&gt; emerged across the stack with &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; reporting ThreadSanitizer violations in domainslib's basic examples in &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132"&gt;ocaml-multicore/domainslib#132&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Seven repositories&lt;/strong&gt; showed no activity: &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn work-stealing deque&lt;/strong&gt;&lt;/a&gt; implementation affects both &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; as the TSAN violations reported in &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132"&gt;ocaml-multicore/domainslib#132&lt;/a&gt; originate from Saturn's work-stealing deque code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Domain management patterns&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt; may influence design decisions across other multicore libraries that handle domain spawning and context preservation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Domain Manager fiber-local state inheritance&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt; where &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; identified that domains spawned by Domain Manager do not inherit parent fiber-local state, with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; suggesting solutions including optional &lt;code&gt;~share_on_domain_spawn&lt;/code&gt; flag and context preservation during &lt;code&gt;Executor_pool.submit&lt;/code&gt; operations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ThreadSanitizer compatibility concerns&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132"&gt;ocaml-multicore/domainslib#132&lt;/a&gt; where &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; demonstrated that basic domainslib programs trigger TSAN data race warnings, potentially impacting developer experience when using ThreadSanitizer for debugging multicore OCaml applications&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer tooling compatibility&lt;/strong&gt;&lt;/a&gt; becoming a focus area as ThreadSanitizer violations in &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/132"&gt;ocaml-multicore/domainslib#132&lt;/a&gt; highlight the need for better integration between OCaml multicore libraries and standard debugging tools&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Domain management API design&lt;/strong&gt;&lt;/a&gt; evolving with discussions in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt; around context inheritance and sharing policies that may influence patterns across the multicore ecosystem&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Two repositories showed activity: EIO domain management design discussions and domainslib TSAN violation reports</summary><published>2025-09-14T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-36</id><title>Week 36, 2025: Enhanced io_uring capabilities and process security with new API features across eio, ocaml-uring, and eio-trace repositories</title><updated>2025-09-07T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Setup&lt;em&gt;flags module&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt; enabling fine-grained control over io&lt;/em&gt;uring creation with flags like &lt;code&gt;single_issuer&lt;/code&gt;, &lt;code&gt;defer_taskrun&lt;/code&gt;, and &lt;code&gt;coop_taskrun&lt;/code&gt; (&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/122"&gt;ocaml-multicore/ocaml-uring#122&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/pull/803" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Setuid and setgid fork actions&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; for process spawning with different user/group privileges (&lt;a href="https://github.com/ocaml-multicore/eio/pull/803"&gt;ocaml-multicore/eio#803&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;mkdirat function&lt;/strong&gt;&lt;/a&gt; added to &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt; API for directory creation operations (&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/120"&gt;ocaml-multicore/ocaml-uring#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio-trace/issues/45" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Nix flake support&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt; enabling installation via &lt;code&gt;nix run github:ocaml-multicore/eio-trace&lt;/code&gt; (&lt;a href="https://github.com/ocaml-multicore/eio-trace/issues/45"&gt;ocaml-multicore/eio-trace#45&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active development&lt;/strong&gt; in 3 out of 9 repositories with substantial feature additions and improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Strong focus on io_uring enhancement&lt;/strong&gt; with new configuration options and filesystem operations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Process security improvements&lt;/strong&gt; with privilege management capabilities for spawned processes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Distribution and tooling&lt;/strong&gt; enhancements with Nix integration for easier installation&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository collaboration&lt;/strong&gt; evident through coordinated work on uring-related issues and features&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/122" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Setup_flags development&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/122"&gt;ocaml-multicore/ocaml-uring#122&lt;/a&gt; directly addresses performance issues referenced in &lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt; and upstream &lt;a href="https://github.com/axboe/liburing/issues/1452"&gt;axboe/liburing#1452&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Coordinated contributor work&lt;/strong&gt; with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; and &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; collaborating across multiple repositories including eio, ocaml-uring, and eio-trace&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Shared tooling improvements&lt;/strong&gt; with Nix flake support in eio-trace potentially benefiting the broader multicore ecosystem distribution&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/788" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Uring interrupt handling&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt; between &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; and &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; regarding "Interrupted system call" errors in parallel stdout operations, with upstream liburing investigation and potential ocaml-uring fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Performance-oriented development&lt;/strong&gt; with Setup_flags addressing specific performance bottlenecks identified in production use cases&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Filesystem API expansion&lt;/strong&gt; in ocaml-uring with mkdirat addition showing continued development of comprehensive file operation support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Distribution modernization&lt;/strong&gt; with Nix integration improving accessibility for users and developers&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Security-focused enhancements&lt;/strong&gt; with process privilege management features meeting real-world deployment requirements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Enhanced io_uring capabilities and process security with new API features across eio, ocaml-uring, and eio-trace repositories</summary><published>2025-09-07T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-35</id><title>Week 35, 2025: Limited activity with debugging investigations and platform compatibility improvements across 3 repositories</title><updated>2025-08-31T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;3 of 9 repositories showed activity during week 35, focusing on issue investigation, ongoing development work, and platform compatibility&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; contributed to both issue analysis in &lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt; and continued development in &lt;a href="https://github.com/ocaml-multicore/meio/issues/71"&gt;ocaml-multicore/meio#71&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; addressed macOS compatibility issues in &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux/issues/7"&gt;ocaml-multicore/ocaml-iomux#7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Community engagement included &lt;a href="https://github.com/wildfield"&gt;Wildfield&lt;/a&gt; reporting detailed reproduction cases for parallel writing issues&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; worked across eio and meio repositories, investigating parallel I/O issues in &lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt; while advancing Eio integration in &lt;a href="https://github.com/ocaml-multicore/meio/issues/71"&gt;ocaml-multicore/meio#71&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The eio debugging investigation involved direct testing with the Uring backend, potentially relevant to &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt; development&lt;/li&gt;
&lt;li&gt;Both meio and eio work involves Eio runtime event integration, suggesting coordinated development efforts around tracing capabilities&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt;: &lt;a href="https://github.com/wildfield"&gt;Wildfield&lt;/a&gt; provided detailed reproduction case for parallel stdout writing causing "Interrupted system call" errors during ~10KB file processing, with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; contributing technical analysis and minimal reproduction using Uring directly&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;Focus on platform-specific compatibility issues, with work addressing both macOS file descriptor handling in &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux/issues/7"&gt;ocaml-multicore/ocaml-iomux#7&lt;/a&gt; and I/O system call reliability in &lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Continued integration work around Eio runtime events, as seen in &lt;a href="https://github.com/ocaml-multicore/meio/issues/71"&gt;ocaml-multicore/meio#71&lt;/a&gt;, indicating ongoing ecosystem alignment with newer Eio versions&lt;/li&gt;
&lt;li&gt;Technical debugging approach using lower-level components (direct Uring testing) to isolate issues in higher-level libraries, demonstrating the layered architecture of the multicore ecosystem&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity with debugging investigations and platform compatibility improvements across 3 repositories</summary><published>2025-08-31T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-34</id><title>Week 34, 2025: Process management capabilities enhanced in eio with setuid/setgid fork actions and directory operations expanded in ocaml-uring</title><updated>2025-08-24T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/803" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Process privilege control&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; through new &lt;code&gt;setuid&lt;/code&gt; and &lt;code&gt;setgid&lt;/code&gt; fork actions enabling child processes to run with different user/group privileges (&lt;a href="https://github.com/ocaml-multicore/eio/issues/803"&gt;ocaml-multicore/eio#803&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/802" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Process group management&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; via new &lt;code&gt;setpgid&lt;/code&gt; fork action and optional &lt;code&gt;pgid&lt;/code&gt; parameter in spawn functions for job control applications (&lt;a href="https://github.com/ocaml-multicore/eio/issues/802"&gt;ocaml-multicore/eio#802&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Asynchronous directory creation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt; through new &lt;code&gt;mkdirat&lt;/code&gt; function enabling directory creation via io_uring with specified permissions (&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/120"&gt;ocaml-multicore/ocaml-uring#120&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Two repositories active&lt;/strong&gt; with &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; completing major Unix process management enhancements and &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt; adding directory creation capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Seven repositories inactive&lt;/strong&gt; with no commits, issues, or discussions: &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; leading development&lt;/strong&gt; across both active repositories with process management and filesystem operation implementations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/802" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Filesystem operation coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; implementing complementary directory and process management features across &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/802"&gt;ocaml-multicore/eio#802&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/803"&gt;ocaml-multicore/eio#803&lt;/a&gt;) and &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/120"&gt;ocaml-multicore/ocaml-uring#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Unified development approach&lt;/strong&gt; with consistent implementation patterns including OCaml interfaces, C bindings, and comprehensive test coverage across both active repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber-local state inheritance&lt;/strong&gt;&lt;/a&gt; across domains explored in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; by &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; and &lt;a href="https://github.com/ajbt200128"&gt;Austin Theriault&lt;/a&gt; with real-world OpenTelemetry tracing scenarios, discussing whether Domain Manager should propagate fiber-local bindings to maintain request context (&lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Unix process control maturation&lt;/strong&gt; with comprehensive privilege and process group management capabilities now available in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; for security-sensitive applications requiring granular process control&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/819" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform-specific compatibility focus&lt;/strong&gt;&lt;/a&gt; highlighting Windows-specific challenges in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; requiring targeted platform testing and error handling improvements (&lt;a href="https://github.com/ocaml-multicore/eio/issues/819"&gt;ocaml-multicore/eio#819&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/796" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API design precision&lt;/strong&gt;&lt;/a&gt; with detailed discussions about buffer lifecycle management and flow integration patterns in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; buffered I/O APIs (&lt;a href="https://github.com/ocaml-multicore/eio/issues/796"&gt;ocaml-multicore/eio#796&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Process management capabilities enhanced in eio with setuid/setgid fork actions and directory operations expanded in ocaml-uring</summary><published>2025-08-24T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-33</id><title>Week 33, 2025: Single repository active with fiber cancellation improvements and process error handling enhancement</title><updated>2025-08-17T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/806" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber.any prioritization improvement&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; ensures values are returned instead of raising cancellation exceptions when a result is already available from one of the fibers (&lt;a href="https://github.com/ocaml-multicore/eio/issues/806"&gt;ocaml-multicore/eio#806&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Single active repository&lt;/strong&gt;: Only &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; showed activity during week 33, with all other multicore repositories remaining quiet&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Fiber improvements&lt;/strong&gt;: Focus on enhancing fiber cancellation behavior and error handling reliability&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Community contributions&lt;/strong&gt;: Three contributors worked on process management and concurrency improvements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Single repository active with fiber cancellation improvements and process error handling enhancement</summary><published>2025-08-17T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-32</id><title>Week 32, 2025: Limited activity focused on EIO with fiber concurrency improvements and Windows platform compatibility fixes</title><updated>2025-08-10T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;Enhanced &lt;a href="https://github.com/ocaml-multicore/eio/issues/806" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber.any behavior&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; to prioritize returning values over external cancellation when results are already available, improving concurrent operation handling (&lt;a href="https://github.com/ocaml-multicore/eio/issues/806"&gt;ocaml-multicore/eio#806&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed &lt;a href="https://github.com/ocaml-multicore/eio/issues/817" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows build failure&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; by removing unused unix_cstruct.ml file that caused linker symbol resolution errors (&lt;a href="https://github.com/ocaml-multicore/eio/issues/817"&gt;ocaml-multicore/eio#817&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Single repository activity&lt;/strong&gt;: Only &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; had development activity this week, with 2 PRs merged addressing fiber concurrency and Windows compatibility&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/816" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform support focus&lt;/strong&gt;&lt;/a&gt;: Windows build issues were identified and resolved, improving cross-platform compatibility (&lt;a href="https://github.com/ocaml-multicore/eio/issues/816"&gt;ocaml-multicore/eio#816&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/817"&gt;ocaml-multicore/eio#817&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/806" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Concurrency improvements&lt;/strong&gt;&lt;/a&gt;: Fiber.any behavior was enhanced to handle cancellation scenarios more effectively (&lt;a href="https://github.com/ocaml-multicore/eio/issues/806"&gt;ocaml-multicore/eio#806&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity focused on EIO with fiber concurrency improvements and Windows platform compatibility fixes</summary><published>2025-08-10T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-31</id><title>Week 31, 2025: None</title><updated>2025-08-03T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for multicore - Week 31, 2025</summary><published>2025-08-03T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-30</id><title>Week 30, 2025: Limited activity with Windows build fixes in Eio and scheduler performance discussions in Picos</title><updated>2025-07-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Two repositories active&lt;/strong&gt; out of nine in the multicore group during week 30: &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/817" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows build stability&lt;/strong&gt;&lt;/a&gt; addressed in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; through code cleanup (&lt;a href="https://github.com/ocaml-multicore/eio/issues/817"&gt;#817&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/374" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Scheduler performance&lt;/strong&gt;&lt;/a&gt; analysis ongoing in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with community feedback on documentation (&lt;a href="https://github.com/ocaml-multicore/picos/issues/374"&gt;#374&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber-local state inheritance&lt;/strong&gt;&lt;/a&gt; design discussion in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; raised by &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; regarding domains spawned by Domain Manager not inheriting parent fiber-local state (&lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;#807&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/374" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Scheduler performance analysis&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; by &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; explaining that multififo scheduler was recently improved while randomized scheduler is intended for testing rather than performance-critical applications (&lt;a href="https://github.com/ocaml-multicore/picos/issues/374"&gt;#374&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/374" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation improvement requests&lt;/strong&gt;&lt;/a&gt; from &lt;a href="https://github.com/Drup"&gt;Gabriel Radanne&lt;/a&gt; suggesting better clarity about production-recommended schedulers and enhanced visibility of Picos-compatible libraries (&lt;a href="https://github.com/ocaml-multicore/picos/issues/374"&gt;#374&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/816" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform stability focus&lt;/strong&gt;&lt;/a&gt; with Windows build issues affecting external CI pipelines like Semgrep's requiring immediate attention (&lt;a href="https://github.com/ocaml-multicore/eio/issues/816"&gt;#816&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/374" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance characterization&lt;/strong&gt;&lt;/a&gt; discussions highlighting need for clearer documentation about intended use cases for different scheduler implementations in parallel programming libraries (&lt;a href="https://github.com/ocaml-multicore/picos/issues/374"&gt;#374&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity with Windows build fixes in Eio and scheduler performance discussions in Picos</summary><published>2025-07-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-29</id><title>Week 29, 2025: Eio v1.3 released with comprehensive platform fixes while community discussions addressed infrastructure challenges</title><updated>2025-07-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/815" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Test robustness improvement&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/815"&gt;ocaml-multicore/eio#815&lt;/a&gt; to skip &lt;code&gt;test_alloc_fixed_or_wait&lt;/code&gt; when no fixed buffers are available, preventing spurious CI failures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/813" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation fixes&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/813"&gt;ocaml-multicore/eio#813&lt;/a&gt; for odoc generation including corrected cross-references in condition.mli, core interface, file operations, flow operations, and network interfaces&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/814" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Release preparation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/814"&gt;ocaml-multicore/eio#814&lt;/a&gt; adding changelog entries for v1.3 with FreeBSD, Windows, and POSIX bug fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt; centered on &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt;'s Eio v1.3 release delivering comprehensive platform bug fixes across FreeBSD, Windows, and POSIX systems&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/813" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation improvements&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt; addressed odoc generation issues affecting multiple interface files in &lt;a href="https://github.com/ocaml-multicore/eio/issues/813"&gt;ocaml-multicore/eio#813&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Community engagement&lt;/strong&gt;&lt;/a&gt; included technical discussions about fiber-local state inheritance in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt; and fiber cancellation patterns in &lt;a href="https://github.com/ocaml-multicore/picos/discussions/373"&gt;ocaml-multicore/picos#373&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/113" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Infrastructure discussions&lt;/strong&gt;&lt;/a&gt; covered ZFS compatibility challenges with fixed buffers in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/113"&gt;ocaml-multicore/ocaml-uring#113&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/113" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ZFS fixed buffer compatibility&lt;/strong&gt;&lt;/a&gt; issue in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/113"&gt;ocaml-multicore/ocaml-uring#113&lt;/a&gt; directly impacts Eio's test infrastructure improvements in &lt;a href="https://github.com/ocaml-multicore/eio/issues/815"&gt;ocaml-multicore/eio#815&lt;/a&gt;, as both address challenges with fixed buffer allocation constraints&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber management patterns&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/ocaml-multicore/picos/discussions/373"&gt;ocaml-multicore/picos#373&lt;/a&gt; relate to Eio's fiber-local state inheritance discussion in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt;, highlighting shared challenges in concurrent programming abstractions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber-local state inheritance&lt;/strong&gt;&lt;/a&gt; discussion by &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; exploring whether domains spawned by Domain Manager should inherit parent fiber's local state, with detailed analysis of current behavior vs expected behavior in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Automatic fiber cancellation&lt;/strong&gt; inquiry by &lt;a href="https://github.com/faldor20"&gt;Eli Dowling&lt;/a&gt; about creating automatically cancelled fibers without using bundles while developing a libcurl Picos wrapper, seeking transparent solutions for background fiber management in &lt;a href="https://github.com/ocaml-multicore/picos/discussions/373"&gt;ocaml-multicore/picos#373&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility focus&lt;/strong&gt; with systematic addressing of FreeBSD, Windows, and POSIX-specific issues across the multicore ecosystem, particularly in I/O handling and process spawning&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development experience improvements&lt;/strong&gt; through enhanced test robustness and comprehensive documentation fixes, reducing friction for contributors and users&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-library concurrency patterns&lt;/strong&gt; emerging as developers work on wrapper libraries and explore fiber lifecycle management across different multicore tools&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Eio v1.3 released with comprehensive platform fixes while community discussions addressed infrastructure challenges</summary><published>2025-07-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-28</id><title>Week 28, 2025: Documentation issue reported and resolved in eio repository with community feedback</title><updated>2025-07-13T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Single repository activity&lt;/strong&gt;: Only &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; showed activity this week with a documentation issue report&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Community engagement&lt;/strong&gt;: &lt;a href="https://github.com/mohanr"&gt;Mohan Radhakrishnan&lt;/a&gt; provided detailed feedback on documentation examples that fail when copied to utop&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Quiet week&lt;/strong&gt;: Eight repositories (domainslib, ocaml-uring, meio, saturn, eio-trace, picos, kcas, ocaml-iomux) had no recorded activity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/812" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation usability&lt;/strong&gt;&lt;/a&gt;: Detailed analysis of code example execution issues in &lt;a href="https://github.com/ocaml-multicore/eio/issues/812"&gt;ocaml-multicore/eio#812&lt;/a&gt; highlighting the gap between documentation examples and actual usage requirements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Documentation issue reported and resolved in eio repository with community feedback</summary><published>2025-07-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-27</id><title>Week 27, 2025: FreeBSD compatibility and error handling improvements in Eio with test compatibility issues reported in Saturn</title><updated>2025-07-06T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/810" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;FreeBSD compatibility&lt;/strong&gt;&lt;/a&gt; with O&lt;em&gt;RESOLVE&lt;/em&gt;BENEATH flag support enabling secure file operations in &lt;a href="https://github.com/ocaml-multicore/eio/issues/810"&gt;ocaml-multicore/eio#810&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/809" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;POSIX error handling&lt;/strong&gt;&lt;/a&gt; improvements for &lt;code&gt;spawn_unix&lt;/code&gt; wrapping &lt;code&gt;openat&lt;/code&gt; calls to properly handle Unix errors in &lt;a href="https://github.com/ocaml-multicore/eio/issues/809"&gt;ocaml-multicore/eio#809&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Error classification&lt;/strong&gt; enhancement adding ENOTCAPABLE mapping to Permission_denied for better cross-platform error handling via &lt;a href="https://github.com/ocaml-multicore/eio/commit/bb76636054b9da962adca6be6e835b00a4ba8cc4"&gt;bb76636&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CI infrastructure&lt;/strong&gt; upgrade to OCaml 5 latest compiler for macOS and Windows builds with updated setup-ocaml action via &lt;a href="https://github.com/ocaml-multicore/eio/commit/161f8de4d4b19622ae9128c2ebf397fe7c65216b"&gt;161f8de&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber-local state inheritance&lt;/strong&gt;&lt;/a&gt; discussion by &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; regarding domains spawned by Domain Manager not inheriting parent fiber context, with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; suggesting custom domain manager wrappers in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/811" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;RWLock implementation&lt;/strong&gt;&lt;/a&gt; request by &lt;a href="https://github.com/jpx40"&gt;@jpx40&lt;/a&gt; asking for read-write lock support to improve performance compared to mutex-only synchronization in &lt;a href="https://github.com/ocaml-multicore/eio/issues/811"&gt;ocaml-multicore/eio#811&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/187" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Test failure analysis&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/187"&gt;ocaml-multicore/saturn#187&lt;/a&gt; where community member provided diagnostic information showing dscheck_htbl test issues occurring consistently across amd64, arm64, ppc64el, and s390x architectures&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific compatibility&lt;/strong&gt; work targeting FreeBSD and macOS with proper capability handling and compiler flag management&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Error handling robustness&lt;/strong&gt; improvements ensuring consistent Eio error types across POSIX implementations rather than raw Unix errors&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CI modernization&lt;/strong&gt; upgrading to latest OCaml compiler versions and tooling for better cross-platform testing coverage&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Multi-architecture testing&lt;/strong&gt; focus with test compatibility issues being identified and addressed across diverse CPU architectures&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>FreeBSD compatibility and error handling improvements in Eio with test compatibility issues reported in Saturn</summary><published>2025-07-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-26</id><title>Week 26, 2025: Discussion on fiber-local state inheritance in domain-spawned contexts</title><updated>2025-06-29T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Primary activity centered on &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; repository with technical discussions about fiber-local state behavior&lt;/li&gt;
&lt;li&gt;Eight other multicore repositories showed no activity during this period: &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;Comprehensive &lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;fiber-local state inheritance&lt;/strong&gt;&lt;/a&gt; discussion exploring the behavior of &lt;code&gt;Fiber.with_binding&lt;/code&gt; when used with &lt;code&gt;Domain_manager.run&lt;/code&gt;, including detailed code examples and potential migration strategies for large codebases (&lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Discussion on fiber-local state inheritance in domain-spawned contexts</summary><published>2025-06-29T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-25</id><title>Week 25, 2025: Limited activity focused on eio debugging and io_uring security discussions</title><updated>2025-06-22T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Activity concentrated solely in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with issue resolution and security discussions (&lt;a href="https://github.com/ocaml-multicore/eio/issues/804"&gt;#804&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/797"&gt;#797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Eight other multicore repositories showed no recorded activity during this period&lt;/li&gt;
&lt;li&gt;Community engagement centered on parallel execution debugging and production deployment concerns&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/vch9"&gt;Valentin Chaboche&lt;/a&gt; raised production deployment concerns about &lt;a href="https://github.com/ocaml-multicore/eio/issues/797" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;io_uring security vulnerabilities&lt;/strong&gt;&lt;/a&gt; referenced in Google's security reports, seeking guidance on migration from lwt to eio (&lt;a href="https://github.com/ocaml-multicore/eio/issues/797"&gt;ocaml-multicore/eio#797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toastal"&gt;@toastal&lt;/a&gt; contributed debugging experiences with &lt;a href="https://github.com/ocaml-multicore/eio/issues/797" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OpenZFS compatibility&lt;/strong&gt;&lt;/a&gt; and runaway process issues (&lt;a href="https://github.com/ocaml-multicore/eio/issues/797"&gt;ocaml-multicore/eio#797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Community discussion on whether eio uses only secure subsets of io_uring operations for production safety (&lt;a href="https://github.com/ocaml-multicore/eio/issues/797"&gt;ocaml-multicore/eio#797&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/797" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Security awareness&lt;/strong&gt;&lt;/a&gt; increasing in the multicore ecosystem, with developers seeking guidance on io_uring vulnerability mitigation (&lt;a href="https://github.com/ocaml-multicore/eio/issues/797"&gt;ocaml-multicore/eio#797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/797" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Production deployment planning&lt;/strong&gt;&lt;/a&gt; discussions indicating maturation of eio as users consider migration from lwt (&lt;a href="https://github.com/ocaml-multicore/eio/issues/797"&gt;ocaml-multicore/eio#797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/804" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Community collaboration&lt;/strong&gt;&lt;/a&gt; in debugging parallel execution issues demonstrating active support network (&lt;a href="https://github.com/ocaml-multicore/eio/issues/804"&gt;ocaml-multicore/eio#804&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity focused on eio debugging and io_uring security discussions</summary><published>2025-06-22T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-24</id><title>Week 24, 2025: Focus on performance optimization and concurrency primitives with Fiber.any discussion in eio, benchmark improvements in picos/kcas</title><updated>2025-06-15T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/372" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Benchmark performance optimization&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos/issues/372"&gt;ocaml-multicore/picos#372&lt;/a&gt; with inlined operations expanding test coverage across multiple operation types including get, increment, push/pop, compare-and-set, exchange, and swap operations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/371" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Counter-based condition variable implementation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos/issues/371"&gt;ocaml-multicore/picos#371&lt;/a&gt; replacing Awaitable enqueue mechanism for Lock and Rwlock condition variables with atomic counter-based signal detection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/kcas/issues/211" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Improved benchmark accuracy&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/kcas/issues/211"&gt;ocaml-multicore/kcas#211&lt;/a&gt; with inlined &lt;code&gt;Loc&lt;/code&gt; operations and unrolled loops in &lt;code&gt;bench_loc.ml&lt;/code&gt; for more precise measurement results&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active repositories&lt;/strong&gt;: 3 of 9 repositories showed activity this week - &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Primary focus areas&lt;/strong&gt;: Performance optimization through benchmark improvements and concurrency primitive development&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Key contributors&lt;/strong&gt;: &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; led development across both picos and kcas, while &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; provided technical analysis for eio fiber behavior&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Performance measurement standardization&lt;/strong&gt; across &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt; with similar benchmark optimization approaches using inlined operations and unrolled loops for more accurate timing results&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/371" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Synchronization primitive development&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; working on both counter-based condition variables in &lt;a href="https://github.com/ocaml-multicore/picos/issues/371"&gt;ocaml-multicore/picos#371&lt;/a&gt; and major Picos integration in &lt;a href="https://github.com/ocaml-multicore/kcas/issues/204"&gt;ocaml-multicore/kcas#204&lt;/a&gt; that affects 63 files with significant API changes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/805" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Race condition analysis&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/805"&gt;ocaml-multicore/eio#805&lt;/a&gt; by &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; explaining that original &lt;code&gt;Fiber.any&lt;/code&gt; design assumed results could be thrown away, but &lt;code&gt;combine&lt;/code&gt; parameter changes this assumption, requiring different cancellation behavior&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Performance measurement refinement&lt;/strong&gt; with emphasis on benchmark accuracy and precise timing results across multiple repositories&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Architectural modernization&lt;/strong&gt; moving toward mandatory scheduler dependency and cancellation-based design patterns&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Synchronization primitive refinement&lt;/strong&gt; through alternative implementation approaches for condition variables, exploring counter-based mechanisms over queue-based Awaitable patterns&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Focus on performance optimization and concurrency primitives with Fiber.any discussion in eio, benchmark improvements in picos/kcas</summary><published>2025-06-15T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-23</id><title>Week 23, 2025: Limited activity week with community feedback on Windows issue and architectural discussion about concurrency primitives</title><updated>2025-06-08T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Multicore group activity was limited this week, with only 2 repositories (&lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;) showing engagement&lt;/li&gt;
&lt;li&gt;Community feedback emerged around Windows compatibility issues affecting production builds&lt;/li&gt;
&lt;li&gt;Architectural discussions focused on formalizing core concurrency primitives and verification approaches&lt;/li&gt;
&lt;li&gt;No code changes or new features were delivered across any repositories in the group&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; from Semgrep requested update on version bump timeline for Windows pipe handling fix affecting their production build process (&lt;a href="https://github.com/ocaml-multicore/eio/issues/792"&gt;ocaml-multicore/eio#792&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kayceesrk"&gt;KC Sivaramakrishnan&lt;/a&gt; explored whether Computation could serve as fundamental primitive from which Trigger could be implemented, questioning the need for both primitives in picos (&lt;a href="https://github.com/ocaml-multicore/picos/discussions/370"&gt;ocaml-multicore/picos#370&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Discussion in picos focused on formalizing core contracts between picos, compatible schedulers, and concurrency libraries for potential automatic verification&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;Community engagement driven by production deployment needs, with external teams requesting specific fixes and timelines&lt;/li&gt;
&lt;li&gt;Increased focus on formal verification approaches for concurrency libraries, particularly around primitive contracts and scheduler compatibility&lt;/li&gt;
&lt;li&gt;Architectural discussions moving toward simplification of core building blocks in the multicore ecosystem&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity week with community feedback on Windows issue and architectural discussion about concurrency primitives</summary><published>2025-06-08T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-22</id><title>Week 22, 2025: EIO repository focused on fiber concurrency improvements with enhanced Fiber.any behavior and domain integration issues</title><updated>2025-06-01T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/pull/806" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced Fiber.any cancellation behavior&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/adamchol"&gt;Adam Cholewiński&lt;/a&gt; to prioritize returning computed values over quick cancellation when using the &lt;code&gt;combine&lt;/code&gt; argument (&lt;a href="https://github.com/ocaml-multicore/eio/pull/806"&gt;ocaml-multicore/eio#806&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Test case updates&lt;/strong&gt; demonstrating the new behavior where Fiber.any returns values despite parent cancellation (&lt;a href="https://github.com/ocaml-multicore/eio/commit/82e5e1e08ae1a69ed8ab4d2af4536fe0309c878c"&gt;ocaml-multicore/eio@82e5e1e&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Single repository activity&lt;/strong&gt; with all development concentrated in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; during this week&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Fiber concurrency focus&lt;/strong&gt; addressing race conditions and cancellation behavior in parallel execution&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Domain integration challenges&lt;/strong&gt; highlighted through investigation of fiber-local state inheritance issues&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Exception handling debugging&lt;/strong&gt; revealing complexities in parallel execution environments&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber-local state inheritance behavior&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/807"&gt;ocaml-multicore/eio#807&lt;/a&gt; questioning whether domains spawned by Domain Manager should inherit parent fiber-local state&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/804" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Exception trace garbling&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/804"&gt;ocaml-multicore/eio#804&lt;/a&gt; where parallel execution causes incorrect exception types to appear in stack traces&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/pull/806" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber cancellation semantics&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/pull/806"&gt;ocaml-multicore/eio#806&lt;/a&gt; regarding the proper behavior when Fiber.any encounters both computed values and cancellation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Concurrent execution refinements&lt;/strong&gt; with focused attention to edge cases in fiber cancellation and value preservation during parallel operations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Domain integration complexity&lt;/strong&gt; emerging through fiber-local state inheritance issues when using Domain Manager for spawning domains&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Debugging challenges&lt;/strong&gt; in parallel execution environments where exception traces become garbled or misattributed during concurrent operations&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>EIO repository focused on fiber concurrency improvements with enhanced Fiber.any behavior and domain integration issues</summary><published>2025-06-01T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-21</id><title>Week 21, 2025: Process control enhancements in EIO and benchmark improvements in Saturn focused on system-level capabilities and testing realism.</title><updated>2025-05-25T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Process groups support&lt;/strong&gt; added to &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; unix backends with new &lt;code&gt;setpgid&lt;/code&gt; function allowing child processes to be placed in specific process groups or new groups (&lt;a href="https://github.com/ocaml-multicore/eio/commit/f6dac4a8be61db6bb2c30dbc56b4654fad41347f"&gt;f6dac4a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced process spawning API&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with optional &lt;code&gt;pgid&lt;/code&gt; parameter added to &lt;code&gt;spawn_unix&lt;/code&gt; and related functions enabling process group control during child creation (&lt;a href="https://github.com/ocaml-multicore/eio/commit/f6dac4a8be61db6bb2c30dbc56b4654fad41347f"&gt;f6dac4a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/185" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Benchmark improvements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; across all queue and stack benchmarks now use heap-allocated blocks (&lt;code&gt;ref&lt;/code&gt; values) instead of immediate values to provide more realistic testing scenarios that include write barrier costs (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/185"&gt;ocaml-multicore/saturn#185&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Two active repositories&lt;/strong&gt; showed development activity: &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; focused on process control enhancements and &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; improved benchmark realism&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Process management development&lt;/strong&gt; led by &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; with comprehensive process control features including process groups and user/group switching capabilities in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Benchmark accuracy improvements&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; by &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; to better reflect real-world usage patterns&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Seven repositories remained inactive&lt;/strong&gt; with no commits, issues, or PRs during this week: &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/804" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Exception tracing investigation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; by &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; seeking help with garbled stack traces during parallel execution where wrong exception types appear in backtraces (&lt;a href="https://github.com/ocaml-multicore/eio/issues/804"&gt;ocaml-multicore/eio#804&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/804" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Technical guidance provided&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; explaining that garbled traces typically result from improper exception re-raising without preserving backtraces using &lt;code&gt;Printexc.get_raw_backtrace&lt;/code&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/804"&gt;ocaml-multicore/eio#804&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;System-level feature expansion&lt;/strong&gt; with &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; continuing to enhance unix backend capabilities for production deployment scenarios through process control features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Testing realism focus&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; emphasizing benchmark accuracy improvements that better reflect real-world usage patterns where data structures contain heap-allocated rather than immediate values&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Community support patterns&lt;/strong&gt; with experienced maintainers like &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; providing detailed technical guidance for complex parallelism issues in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; discussions&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CI modernization efforts&lt;/strong&gt; across the group to maintain up-to-date testing infrastructure with latest OCaml versions and tooling improvements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Process control enhancements in EIO and benchmark improvements in Saturn focused on system-level capabilities and testing realism.</summary><published>2025-05-25T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-20</id><title>Week 20, 2025: Picos performance optimizations and Saturn synchronization discussions dominated multicore group activity</title><updated>2025-05-18T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/368" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Bounded queue performance&lt;/strong&gt;&lt;/a&gt; optimization in &lt;a href="https://github.com/ocaml-multicore/picos/issues/368"&gt;ocaml-multicore/picos#368&lt;/a&gt; avoiding thundering herd problem with targeted signal calls&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/367" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Select wakeup logic&lt;/strong&gt;&lt;/a&gt; improvements in &lt;a href="https://github.com/ocaml-multicore/picos/issues/367"&gt;ocaml-multicore/picos#367&lt;/a&gt; with refined state machine handling&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/369" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation example&lt;/strong&gt;&lt;/a&gt; updated in &lt;a href="https://github.com/ocaml-multicore/picos/issues/369"&gt;ocaml-multicore/picos#369&lt;/a&gt; from condition variables to semaphore-based bounded queue implementation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active repositories&lt;/strong&gt;: 2 out of 9 repositories had activity during the week (ocaml-multicore/picos and ocaml-multicore/saturn)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance focus&lt;/strong&gt;: &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; drove systematic performance optimization work in ocaml-multicore/picos&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Technical discussions&lt;/strong&gt;: Memory synchronization correctness raised in ocaml-multicore/saturn with implications for OCaml 5.4 atomic record fields&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cleanup effort&lt;/strong&gt;: Experimental features in ocaml-multicore/picos were systematically evaluated and closed if underperforming&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 5.4 atomic fields&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/183"&gt;ocaml-multicore/saturn#183&lt;/a&gt; references upstream &lt;a href="https://github.com/ocaml/ocaml/issues/13404"&gt;ocaml/ocaml#13404&lt;/a&gt; for work-stealing deque synchronization solution&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance methodology&lt;/strong&gt; established in ocaml-multicore/picos could influence synchronization primitive development across other multicore repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Work-stealing deque synchronization&lt;/strong&gt;&lt;/a&gt; issue in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/183"&gt;ocaml-multicore/saturn#183&lt;/a&gt; raised by &lt;a href="https://github.com/clef-men"&gt;@clef-men&lt;/a&gt; regarding non-atomic tab field causing potential race conditions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml/ocaml/issues/13404" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Atomic record fields&lt;/strong&gt;&lt;/a&gt; solution proposed referencing upcoming OCaml 5.4 feature from &lt;a href="https://github.com/ocaml/ocaml/issues/13404"&gt;ocaml/ocaml#13404&lt;/a&gt; as better alternative to current workarounds&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Performance-first development&lt;/strong&gt; with systematic evaluation and closure of experimental features that don't deliver measurable improvements in ocaml-multicore/picos&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Benchmark-driven decisions&lt;/strong&gt; using concrete performance measurements to guide implementation choices, particularly around synchronization primitives&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;API simplification&lt;/strong&gt; trend moving from complex condition variable patterns to cleaner semaphore-based designs in documentation and examples&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream coordination&lt;/strong&gt; with main OCaml development for fundamental multicore features like atomic record fields&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Picos performance optimizations and Saturn synchronization discussions dominated multicore group activity</summary><published>2025-05-18T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-19</id><title>Week 19, 2025: Benchmarking methodology improvements and task scheduling discussions across concurrent data structure libraries</title><updated>2025-05-11T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Benchmarking methodology enhancement&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; replacing immediate values with heap-allocated blocks to expose realistic write barrier costs &lt;a href="https://github.com/ocaml-multicore/saturn/commit/2a653b676afa45159968a5b46bfbd465dc5b1d2a"&gt;2a653b6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CI infrastructure upgrade&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; to OCaml 5.3 and GitHub Actions v3.3.2 &lt;a href="https://github.com/ocaml-multicore/saturn/commit/98a718623255a1d53c91e65f55e85e0b4c6ad158"&gt;98a7186&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/366" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Queue benchmarking enhancement&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; using heap-allocated blocks instead of immediate values &lt;a href="https://github.com/ocaml-multicore/picos/issues/366"&gt;ocaml-multicore/picos#366&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Focused week on benchmarking methodology improvements across concurrent data structure libraries&lt;/li&gt;
&lt;li&gt;Active technical discussions on task scheduling strategies for parallel programming&lt;/li&gt;
&lt;li&gt;Limited to 3 repositories with concrete activity: domainslib, saturn, and picos&lt;/li&gt;
&lt;li&gt;Strong emphasis on realistic performance testing that exposes write barrier costs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/185" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Coordinated benchmarking improvements&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; across &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; using consistent methodology of heap-allocated blocks (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/185"&gt;ocaml-multicore/saturn#185&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/366"&gt;ocaml-multicore/picos#366&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/97" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Related scheduling discussions&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; on LIFO vs FIFO task scheduling strategies &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/97"&gt;ocaml-multicore/domainslib#97&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/97" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Task scheduling strategy debate&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt; where &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; provided detailed feedback on LIFO scheduling benefits for work-stealing and fairness concerns with FIFO approaches &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/97"&gt;ocaml-multicore/domainslib#97&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Benchmarking methodology standardization&lt;/strong&gt; with focus on realistic performance testing using heap-allocated data structures instead of immediate values to expose write barrier overhead&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure modernization&lt;/strong&gt; through OCaml version upgrades and GitHub Actions updates across the multicore ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository collaboration&lt;/strong&gt; on performance optimization strategies and scheduling algorithms by key contributors&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Benchmarking methodology improvements and task scheduling discussions across concurrent data structure libraries</summary><published>2025-05-11T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-18</id><title>Week 18, 2025: Major Picos scheduler improvements and critical Eio io_uring fork safety bug investigation</title><updated>2025-05-04T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/362" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Heartbeat-based worker management&lt;/strong&gt;&lt;/a&gt; system introduced in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; to avoid thundering herd problems in the multififo scheduler, with configurable &lt;code&gt;heartbeat_delay&lt;/code&gt; and &lt;code&gt;heartbeat_rounds&lt;/code&gt; parameters (&lt;a href="https://github.com/ocaml-multicore/picos/issues/362"&gt;ocaml-multicore/picos#362&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/363" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Parameterized heartbeat configuration&lt;/strong&gt;&lt;/a&gt; allowing fine-tuning of scheduler behavior through new API parameters &lt;code&gt;heartbeat_delay&lt;/code&gt; and &lt;code&gt;heartbeat_rounds&lt;/code&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/363"&gt;ocaml-multicore/picos#363&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/360" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Lazy bundle trigger allocation&lt;/strong&gt;&lt;/a&gt; reducing memory usage by only allocating triggers when actually needed (&lt;a href="https://github.com/ocaml-multicore/picos/issues/360"&gt;ocaml-multicore/picos#360&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/358" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced load balancing&lt;/strong&gt;&lt;/a&gt; with periodic work stealing to improve fairness across worker threads (&lt;a href="https://github.com/ocaml-multicore/picos/issues/358"&gt;ocaml-multicore/picos#358&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/337" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Optimized bundle representation&lt;/strong&gt;&lt;/a&gt; through inlined atomic fields reducing memory footprint (&lt;a href="https://github.com/ocaml-multicore/picos/issues/337"&gt;ocaml-multicore/picos#337&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/364" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Benchmark configuration updates&lt;/strong&gt;&lt;/a&gt; prioritizing multififo scheduler in performance testing (&lt;a href="https://github.com/ocaml-multicore/picos/issues/364"&gt;ocaml-multicore/picos#364&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Concentrated development activity&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with major scheduler improvements delivered by &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/801" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Critical bug investigation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; regarding io_uring sharing between parent and child processes causing test suite hangs (&lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Technical collaboration&lt;/strong&gt; between &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt;, &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt;, and &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; on fork safety solutions&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Seven other repositories&lt;/strong&gt; (domainslib, ocaml-uring, meio, saturn, eio-trace, kcas, ocaml-iomux) remained inactive during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Potential io&lt;em&gt;uring dependency&lt;/strong&gt; between &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt; as the fork safety investigation in &lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt; may require coordination with the underlying io&lt;/em&gt;uring implementation&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Scheduler ecosystem development&lt;/strong&gt; with &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; serving as a foundational component for other multicore libraries in the group through its improved multififo scheduler implementation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/801" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fork safety discussion&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt; centered on preventing child processes from inheriting parent io&lt;em&gt;uring resources, with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; suggesting child processes should avoid parent resources and use Unix.&lt;/em&gt;exit, while &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; proposed pthread_atfork handlers to invalidate rings in child processes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/357" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Load balancing strategy design&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/ocaml-multicore/picos/issues/357"&gt;ocaml-multicore/picos#357&lt;/a&gt; where &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; outlined detailed approach for balancing work across runners using periodic stealing with countdown-based thief selection&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Scheduler optimization focus&lt;/strong&gt; with concentrated effort in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; on making the multififo scheduler more efficient and fair through heartbeat mechanisms and load balancing improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory usage optimization&lt;/strong&gt; trend visible through lazy allocation strategies and improved data structure representations in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/364" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance-focused development&lt;/strong&gt;&lt;/a&gt; with benchmark configuration changes to prioritize the most optimized scheduler implementation (&lt;a href="https://github.com/ocaml-multicore/picos/issues/364"&gt;ocaml-multicore/picos#364&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;API parameterization&lt;/strong&gt; allowing users to fine-tune scheduler behavior for different workload characteristics in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/801" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fork safety awareness&lt;/strong&gt;&lt;/a&gt; emerging as a critical concern for io_uring-based libraries as revealed by the investigation in &lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major Picos scheduler improvements and critical Eio io_uring fork safety bug investigation</summary><published>2025-05-04T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-17</id><title>Week 17, 2025: Focus on process management challenges and scheduler fairness improvements across Eio, Domainslib, and Picos repositories</title><updated>2025-04-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/355" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Guarded case statements&lt;/strong&gt;&lt;/a&gt; implementation in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; inspired by the Clerical language, demonstrating concurrent programming patterns with structured concurrency (&lt;a href="https://github.com/ocaml-multicore/picos/issues/355"&gt;ocaml-multicore/picos#355&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/359" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Verbose flag&lt;/strong&gt;&lt;/a&gt; for test scheduler in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; enabling detailed output about scheduler selection and configuration (&lt;a href="https://github.com/ocaml-multicore/picos/issues/359"&gt;ocaml-multicore/picos#359&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/359" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fairness testing framework&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; for measuring scheduler performance with statistical analysis of fiber execution distribution (&lt;a href="https://github.com/ocaml-multicore/picos/issues/359"&gt;ocaml-multicore/picos#359&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/355" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced structured concurrency API&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with &lt;code&gt;terminate_unless&lt;/code&gt; function and improved &lt;code&gt;first_or_terminate&lt;/code&gt; function for cleaner guard implementation patterns (&lt;a href="https://github.com/ocaml-multicore/picos/issues/355"&gt;ocaml-multicore/picos#355&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/354" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Semaphore stress test fix&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; avoiding thread-based scheduler issues on OCaml 5 by removing problematic thread usage (&lt;a href="https://github.com/ocaml-multicore/picos/issues/354"&gt;ocaml-multicore/picos#354&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/801" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Process management challenges&lt;/strong&gt;&lt;/a&gt; emerged across multiple repositories with Uring sharing issues between parent and child processes in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt;) and teardown_pool hanging problems in &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/131"&gt;ocaml-multicore/domainslib#131&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Scheduler improvements&lt;/strong&gt; focused on fairness and testing infrastructure in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, with comprehensive load balancing work and statistical measurement capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Migration support requests&lt;/strong&gt; for existing codebases seeking gradual transition to effect-based concurrency models, highlighting adoption challenges&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Five repositories remained inactive&lt;/strong&gt; during this period: &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/801" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Process management patterns&lt;/strong&gt;&lt;/a&gt; appeared across both &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, with Uring sharing issues (&lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt;) and domain teardown problems (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/131"&gt;ocaml-multicore/domainslib#131&lt;/a&gt;) suggesting broader challenges in resource cleanup and process isolation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/800" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Migration tooling needs&lt;/strong&gt;&lt;/a&gt; emerged in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; requesting APIs to detect event loop context (&lt;a href="https://github.com/ocaml-multicore/eio/issues/800"&gt;ocaml-multicore/eio#800&lt;/a&gt;), potentially relevant for other multicore libraries supporting gradual adoption patterns&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/359" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Testing methodology advances&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with statistical fairness measurement (&lt;a href="https://github.com/ocaml-multicore/picos/issues/359"&gt;ocaml-multicore/picos#359&lt;/a&gt;) could inform testing approaches across other scheduler implementations in the group&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/356" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Handler strategy debate&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos/issues/356"&gt;ocaml-multicore/picos#356&lt;/a&gt; where &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; identified potential design issue with shallow handlers in &lt;code&gt;picos_lwt&lt;/code&gt;, suggesting deep handlers may be more appropriate&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/801" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Process forking with Uring&lt;/strong&gt;&lt;/a&gt; collaboration in &lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt; between &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; and &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; on debugging Uring submission queue corruption when using Unix.fork with OUnit2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/800" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Event loop detection API&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/ocaml-multicore/eio/issues/800"&gt;ocaml-multicore/eio#800&lt;/a&gt; between &lt;a href="https://github.com/dijkstracula"&gt;Nathan Taylor&lt;/a&gt; and &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; about approaches for detecting Eio context during codebase migration, including potential future compatibility issues with thread-local storage and typed effects&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/801" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Process isolation challenges&lt;/strong&gt;&lt;/a&gt; becoming prominent across multiple repositories, with issues affecting both Uring resource sharing in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/801"&gt;ocaml-multicore/eio#801&lt;/a&gt;) and domain cleanup in &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/131"&gt;ocaml-multicore/domainslib#131&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/800" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Migration support tooling&lt;/strong&gt;&lt;/a&gt; requests indicating growing adoption pressure, with users seeking utilities to support gradual transition from existing concurrency models to effect-based approaches (&lt;a href="https://github.com/ocaml-multicore/eio/issues/800"&gt;ocaml-multicore/eio#800&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/358" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Scheduler fairness optimization&lt;/strong&gt;&lt;/a&gt; emerging as central theme in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, combining theoretical improvements with comprehensive testing infrastructure (&lt;a href="https://github.com/ocaml-multicore/picos/issues/358"&gt;ocaml-multicore/picos#358&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/359"&gt;ocaml-multicore/picos#359&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/359" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Testing infrastructure maturation&lt;/strong&gt;&lt;/a&gt; across the ecosystem with statistical measurement capabilities and detailed diagnostics becoming standard practice (&lt;a href="https://github.com/ocaml-multicore/picos/issues/359"&gt;ocaml-multicore/picos#359&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Focus on process management challenges and scheduler fairness improvements across Eio, Domainslib, and Picos repositories</summary><published>2025-04-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-16</id><title>Week 16, 2025: None</title><updated>2025-04-20T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for multicore - Week 16, 2025</summary><published>2025-04-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-15</id><title>Week 15, 2025: Saturn 1.0 dependency upgrade coordination and network parsing guidance resolved across ecosystem</title><updated>2025-04-13T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn 1.0 upgrade&lt;/strong&gt;&lt;/a&gt; implemented in &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt; with updated API integration replacing deprecated functions - &lt;code&gt;steal&lt;/code&gt; becomes &lt;code&gt;steal_exn&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt; becomes &lt;code&gt;pop_exn&lt;/code&gt;, and updated exception handling from &lt;code&gt;Exit&lt;/code&gt; to &lt;code&gt;Saturn.Work_stealing_deque.Empty&lt;/code&gt; (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129"&gt;ocaml-multicore/domainslib#129&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dependency constraint fix&lt;/strong&gt;&lt;/a&gt; updating saturn requirement from &lt;code&gt;&gt;= 0.4.0&lt;/code&gt; to &lt;code&gt;&gt;= 1.0.0&lt;/code&gt; in opam file to resolve package downgrade issues (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129"&gt;ocaml-multicore/domainslib#129&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Installation documentation update&lt;/strong&gt; in README.md changing recommended OCaml version from 5.1.0 to 5.3.0 for opam switch creation (&lt;a href="https://github.com/ocaml-multicore/domainslib/commit/e72622b854f924bcb1f3d7ee6ad85489f96bfc88"&gt;ocaml-multicore/domainslib@e72622b&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Limited ecosystem activity&lt;/strong&gt; with 3 out of 9 repositories showing activity during the week: &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-library coordination&lt;/strong&gt;&lt;/a&gt; demonstrated through Saturn 1.0 dependency upgrade affecting downstream libraries and requiring API migration work (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129"&gt;ocaml-multicore/domainslib#129&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/799" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Community support focus&lt;/strong&gt;&lt;/a&gt; with maintainers providing technical guidance for network programming issues and responsive dependency management (&lt;a href="https://github.com/ocaml-multicore/eio/issues/799"&gt;ocaml-multicore/eio#799&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128"&gt;ocaml-multicore/domainslib#128&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn ecosystem upgrade&lt;/strong&gt;&lt;/a&gt; coordination with Saturn 1.0 release requiring API migration work in dependent libraries like &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt; to update function calls and exception handling (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129"&gt;ocaml-multicore/domainslib#129&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dependency constraint management&lt;/strong&gt;&lt;/a&gt; across the multicore ecosystem to prevent package downgrade issues when new major versions are released, affecting opam package resolution (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128"&gt;ocaml-multicore/domainslib#128&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/799" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Network protocol implementation guidance&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/MarcCoquand"&gt;MarcC&lt;/a&gt; and &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; about proper end-of-input detection in SCGI parsing, covering &lt;code&gt;Flow.shutdown&lt;/code&gt; usage and &lt;code&gt;Buf_read.seq&lt;/code&gt; patterns for sequence parsing (&lt;a href="https://github.com/ocaml-multicore/eio/issues/799"&gt;ocaml-multicore/eio#799&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Proactive dependency management&lt;/strong&gt;&lt;/a&gt; with library maintainers responding quickly to user-reported package resolution issues and coordinating releases across the ecosystem (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128"&gt;ocaml-multicore/domainslib#128&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/129"&gt;ocaml-multicore/domainslib#129&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Same-day issue resolution workflow&lt;/strong&gt;&lt;/a&gt; demonstrated across multiple repositories with rapid implementation and release preparation after problem reports (&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128"&gt;ocaml-multicore/domainslib#128&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/130"&gt;ocaml-multicore/domainslib#130&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Saturn 1.0 dependency upgrade coordination and network parsing guidance resolved across ecosystem</summary><published>2025-04-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-14</id><title>Week 14, 2025: Test infrastructure improvements in Picos and package dependency issues identified across Saturn and Domainslib</title><updated>2025-04-06T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/352" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced test coverage&lt;/strong&gt;&lt;/a&gt; for OCaml 5 by adding systhread-based scheduler support to the test scheduler framework in &lt;a href="https://github.com/ocaml-multicore/picos/issues/352"&gt;ocaml-multicore/picos#352&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/352" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Improved test scheduler configuration&lt;/strong&gt;&lt;/a&gt; by reorganizing the dune build dependencies and adding &lt;code&gt;picos_mux.thread&lt;/code&gt; scheduler option alongside existing fifos, multififos, randos, and lwt schedulers in &lt;a href="https://github.com/ocaml-multicore/picos/issues/352"&gt;ocaml-multicore/picos#352&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/352" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt;&lt;/a&gt; centered on test infrastructure improvements in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with enhanced OCaml 5 scheduler testing via &lt;a href="https://github.com/ocaml-multicore/picos/issues/352"&gt;ocaml-multicore/picos#352&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/184" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dependency management issues&lt;/strong&gt;&lt;/a&gt; identified across multiple repositories, particularly Saturn and Domainslib package constraints via &lt;a href="https://github.com/ocaml-multicore/saturn/issues/184"&gt;ocaml-multicore/saturn#184&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128"&gt;ocaml-multicore/domainslib#128&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Technical discussions&lt;/strong&gt;&lt;/a&gt; ongoing in Saturn regarding work-stealing deque synchronization and memory model considerations in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/183"&gt;ocaml-multicore/saturn#183&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/322" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Community support&lt;/strong&gt;&lt;/a&gt; provided in Eio for socket options implementation guidance through &lt;a href="https://github.com/ocaml-multicore/eio/issues/322"&gt;ocaml-multicore/eio#322&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/meio/pull/70" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Limited activity&lt;/strong&gt;&lt;/a&gt; in most other repositories, with only minor CI updates in Meio via &lt;a href="https://github.com/ocaml-multicore/meio/pull/70"&gt;ocaml-multicore/meio#70&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn-Domainslib dependency coupling&lt;/strong&gt;&lt;/a&gt; identified where Saturn version constraints are causing unexpected opam downgrade behavior for Domainslib users, as reported in &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128"&gt;ocaml-multicore/domainslib#128&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/saturn/issues/184"&gt;ocaml-multicore/saturn#184&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Consistent contributor involvement&lt;/strong&gt; with &lt;a href="https://github.com/Simn"&gt;Simon Krajewski&lt;/a&gt; reporting related package management issues across both Saturn and Domainslib repositories&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/352" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Test infrastructure pattern&lt;/strong&gt;&lt;/a&gt; emerging with Picos leading enhanced OCaml 5 compatibility testing via &lt;a href="https://github.com/ocaml-multicore/picos/issues/352"&gt;ocaml-multicore/picos#352&lt;/a&gt; that could benefit other multicore repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Work-stealing deque synchronization&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/clef-men"&gt;@clef-men&lt;/a&gt; and &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; about tab field atomicity and memory ordering guarantees, with detailed analysis of OCaml's &lt;code&gt;caml_modify&lt;/code&gt; behavior and suggestions for &lt;code&gt;Multicore_magic.fence&lt;/code&gt; usage in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/183"&gt;ocaml-multicore/saturn#183&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/322" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Socket options implementation guidance&lt;/strong&gt;&lt;/a&gt; provided by &lt;a href="https://github.com/rbjorklin"&gt;Robin Björklin&lt;/a&gt; clarifying the current approach using &lt;code&gt;Eio_unix.Net.fd&lt;/code&gt; and &lt;code&gt;Eio_unix.Fd.use&lt;/code&gt; APIs for &lt;a href="https://github.com/anmonteiro"&gt;Antonio Nuno Monteiro&lt;/a&gt;'s enhancement request in &lt;a href="https://github.com/ocaml-multicore/eio/issues/322"&gt;ocaml-multicore/eio#322&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/184" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package dependency management&lt;/strong&gt;&lt;/a&gt; becoming a focus area with multiple dependency-related issues surfacing across Saturn and Domainslib repositories via &lt;a href="https://github.com/ocaml-multicore/saturn/issues/184"&gt;ocaml-multicore/saturn#184&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/domainslib/issues/128"&gt;ocaml-multicore/domainslib#128&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/352" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced testing infrastructure&lt;/strong&gt;&lt;/a&gt; trend with Picos implementing improved OCaml 5 scheduler testing coverage that may influence testing approaches across other multicore repositories through &lt;a href="https://github.com/ocaml-multicore/picos/issues/352"&gt;ocaml-multicore/picos#352&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Memory model correctness&lt;/strong&gt;&lt;/a&gt; discussions intensifying in Saturn with detailed technical analysis of synchronization primitives and atomic operations in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/183"&gt;ocaml-multicore/saturn#183&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Test infrastructure improvements in Picos and package dependency issues identified across Saturn and Domainslib</summary><published>2025-04-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-13</id><title>Week 13, 2025: None</title><updated>2025-03-30T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for multicore - Week 13, 2025</summary><published>2025-03-30T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-12</id><title>Week 12, 2025: None</title><updated>2025-03-23T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for multicore - Week 12, 2025</summary><published>2025-03-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-11</id><title>Week 11, 2025: None</title><updated>2025-03-16T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for multicore - Week 11, 2025</summary><published>2025-03-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-10</id><title>Week 10, 2025: None</title><updated>2025-03-09T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for multicore - Week 10, 2025</summary><published>2025-03-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-9</id><title>Week 9, 2025: Production readiness discussions in eio focused on io_uring security concerns and /proc filesystem compatibility</title><updated>2025-03-02T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Activity concentrated solely in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with two technical issues addressing production deployment challenges&lt;/li&gt;
&lt;li&gt;All other repositories (&lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;) had no recorded activity&lt;/li&gt;
&lt;li&gt;Five contributors engaged in technical discussions about security implications and filesystem edge cases&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/797" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;io_uring security implications&lt;/strong&gt;&lt;/a&gt; with detailed analysis from &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; on safety guarantees and &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; sharing ZFS compatibility issues in production (&lt;a href="https://github.com/ocaml-multicore/eio/issues/797"&gt;ocaml-multicore/eio#797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/798" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Special filesystem handling&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; and &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; exploring solutions for /proc file reading limitations and alternative implementation approaches (&lt;a href="https://github.com/ocaml-multicore/eio/issues/798"&gt;ocaml-multicore/eio#798&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Production readiness focus&lt;/strong&gt; as users evaluate migration from lwt to eio and encounter real-world deployment considerations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;File system compatibility concerns&lt;/strong&gt; highlighting the need for robust handling of special filesystems and edge cases in production environments&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Security-conscious deployment&lt;/strong&gt; with discussions around making safer backend choices default for production use cases&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Production readiness discussions in eio focused on io_uring security concerns and /proc filesystem compatibility</summary><published>2025-03-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-8</id><title>Week 8, 2025: Limited activity with Windows test suite work in eio encountering technical challenges</title><updated>2025-02-23T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Low activity week&lt;/strong&gt; across the multicore group with only one repository showing development activity&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Windows compatibility&lt;/strong&gt; work attempted in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; but faced technical obstacles&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Eight repositories&lt;/strong&gt; remained inactive: &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Windows compatibility challenges&lt;/strong&gt; highlighted ongoing testing infrastructure limitations across the multicore ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific testing barriers&lt;/strong&gt; continue to impact cross-platform development efforts&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity with Windows test suite work in eio encountering technical challenges</summary><published>2025-02-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-7</id><title>Week 7, 2025: Single repository active with new Barrier synchronization primitive added to picos library</title><updated>2025-02-16T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/351" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Poisonable Barrier synchronization primitive&lt;/strong&gt;&lt;/a&gt; added to &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; &lt;code&gt;picos_std.sync&lt;/code&gt; module with slim implementation using bit manipulation for performance (&lt;a href="https://github.com/ocaml-multicore/picos/issues/351"&gt;ocaml-multicore/picos#351&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/351" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Barrier API&lt;/strong&gt;&lt;/a&gt; supports configurable number of parties, automatic poisoning on cancellation, and broadcast notification when all parties arrive (&lt;a href="https://github.com/ocaml-multicore/picos/issues/351"&gt;ocaml-multicore/picos#351&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/351" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization&lt;/strong&gt;&lt;/a&gt; through fetch&lt;em&gt;and&lt;/em&gt;add operations and single int Awaitable.t storage for barrier state (&lt;a href="https://github.com/ocaml-multicore/picos/issues/351"&gt;ocaml-multicore/picos#351&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Limited activity&lt;/strong&gt; across the multicore group with only &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; showing development progress during week 7&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Single major feature addition&lt;/strong&gt; with the new Barrier synchronization primitive implementation in picos&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Eight repositories&lt;/strong&gt; (&lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;) remained inactive&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/351" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance-focused synchronization design&lt;/strong&gt;&lt;/a&gt; with emphasis on slim implementations using bit manipulation and atomic operations in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/351"&gt;ocaml-multicore/picos#351&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/351" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Comprehensive poisoning support&lt;/strong&gt;&lt;/a&gt; across synchronization primitives to handle cancellation scenarios gracefully (&lt;a href="https://github.com/ocaml-multicore/picos/issues/351"&gt;ocaml-multicore/picos#351&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/351" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Single-field state storage approach&lt;/strong&gt;&lt;/a&gt; for reducing memory overhead in concurrent data structures (&lt;a href="https://github.com/ocaml-multicore/picos/issues/351"&gt;ocaml-multicore/picos#351&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Single repository active with new Barrier synchronization primitive added to picos library</summary><published>2025-02-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-6</id><title>Week 6, 2025: Limited activity focused on API enhancements in eio and concurrent data structure development in picos</title><updated>2025-02-09T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Test readability&lt;/strong&gt; improvements in MPSC queue tests using pipeline operators (&lt;code&gt;|&gt;&lt;/code&gt;) for better code flow in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/commit/1666b8c8a3bdfd34690ed2252e2ba61d9bfe5eae"&gt;1666b8c8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Terminology update&lt;/strong&gt; from "Lock" to "Mutex" in test names for consistency in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/commit/608deecbb46a83564f4cdbff45ef5b6056078e1f"&gt;608deec&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Selective activity&lt;/strong&gt; across multicore group with only 2 of 9 repositories showing development progress during week 6&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/796" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API-focused development&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with new buffered serialization proposals and stream functionality enhancements (&lt;a href="https://github.com/ocaml-multicore/eio/issues/796"&gt;#796&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/790"&gt;#790&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/350" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Concurrent data structures progress&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with MPMC queue implementation draft and test code improvements (&lt;a href="https://github.com/ocaml-multicore/picos/issues/350"&gt;#350&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Limited contributor engagement&lt;/strong&gt; with 3 active contributors across the entire group during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/790" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Stream API design philosophy&lt;/strong&gt;&lt;/a&gt; discussion by &lt;a href="https://github.com/xavierm02"&gt;MONTILLET Xavier&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; exploring mathematical completeness versus practical implementation concerns, covering lock-holding operations and memory-bounded server scenarios (&lt;a href="https://github.com/ocaml-multicore/eio/issues/790"&gt;#790&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;API usability focus&lt;/strong&gt; with emphasis on network protocol use cases and practical serialization scenarios in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Concurrent data structure innovation&lt;/strong&gt; with advanced pointer reversal techniques for MPMC queues in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Code quality improvements&lt;/strong&gt; through better test organization and consistent terminology across multicore projects&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity focused on API enhancements in eio and concurrent data structure development in picos</summary><published>2025-02-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-5</id><title>Week 5, 2025: Windows platform fixes in eio and hash table improvements in picos with OCaml version modernization across repositories</title><updated>2025-02-02T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/pull/795" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows stdin blocking fixes&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/pull/795"&gt;ocaml-multicore/eio#795&lt;/a&gt; resolved domain blocking issues by adding &lt;code&gt;await_readable&lt;/code&gt; calls before file descriptor operations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/349" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Hash table copy function&lt;/strong&gt;&lt;/a&gt; added to picos in &lt;a href="https://github.com/ocaml-multicore/picos/issues/349"&gt;ocaml-multicore/picos#349&lt;/a&gt; enabling independent copies of hash tables for improved data structure manipulation&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;OCaml 5.2 minimum version requirement&lt;/strong&gt; implemented in eio removing 149 lines of legacy cstruct stubs and leveraging new &lt;code&gt;Unix.read_bigarray&lt;/code&gt; functions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/347" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Memory allocation optimization&lt;/strong&gt;&lt;/a&gt; in picos &lt;a href="https://github.com/ocaml-multicore/picos/issues/347"&gt;ocaml-multicore/picos#347&lt;/a&gt; using mutable fields to guarantee unique &lt;code&gt;Resize&lt;/code&gt; block allocation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/348" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Relaxed size estimate reading&lt;/strong&gt;&lt;/a&gt; performance improvement in picos &lt;a href="https://github.com/ocaml-multicore/picos/issues/348"&gt;ocaml-multicore/picos#348&lt;/a&gt; reducing contention in concurrent hash table access&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Limited activity&lt;/strong&gt; across the multicore ecosystem with only 2 of 9 repositories showing development progress during this week&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/pull/795" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform compatibility focus&lt;/strong&gt;&lt;/a&gt; with targeted Windows fixes addressing critical stdin handling issues in &lt;a href="https://github.com/ocaml-multicore/eio/pull/795"&gt;ocaml-multicore/eio#795&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Core infrastructure improvements&lt;/strong&gt; in concurrent data structures with hash table enhancements in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;OCaml ecosystem modernization&lt;/strong&gt; through adoption of OCaml 5.2 features and removal of legacy compatibility code&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance optimization trends&lt;/strong&gt; focusing on memory allocation behavior and concurrent access patterns&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific optimization&lt;/strong&gt; approach targeting Windows compatibility issues without affecting other platforms&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;OCaml version modernization&lt;/strong&gt; trend continuing with minimum version bumps to leverage newer standard library capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Data structure performance focus&lt;/strong&gt; with concurrent access optimization becoming a priority across multicore libraries&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Legacy code elimination&lt;/strong&gt; strategy removing custom implementations when equivalent functionality becomes available in OCaml standard library&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Windows platform fixes in eio and hash table improvements in picos with OCaml version modernization across repositories</summary><published>2025-02-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-4</id><title>Week 4, 2025: Major synchronization primitives expansion in Picos and Windows platform improvements in Eio this week</title><updated>2025-01-26T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/345" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Picos Lock&lt;/strong&gt;&lt;/a&gt;: New poisonable mutual exclusion lock with low overhead, optimistic implementation that eliminates runtime ownership error checking (&lt;a href="https://github.com/ocaml-multicore/picos/issues/345"&gt;ocaml-multicore/picos#345&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/341" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Picos Rwlock&lt;/strong&gt;&lt;/a&gt;: New poisonable and freezable read-write lock with low overhead implementation optimized for read-heavy workloads (&lt;a href="https://github.com/ocaml-multicore/picos/issues/341"&gt;ocaml-multicore/picos#341&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/344" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Picos Sem&lt;/strong&gt;&lt;/a&gt;: New poisonable counting semaphore with low overhead and optimistic implementation that outperforms previous Semaphore implementation (&lt;a href="https://github.com/ocaml-multicore/picos/issues/344"&gt;ocaml-multicore/picos#344&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/795" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Eio Windows stdin blocking fix&lt;/strong&gt;&lt;/a&gt;: Fixed Windows stdin blocking issue by adding proper &lt;code&gt;await_readable&lt;/code&gt; calls before file descriptor reads (&lt;a href="https://github.com/ocaml-multicore/eio/issues/795"&gt;ocaml-multicore/eio#795&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/795" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Eio Windows broken pipe handling&lt;/strong&gt;&lt;/a&gt;: Resolved broken pipe exceptions on Windows when reading from stdin in pipe commands by replacing &lt;code&gt;Unix_cstruct.read&lt;/code&gt; with &lt;code&gt;Unix.read_bigarray&lt;/code&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/795"&gt;ocaml-multicore/eio#795&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/795" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Eio Windows I/O modernization&lt;/strong&gt;&lt;/a&gt;: Modernized Windows I/O implementation by removing custom C stubs and utilizing OCaml 5.2's native &lt;code&gt;Unix.read_bigarray&lt;/code&gt; and &lt;code&gt;Unix.write_bigarray&lt;/code&gt; functions (&lt;a href="https://github.com/ocaml-multicore/eio/issues/795"&gt;ocaml-multicore/eio#795&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active development&lt;/strong&gt; concentrated in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with major synchronization primitives expansion and &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with Windows platform improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository discussions&lt;/strong&gt; on synchronization performance between &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; regarding Stdlib.Semaphore alternatives&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory safety focus&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; with ongoing investigation of work-stealing deque synchronization concerns&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform stability efforts&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; targeting Windows MINGW64 compatibility issues&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/kcas/issues/190" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Synchronization performance discussion&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; explaining how Picos Lock, Semaphore, and Rwlock implementations achieve 2-3x performance improvements over Stdlib.Mutex for uncontended cases (&lt;a href="https://github.com/ocaml-multicore/kcas/issues/190"&gt;ocaml-multicore/kcas#190&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific improvements&lt;/strong&gt; with &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; Windows fixes potentially benefiting other multicore ecosystem projects that depend on Eio for I/O operations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/346" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Draft benchmark work&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; to demonstrate new Sem implementation performance through &lt;code&gt;Bounded_q&lt;/code&gt; bench rewrite (&lt;a href="https://github.com/ocaml-multicore/picos/issues/346"&gt;ocaml-multicore/picos#346&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Work-stealing deque memory safety&lt;/strong&gt;&lt;/a&gt; concerns raised by &lt;a href="https://github.com/clef-men"&gt;@clef-men&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; regarding synchronization in &lt;code&gt;ws_deque.ml&lt;/code&gt; implementation, with &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; acknowledging the issue and committing to investigation (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183"&gt;ocaml-multicore/saturn#183&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/kcas/issues/190" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Stdlib.Semaphore performance comparison&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/UnixJunkie"&gt;François Bérenger&lt;/a&gt; and &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt; discussing Picos synchronization primitives as high-performance alternatives (&lt;a href="https://github.com/ocaml-multicore/kcas/issues/190"&gt;ocaml-multicore/kcas#190&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Performance-first synchronization design&lt;/strong&gt; with all new Picos primitives (Lock, Rwlock, Sem) prioritizing low overhead and optimistic implementations over runtime safety checks, representing a shift toward higher-performance concurrent programming&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform modernization&lt;/strong&gt; trend leveraging newer OCaml runtime features to eliminate custom C implementations, as demonstrated by Eio's Windows I/O stack migration to native Unix bigarray functions&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Poisoning pattern standardization&lt;/strong&gt; across new synchronization primitives for consistent error handling and resource cleanup mechanisms in concurrent code&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-platform stability focus&lt;/strong&gt; with comprehensive Windows support improvements addressing real-world usage scenarios like pipe command integration in multicore applications&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major synchronization primitives expansion in Picos and Windows platform improvements in Eio this week</summary><published>2025-01-26T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-3</id><title>Week 3, 2025: Limited activity with documentation improvements in EIO and testing enhancements in Picos</title><updated>2025-01-19T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;Updated &lt;a href="https://github.com/ocaml-multicore/eio/issues/794" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;documentation examples&lt;/strong&gt;&lt;/a&gt; for Executor_pool with consistent pool creation patterns and streamlined code (&lt;a href="https://github.com/ocaml-multicore/eio/issues/794"&gt;ocaml-multicore/eio#794&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enhanced &lt;strong class="achievement"&gt;Net.run&lt;em&gt;server documentation&lt;/strong&gt; with explicit guidance on using Executor&lt;/em&gt;pool for CPU-intensive services (&lt;a href="https://github.com/ocaml-multicore/eio/issues/794"&gt;ocaml-multicore/eio#794&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Replaced &lt;a href="https://github.com/ocaml-multicore/eio/issues/794" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;outdated example references&lt;/strong&gt;&lt;/a&gt; with current cohttp-eio and capnp-rpc examples in the README (&lt;a href="https://github.com/ocaml-multicore/eio/issues/794"&gt;ocaml-multicore/eio#794&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Simplified &lt;a href="https://github.com/ocaml-multicore/eio/issues/794" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;switch examples&lt;/strong&gt;&lt;/a&gt; with more typical and clear usage patterns (&lt;a href="https://github.com/ocaml-multicore/eio/issues/794"&gt;ocaml-multicore/eio#794&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/794" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt;&lt;/a&gt; centered on &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with documentation improvements merged by &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/794"&gt;ocaml-multicore/eio#794&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/342" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Testing infrastructure&lt;/strong&gt;&lt;/a&gt; progress in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with QCheck STM upgrade by &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/342"&gt;ocaml-multicore/picos#342&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/792" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform compatibility&lt;/strong&gt;&lt;/a&gt; focus with Windows-specific I/O issues reported in EIO (&lt;a href="https://github.com/ocaml-multicore/eio/issues/792"&gt;ocaml-multicore/eio#792&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/793"&gt;ocaml-multicore/eio#793&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded for seven repositories: domainslib, ocaml-uring, meio, saturn, eio-trace, kcas, and ocaml-iomux&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/794" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation cleanup&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; specifically removed references to &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt; as an unstable project (&lt;a href="https://github.com/ocaml-multicore/eio/issues/794"&gt;ocaml-multicore/eio#794&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/342" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Testing infrastructure&lt;/strong&gt;&lt;/a&gt; improvements in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with QCheck STM upgrades that may benefit concurrent testing across other multicore repositories (&lt;a href="https://github.com/ocaml-multicore/picos/issues/342"&gt;ocaml-multicore/picos#342&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/791" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Multi-domain coordination&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/yawaramin"&gt;Yawar Amin&lt;/a&gt; and &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; about automatically running parallel tasks without explicit domain manager usage, exploring OCaml GC synchronization challenges (&lt;a href="https://github.com/ocaml-multicore/eio/issues/791"&gt;ocaml-multicore/eio#791&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/792" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows I/O platform issues&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/bdodrem"&gt;Benoit&lt;/a&gt; reporting problems and &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; providing technical guidance on implementing Windows-specific checks similar to POSIX implementations (&lt;a href="https://github.com/ocaml-multicore/eio/issues/792"&gt;ocaml-multicore/eio#792&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/793"&gt;ocaml-multicore/eio#793&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific compatibility&lt;/strong&gt; focus with Windows I/O handling receiving attention for stdin pipe operations and domain blocking issues in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation maturity&lt;/strong&gt; as projects move from experimental status to stable with updated examples and removal of "please try porting" language in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Testing infrastructure&lt;/strong&gt; evolution with QCheck STM upgrades in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; for better blocking data structure testing&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Reduced repository activity&lt;/strong&gt; with seven of nine repositories showing no commits or issues during this week&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity with documentation improvements in EIO and testing enhancements in Picos</summary><published>2025-01-19T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-2</id><title>Week 2, 2025: Infrastructure modernization with OCaml 5.3 adoption and Windows platform compatibility improvements</title><updated>2025-01-12T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/340" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 5.3 support&lt;/strong&gt;&lt;/a&gt; added to &lt;a href="https://github.com/ocaml-multicore/picos/issues/340"&gt;ocaml-multicore/picos#340&lt;/a&gt; for benchmarking and testing environments with immediate CI integration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/kcas/issues/210" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 5.3 support&lt;/strong&gt;&lt;/a&gt; implemented in &lt;a href="https://github.com/ocaml-multicore/kcas/issues/210"&gt;ocaml-multicore/kcas#210&lt;/a&gt; including CI workflow updates and benchmark infrastructure modernization&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/pull/181" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCamlformat standardization&lt;/strong&gt;&lt;/a&gt; completed across 36 files in &lt;a href="https://github.com/ocaml-multicore/saturn/pull/181"&gt;ocaml-multicore/saturn#181&lt;/a&gt; affecting all major data structure interfaces and implementations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Windows CI optimization&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; by dropping OCaml versions &lt;5.2.1 and updating to OCaml 5.2.1 and 5.3.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Four active repositories&lt;/strong&gt; out of nine showed development activity with focus on infrastructure improvements and platform compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure modernization&lt;/strong&gt; dominated the week with OCaml 5.3 adoption across &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Windows platform support&lt;/strong&gt; received attention through bug reports and fixes in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;New feature development&lt;/strong&gt; progressed with advanced concurrency primitives in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/340" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Coordinated OCaml 5.3 adoption&lt;/strong&gt;&lt;/a&gt; implemented by &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; across &lt;a href="https://github.com/ocaml-multicore/picos/issues/340"&gt;ocaml-multicore/picos#340&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/kcas/issues/210"&gt;ocaml-multicore/kcas#210&lt;/a&gt; with consistent CI workflow and benchmark infrastructure updates&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure alignment&lt;/strong&gt; pattern emerging with similar CI modernization approaches being applied across multiple repositories in the group&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Memory safety concern&lt;/strong&gt;&lt;/a&gt; raised by &lt;a href="https://github.com/clef-men"&gt;@clef-men&lt;/a&gt; regarding work-stealing deque synchronization and potential race conditions with &lt;code&gt;Obj.magic()&lt;/code&gt; reads during realloc operations in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/183"&gt;ocaml-multicore/saturn#183&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/791" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Domain management patterns&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/ocaml-multicore/eio/issues/791"&gt;ocaml-multicore/eio#791&lt;/a&gt; with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; providing insights on best practices for multi-domain application design&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure modernization&lt;/strong&gt; continues across the group with consistent adoption of OCaml 5.3 and streamlined CI configurations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility focus&lt;/strong&gt; emerging with specific attention to Windows support and cross-platform reliability improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Advanced concurrency primitives&lt;/strong&gt; development accelerating with sophisticated implementations addressing performance considerations like writer starvation and memory safety&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory safety awareness&lt;/strong&gt; increasing with formal verification concerns being raised about existing lockfree data structures&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Infrastructure modernization with OCaml 5.3 adoption and Windows platform compatibility improvements</summary><published>2025-01-12T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2025/week-1</id><title>Week 1, 2025: Domain manager coordination discussion progressed in eio with prototype implementation</title><updated>2025-01-05T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Limited activity across the multicore group during the first week of 2025&lt;/li&gt;
&lt;li&gt;Only &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; showed development activity&lt;/li&gt;
&lt;li&gt;Eight repositories remained inactive: &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/791" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Multi-domain task execution architecture&lt;/strong&gt;&lt;/a&gt; discussion featuring divide-and-conquer algorithms and float array summation examples in &lt;a href="https://github.com/ocaml-multicore/eio/issues/791"&gt;ocaml-multicore/eio#791&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Multi-domain parallelization focus&lt;/strong&gt; with prototype implementations targeting automatic task distribution across domains&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Domain manager coordination discussion progressed in eio with prototype implementation</summary><published>2025-01-05T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-52</id><title>Week 52, 2024: Design discussions in eio focused on multicore coordination and type safety improvements</title><updated>2024-12-29T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Activity concentrated in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with architectural design discussions&lt;/li&gt;
&lt;li&gt;Two substantive issues opened addressing multicore coordination patterns and type safety improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yawaramin"&gt;Yawar Amin&lt;/a&gt; and &lt;a href="https://github.com/mbarbin"&gt;Mathieu Barbin&lt;/a&gt; leading design conversations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/791" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Domain coordination design&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/yawaramin"&gt;Yawar Amin&lt;/a&gt; proposing &lt;code&gt;run_multi&lt;/code&gt; API to coordinate domain pools across application components (&lt;a href="https://github.com/ocaml-multicore/eio/issues/791"&gt;ocaml-multicore/eio#791&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type safety improvements&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/mbarbin"&gt;Mathieu Barbin&lt;/a&gt; exploring object-based alternatives to address Obj.magic robustness concerns in Eio.Resource (&lt;a href="https://github.com/ocaml-multicore/eio/issues/774"&gt;ocaml-multicore/eio#774&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;Design focus on improving multicore coordination patterns for easier domain management&lt;/li&gt;
&lt;li&gt;Continued emphasis on type safety improvements to reduce reliance on unsafe constructs like Obj.magic&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Design discussions in eio focused on multicore coordination and type safety improvements</summary><published>2024-12-29T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-51</id><title>Week 51, 2024: Limited activity focused on EIO resource safety discussions and KCAS code quality improvements</title><updated>2024-12-22T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Minimal group activity&lt;/strong&gt; across the multicore ecosystem with only 2 of 9 repositories showing activity during week 51&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Technical discussions&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; addressing resource type safety and DNS resolution bugs (&lt;a href="https://github.com/ocaml-multicore/eio/issues/774"&gt;ocaml-multicore/eio#774&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/776"&gt;ocaml-multicore/eio#776&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/kcas/issues/208" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code maintenance&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt; with formatting updates and algorithm verification work (&lt;a href="https://github.com/ocaml-multicore/kcas/issues/208"&gt;ocaml-multicore/kcas#208&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas/issues/209"&gt;ocaml-multicore/kcas#209&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Seven repositories&lt;/strong&gt; (&lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;) had no activity during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Resource type safety investigation&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/mbarbin"&gt;Mathieu Barbin&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; exploring ways to make Eio.Resource more robust and prevent invalid uses that lead to runtime issues (&lt;a href="https://github.com/ocaml-multicore/eio/issues/774"&gt;ocaml-multicore/eio#774&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/776" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DNS resolution bug report&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/serpent7776"&gt;Krzysztof Leśniak&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; showing &lt;code&gt;Eio.Net.getaddrinfo_stream&lt;/code&gt; fails after exactly 1019 calls on Linux systems, with &lt;a href="https://github.com/SGrondin"&gt;Simon Grondin&lt;/a&gt; providing guidance on Switch lifecycle management (&lt;a href="https://github.com/ocaml-multicore/eio/issues/776"&gt;ocaml-multicore/eio#776&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Focus on code quality&lt;/strong&gt; with formatting standardization and algorithm verification efforts in &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/776" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform-specific issue investigation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; addressing Linux-specific DNS resolution problems (&lt;a href="https://github.com/ocaml-multicore/eio/issues/776"&gt;ocaml-multicore/eio#776&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type safety discussions&lt;/strong&gt;&lt;/a&gt; around resource management in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; exploring alternative implementation approaches (&lt;a href="https://github.com/ocaml-multicore/eio/issues/774"&gt;ocaml-multicore/eio#774&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity focused on EIO resource safety discussions and KCAS code quality improvements</summary><published>2024-12-22T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-50</id><title>Week 50, 2024: Limited activity focused on documentation automation, API design discussions, and tooling improvements</title><updated>2024-12-15T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/179" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Automated documentation deployment&lt;/strong&gt;&lt;/a&gt; to GitHub Pages implemented in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; using GitHub Actions workflow (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/179"&gt;ocaml-multicore/saturn#179&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/180" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fixed documentation links&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; README correcting API documentation paths (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/180"&gt;ocaml-multicore/saturn#180&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;New bind&lt;em&gt;on and await&lt;/em&gt;on functions&lt;/strong&gt; added to Picos_lwt module in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; for enhanced Lwt integration (&lt;a href="https://github.com/ocaml-multicore/picos/issues/338"&gt;ocaml-multicore/picos#338&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/339" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCamlformat upgrade&lt;/strong&gt;&lt;/a&gt; to version 0.27.0 in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; reformatted entire codebase (&lt;a href="https://github.com/ocaml-multicore/picos/issues/339"&gt;ocaml-multicore/picos#339&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories active&lt;/strong&gt; out of nine in the multicore group during week 50: &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation infrastructure&lt;/strong&gt; improvements across multiple repositories with automated deployment and link fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/790" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API design discussions&lt;/strong&gt;&lt;/a&gt; ongoing for stream enhancements in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/790"&gt;ocaml-multicore/eio#790&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/338" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Ecosystem integration&lt;/strong&gt;&lt;/a&gt; development with new Lwt binding functions in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/338"&gt;ocaml-multicore/picos#338&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Maintenance activities&lt;/strong&gt; including codebase formatting updates and tooling improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/790" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Stream API design&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; questioning the complexity of &lt;code&gt;add_nonblocking&lt;/code&gt; while supporting &lt;code&gt;capacity&lt;/code&gt; and &lt;code&gt;is_full&lt;/code&gt; methods (&lt;a href="https://github.com/ocaml-multicore/eio/issues/790"&gt;ocaml-multicore/eio#790&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/179" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation automation&lt;/strong&gt;&lt;/a&gt; focus with GitHub Actions deployment workflows being implemented for improved developer experience (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/179"&gt;ocaml-multicore/saturn#179&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/338" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Ecosystem integration&lt;/strong&gt;&lt;/a&gt; development continuing with Lwt binding functions to enhance interoperability (&lt;a href="https://github.com/ocaml-multicore/picos/issues/338"&gt;ocaml-multicore/picos#338&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/339" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Tooling modernization&lt;/strong&gt;&lt;/a&gt; through formatter upgrades and development workflow improvements (&lt;a href="https://github.com/ocaml-multicore/picos/issues/339"&gt;ocaml-multicore/picos#339&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/790" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API design discussions&lt;/strong&gt;&lt;/a&gt; for non-blocking operations in stream handling for improved asynchronous C callback support (&lt;a href="https://github.com/ocaml-multicore/eio/issues/790"&gt;ocaml-multicore/eio#790&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity focused on documentation automation, API design discussions, and tooling improvements</summary><published>2024-12-15T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-49</id><title>Week 49, 2024: Saturn 1.0 released with new lockfree data structures while Eio focused on FreeBSD compatibility fixes and ongoing chmod implementation</title><updated>2024-12-08T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/173" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn lockfree bag data structure&lt;/strong&gt;&lt;/a&gt; added hash table-based implementation with &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;pop_exn&lt;/code&gt;, and &lt;code&gt;pop_opt&lt;/code&gt; operations (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/173"&gt;ocaml-multicore/saturn#173&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/172" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn skiplist API extensions&lt;/strong&gt;&lt;/a&gt; introduced &lt;code&gt;find_exn&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt; functions with comprehensive documentation and usage examples (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/172"&gt;ocaml-multicore/saturn#172&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/787" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Eio FreeBSD socket close handling&lt;/strong&gt;&lt;/a&gt; now automatically ignores &lt;code&gt;ECONNRESET&lt;/code&gt; errors during socket close operations, following Python and Ruby patterns (&lt;a href="https://github.com/ocaml-multicore/eio/issues/787"&gt;ocaml-multicore/eio#787&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/789" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Eio build process improvement&lt;/strong&gt;&lt;/a&gt; removed problematic &lt;code&gt;dune subst&lt;/code&gt; step that caused benchmark installation failures with dune 3.17.0 (&lt;a href="https://github.com/ocaml-multicore/eio/issues/789"&gt;ocaml-multicore/eio#789&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major milestone achieved&lt;/strong&gt; with &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;Saturn 1.0 release&lt;/a&gt; delivering stable concurrent data structures library for multicore OCaml&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility focus&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;Eio&lt;/a&gt; addressing FreeBSD-specific socket handling and build system issues&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Active development continuing&lt;/strong&gt; on file system operations with chmod support implementation in draft stage&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Technical discussions advancing&lt;/strong&gt; around memory optimization strategies and concurrent data structure performance&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Repository stability&lt;/strong&gt; maintained across remaining multicore libraries with no breaking changes reported&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/171" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Memory optimization analysis&lt;/strong&gt;&lt;/a&gt; spanning Saturn's concurrent data structures with &lt;a href="https://github.com/art-w"&gt;Art W&lt;/a&gt; and &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; examining &lt;code&gt;copy_as_padded&lt;/code&gt; performance implications and false sharing mitigation strategies (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/171"&gt;ocaml-multicore/saturn#171&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/788" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Debugging collaboration&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/ocaml-multicore/eio"&gt;Eio&lt;/a&gt; and its tracing tools, with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; providing io_uring trace analysis for parallel stdout writing issues (&lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/788" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Parallel stdout writing investigation&lt;/strong&gt;&lt;/a&gt; in Eio with &lt;a href="https://github.com/wildfield"&gt;Wildfield&lt;/a&gt; reporting "Interrupted system call" errors across multiple domains, leading to detailed io_uring tracing analysis by &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/788"&gt;ocaml-multicore/eio#788&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/171" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Memory performance optimization&lt;/strong&gt;&lt;/a&gt; discussion in Saturn examining trade-offs of &lt;code&gt;copy_as_padded&lt;/code&gt; usage, with &lt;a href="https://github.com/art-w"&gt;Art W&lt;/a&gt; raising memory overhead concerns and &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; providing detailed false sharing analysis (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/171"&gt;ocaml-multicore/saturn#171&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/178" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API design planning&lt;/strong&gt;&lt;/a&gt; for Saturn skiplist extensions with &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; identifying additional functions needed to match hash table operation completeness (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/178"&gt;ocaml-multicore/saturn#178&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;API standardization initiative&lt;/strong&gt; across Saturn data structures establishing consistent function naming, documentation patterns, and usage examples for the 1.0 release&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific robustness&lt;/strong&gt; focus in Eio addressing FreeBSD compatibility issues and building more resilient cross-platform behavior&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance optimization discussions&lt;/strong&gt; gaining momentum around memory layout strategies and concurrent data structure efficiency in multicore environments&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation-first development&lt;/strong&gt; approach prioritizing comprehensive usage examples and safety warnings alongside feature implementation&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Saturn 1.0 released with new lockfree data structures while Eio focused on FreeBSD compatibility fixes and ongoing chmod implementation</summary><published>2024-12-08T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-48</id><title>Week 48, 2024: Major Saturn 1.0 release preparation with platform compatibility fixes across eio, picos, and eio-trace</title><updated>2024-12-01T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/123" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn 1.0 release preparation&lt;/strong&gt;&lt;/a&gt; reached completion with new lockfree bag implementation and comprehensive documentation standardization across data structures (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/123"&gt;ocaml-multicore/saturn#123&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn/issues/173"&gt;ocaml-multicore/saturn#173&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/786" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;FreeBSD compatibility&lt;/strong&gt;&lt;/a&gt; improvement in socket close operations to handle &lt;code&gt;ECONNRESET&lt;/code&gt; errors automatically in eio (&lt;a href="https://github.com/ocaml-multicore/eio/issues/786"&gt;ocaml-multicore/eio#786&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml compatibility&lt;/strong&gt; restored in picos by removing reference to &lt;code&gt;caml_ml_domain_id&lt;/code&gt; on OCaml 4 (&lt;a href="https://github.com/ocaml-multicore/picos/issues/333"&gt;ocaml-multicore/picos#333&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio-trace/issues/44" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber lifetime tracking&lt;/strong&gt;&lt;/a&gt; bug fixed in eio-trace where fibers ending before suspend operations would incorrectly appear active (&lt;a href="https://github.com/ocaml-multicore/eio-trace/issues/44"&gt;ocaml-multicore/eio-trace#44&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/335" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cohttp 6.0.0 upgrade&lt;/strong&gt;&lt;/a&gt; completed in picos with API adjustments removing deprecated parameters (&lt;a href="https://github.com/ocaml-multicore/picos/issues/335"&gt;ocaml-multicore/picos#335&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Five active repositories&lt;/strong&gt; with substantial development activity while four repositories (domainslib, meio, kcas, ocaml-iomux) showed no activity this week&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Saturn repository&lt;/strong&gt; dominated activity with comprehensive 1.0 release preparation including five new PRs and extensive issue closure&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility&lt;/strong&gt; focus across multiple repositories with FreeBSD fixes in eio and js&lt;em&gt;of&lt;/em&gt;ocaml compatibility in picos&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt;&lt;/strong&gt; contributed across three repositories (eio, ocaml-uring, eio-trace) demonstrating cross-project coordination&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Maintenance and stability&lt;/strong&gt; emphasized with dependency upgrades in picos and debugging assistance in ocaml-uring&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt;&lt;/strong&gt; active across three repositories: implementing FreeBSD socket fixes in &lt;a href="https://github.com/ocaml-multicore/eio/issues/786"&gt;ocaml-multicore/eio#786&lt;/a&gt;, providing debugging support in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/119"&gt;ocaml-multicore/ocaml-uring#119&lt;/a&gt;, and fixing fiber display timing in &lt;a href="https://github.com/ocaml-multicore/eio-trace/issues/44"&gt;ocaml-multicore/eio-trace#44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility coordination&lt;/strong&gt; with FreeBSD improvements in eio and js&lt;em&gt;of&lt;/em&gt;ocaml compatibility fixes in picos addressing similar cross-platform development challenges&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Tracing ecosystem support&lt;/strong&gt; with eio-trace improvements directly benefiting eio users who rely on trace visualization for debugging concurrent applications&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/331" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Infrastructure resilience&lt;/strong&gt;&lt;/a&gt; demonstrated by OCaml-CI improvements eliminating need for OpenBSD-specific workarounds in picos (&lt;a href="https://github.com/ocaml-multicore/picos/issues/331"&gt;ocaml-multicore/picos#331&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/171" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization discussion&lt;/strong&gt;&lt;/a&gt; in Saturn regarding &lt;code&gt;copy_as_padded&lt;/code&gt; usage patterns and memory overhead concerns raised by &lt;a href="https://github.com/art-w"&gt;@art-w&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/171"&gt;ocaml-multicore/saturn#171&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/149" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API design discussion&lt;/strong&gt;&lt;/a&gt; about Saturn.Queue.push interface consistency with &lt;a href="https://github.com/Vincent-lau"&gt;Shuntian Liu&lt;/a&gt; questioning design choices and &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; providing detailed rationale (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/149"&gt;ocaml-multicore/saturn#149&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml breakage&lt;/strong&gt; identified and reported by &lt;a href="https://github.com/hhugo"&gt;@hhugo&lt;/a&gt; affecting picos.thread on OCaml &lt; 5 with proposed solution (&lt;a href="https://github.com/ocaml-multicore/picos/issues/332"&gt;ocaml-multicore/picos#332&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Release preparation focus&lt;/strong&gt; with Saturn 1.0 approaching and comprehensive documentation standardization becoming the primary development pattern&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-platform compatibility&lt;/strong&gt; emerging as key priority with FreeBSD socket handling improvements and js&lt;em&gt;of&lt;/em&gt;ocaml compatibility fixes addressing diverse deployment environments&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Dependency maintenance cycles&lt;/strong&gt; apparent with cohttp 6.0.0 upgrades and infrastructure improvements reducing platform-specific workarounds&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Thomas Leonard's cross-repository involvement&lt;/strong&gt; indicating technical leadership and coordination across multiple multicore ecosystem components&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major Saturn 1.0 release preparation with platform compatibility fixes across eio, picos, and eio-trace</summary><published>2024-12-01T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-47</id><title>Week 47, 2024: Major releases in Eio v1.2 and Saturn with new bounded data structures, plus cross-platform compatibility fixes</title><updated>2024-11-24T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/780" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Eio v1.2 release&lt;/strong&gt;&lt;/a&gt; with Windows networking improvements addressing hostname resolution failures through &lt;a href="https://github.com/ocaml-multicore/eio/issues/780"&gt;ocaml-multicore/eio#780&lt;/a&gt;, enhanced error handling for connection resets via &lt;a href="https://github.com/ocaml-multicore/eio/issues/783"&gt;ocaml-multicore/eio#783&lt;/a&gt;, and OpenBSD compatibility improvements in &lt;a href="https://github.com/ocaml-multicore/eio/issues/782"&gt;ocaml-multicore/eio#782&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn bounded data structures&lt;/strong&gt;&lt;/a&gt; including bounded queue implementation with capacity-limited operations via &lt;a href="https://github.com/ocaml-multicore/saturn/issues/160"&gt;ocaml-multicore/saturn#160&lt;/a&gt; and bounded stack implementation with comprehensive API in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/156"&gt;ocaml-multicore/saturn#156&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/158" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn API uniformization&lt;/strong&gt;&lt;/a&gt; with enhanced Treiber stack API containing new functions like &lt;code&gt;of_list&lt;/code&gt;, &lt;code&gt;peek_exn&lt;/code&gt;, &lt;code&gt;pop_exn&lt;/code&gt;, and sequence operations through &lt;a href="https://github.com/ocaml-multicore/saturn/issues/158"&gt;ocaml-multicore/saturn#158&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn performance optimizations&lt;/strong&gt;&lt;/a&gt; in work-stealing deque achieving 2-3x improvements through false sharing elimination and contention reduction via &lt;a href="https://github.com/ocaml-multicore/saturn/issues/124"&gt;ocaml-multicore/saturn#124&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Picos js&lt;em&gt;of&lt;/em&gt;ocaml compatibility&lt;/strong&gt; fix removing reference to &lt;code&gt;caml_ml_domain_id&lt;/code&gt; on OCaml 4 through &lt;a href="https://github.com/ocaml-multicore/picos/issues/333"&gt;ocaml-multicore/picos#333&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Three repositories delivered major releases with &lt;strong class="achievement"&gt;ocaml-multicore/eio&lt;/strong&gt; publishing v1.2 focused on Windows and OpenBSD compatibility, &lt;strong class="achievement"&gt;ocaml-multicore/saturn&lt;/strong&gt; completing bounded data structures development, and &lt;strong class="achievement"&gt;ocaml-multicore/picos&lt;/strong&gt; addressing js&lt;em&gt;of&lt;/em&gt;ocaml compatibility issues&lt;/li&gt;
&lt;li&gt;Active development continued with &lt;a href="https://github.com/ocaml-multicore/eio/issues/781" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;seven new PRs opened&lt;/strong&gt;&lt;/a&gt; across Eio (&lt;a href="https://github.com/ocaml-multicore/eio/issues/781"&gt;ocaml-multicore/eio#781&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/785"&gt;ocaml-multicore/eio#785&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/778"&gt;ocaml-multicore/eio#778&lt;/a&gt;) and Saturn (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/162"&gt;ocaml-multicore/saturn#162&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn/issues/167"&gt;ocaml-multicore/saturn#167&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn/issues/168"&gt;ocaml-multicore/saturn#168&lt;/a&gt;) plus Picos (&lt;a href="https://github.com/ocaml-multicore/picos/issues/331"&gt;ocaml-multicore/picos#331&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/119" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Production issue investigation&lt;/strong&gt;&lt;/a&gt; underway in ocaml-uring with &lt;a href="https://github.com/serpent7776"&gt;Krzysztof Leśniak&lt;/a&gt; reporting random hangs in io_uring completion queue handling via &lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/119"&gt;ocaml-multicore/ocaml-uring#119&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/119" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Debugging tool integration&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; recommending eio-trace for diagnosing ocaml-uring hangs, demonstrating cross-project tool usage in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/119"&gt;ocaml-multicore/ocaml-uring#119&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API design consistency&lt;/strong&gt;&lt;/a&gt; emerging across Saturn data structures with uniform function naming patterns being applied to bounded queue (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160"&gt;ocaml-multicore/saturn#160&lt;/a&gt;), bounded stack (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/156"&gt;ocaml-multicore/saturn#156&lt;/a&gt;), and existing queue implementations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/780" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-platform compatibility coordination&lt;/strong&gt;&lt;/a&gt; with Windows fixes in Eio (&lt;a href="https://github.com/ocaml-multicore/eio/issues/780"&gt;ocaml-multicore/eio#780&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/783"&gt;ocaml-multicore/eio#783&lt;/a&gt;) and js&lt;em&gt;of&lt;/em&gt;ocaml compatibility in Picos (&lt;a href="https://github.com/ocaml-multicore/picos/issues/333"&gt;ocaml-multicore/picos#333&lt;/a&gt;) addressing platform-specific issues across the ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;io&lt;em&gt;uring debugging methodology&lt;/strong&gt; with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; providing detailed guidance on using OCAML&lt;/em&gt;RUNTIME_EVENTS and eio-trace for diagnosing production hangs in &lt;a href="https://github.com/ocaml-multicore/ocaml-uring/issues/119"&gt;ocaml-multicore/ocaml-uring#119&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/332" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 4 support rationale&lt;/strong&gt;&lt;/a&gt; discussion where &lt;a href="https://github.com/hhugo"&gt;@hhugo&lt;/a&gt; questioned js&lt;em&gt;of&lt;/em&gt;ocaml compatibility requirements, leading to detailed explanation from &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; about Picos cross-version strategy in &lt;a href="https://github.com/ocaml-multicore/picos/issues/332"&gt;ocaml-multicore/picos#332&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API standardization across data structures&lt;/strong&gt;&lt;/a&gt; with consistent function naming patterns (&lt;code&gt;_exn&lt;/code&gt; suffixes, &lt;code&gt;try_&lt;/code&gt; prefixes) being implemented across Saturn's bounded queue (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160"&gt;ocaml-multicore/saturn#160&lt;/a&gt;), bounded stack (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/156"&gt;ocaml-multicore/saturn#156&lt;/a&gt;), and existing implementations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/780" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-platform robustness focus&lt;/strong&gt;&lt;/a&gt; with targeted fixes for Windows networking in Eio (&lt;a href="https://github.com/ocaml-multicore/eio/issues/780"&gt;ocaml-multicore/eio#780&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/783"&gt;ocaml-multicore/eio#783&lt;/a&gt;), OpenBSD compatibility improvements (&lt;a href="https://github.com/ocaml-multicore/eio/issues/782"&gt;ocaml-multicore/eio#782&lt;/a&gt;), and js&lt;em&gt;of&lt;/em&gt;ocaml fixes in Picos (&lt;a href="https://github.com/ocaml-multicore/picos/issues/333"&gt;ocaml-multicore/picos#333&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/785" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Systematic file system API expansion&lt;/strong&gt;&lt;/a&gt; in Eio with POSIX operations like chmod (&lt;a href="https://github.com/ocaml-multicore/eio/issues/785"&gt;ocaml-multicore/eio#785&lt;/a&gt;) and chown (&lt;a href="https://github.com/ocaml-multicore/eio/issues/781"&gt;ocaml-multicore/eio#781&lt;/a&gt;) being added to match standard Unix functionality&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance-focused optimization&lt;/strong&gt;&lt;/a&gt; demonstrated in Saturn's work-stealing deque improvements (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/124"&gt;ocaml-multicore/saturn#124&lt;/a&gt;) with false sharing elimination and micro-optimizations delivering measurable throughput gains&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major releases in Eio v1.2 and Saturn with new bounded data structures, plus cross-platform compatibility fixes</summary><published>2024-11-24T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-46</id><title>Week 46, 2024: Focused development on error handling improvements, concurrent data structures, and fiber scheduling enhancements across core libraries</title><updated>2024-11-17T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/779" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backtrace preservation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/779"&gt;ocaml-multicore/eio#779&lt;/a&gt; improving error debugging with captured backtraces in &lt;code&gt;fork_daemon&lt;/code&gt; and &lt;code&gt;fork_promise_exn&lt;/code&gt; functions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/330" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced Spawn effect specification&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos/issues/330"&gt;ocaml-multicore/picos#330&lt;/a&gt; with stricter cancelation handling semantics for better fiber scheduling behavior&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Limited but focused activity&lt;/strong&gt; across 3 of 9 repositories with emphasis on core functionality improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/779" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Error handling and debugging&lt;/strong&gt;&lt;/a&gt; enhancements in &lt;a href="https://github.com/ocaml-multicore/eio/issues/779"&gt;ocaml-multicore/eio#779&lt;/a&gt; addressing developer experience issues&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Concurrent data structure development&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/160"&gt;ocaml-multicore/saturn#160&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/saturn/issues/161"&gt;ocaml-multicore/saturn#161&lt;/a&gt; advancing lock-free programming capabilities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/330" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber scheduling improvements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos/issues/330"&gt;ocaml-multicore/picos#330&lt;/a&gt; refining multicore programming abstractions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn dependency avoidance&lt;/strong&gt;&lt;/a&gt; in bounded queue implementation (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160"&gt;ocaml-multicore/saturn#160&lt;/a&gt;) explicitly avoiding Picos dependency to maintain architectural separation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/330" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber scheduling coordination&lt;/strong&gt;&lt;/a&gt; between Picos and Eio through enhanced cancelation semantics in &lt;a href="https://github.com/ocaml-multicore/picos/issues/330"&gt;ocaml-multicore/picos#330&lt;/a&gt; improving interoperability&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/778" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Testing infrastructure patterns&lt;/strong&gt;&lt;/a&gt; being developed in &lt;a href="https://github.com/ocaml-multicore/eio/issues/778"&gt;ocaml-multicore/eio#778&lt;/a&gt; potentially applicable across multicore libraries for Docker compatibility&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/778" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Test methodology discussion&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/778"&gt;ocaml-multicore/eio#778&lt;/a&gt; between &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt;, &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt;, and &lt;a href="https://github.com/create2000"&gt;Onah&lt;em&gt;Anthony&lt;/a&gt; on proper Alcotest skip usage and io&lt;/em&gt;uring availability detection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/83" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Concurrent queue implementation debate&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/83"&gt;ocaml-multicore/saturn#83&lt;/a&gt; discussing proper value handling during parallel operations with focus on thread safety considerations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/330" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fiber cancelation semantics review&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos/issues/330"&gt;ocaml-multicore/picos#330&lt;/a&gt; between &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; and &lt;a href="https://github.com/edwintorok"&gt;Török Edwin&lt;/a&gt; on resource management and lifecycle reasoning&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/779" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Quality of life improvements&lt;/strong&gt;&lt;/a&gt; focus with error debugging enhancements in &lt;a href="https://github.com/ocaml-multicore/eio/issues/779"&gt;ocaml-multicore/eio#779&lt;/a&gt; and test infrastructure development in &lt;a href="https://github.com/ocaml-multicore/eio/issues/778"&gt;ocaml-multicore/eio#778&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Bounded queue specialization&lt;/strong&gt;&lt;/a&gt; emerging as key area with multiple implementation approaches being explored across &lt;a href="https://github.com/ocaml-multicore/saturn/issues/160"&gt;ocaml-multicore/saturn#160&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/saturn/issues/83"&gt;ocaml-multicore/saturn#83&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/161" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance measurement standardization&lt;/strong&gt;&lt;/a&gt; through benchmark improvements in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/161"&gt;ocaml-multicore/saturn#161&lt;/a&gt; supporting data structure development&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/158" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API consistency efforts&lt;/strong&gt;&lt;/a&gt; with Treiber stack expansion in &lt;a href="https://github.com/ocaml-multicore/saturn/issues/158"&gt;ocaml-multicore/saturn#158&lt;/a&gt; aligning interfaces across concurrent data structures&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Focused development on error handling improvements, concurrent data structures, and fiber scheduling enhancements across core libraries</summary><published>2024-11-17T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-45</id><title>Week 45, 2024: Active development across 4 repositories with package restructuring in Saturn, lock-free algorithm examples in Picos, and API improvements in Eio</title><updated>2024-11-10T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/159" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn package restructuring&lt;/strong&gt;&lt;/a&gt; removing &lt;code&gt;Saturn_lockfree&lt;/code&gt; package and consolidating all lock-free data structures into main Saturn package (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/159"&gt;ocaml-multicore/saturn#159&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/327" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Lock-free bag implementation&lt;/strong&gt;&lt;/a&gt; in Picos demonstrating randomized key approach with comprehensive examples (&lt;a href="https://github.com/ocaml-multicore/picos/issues/327"&gt;ocaml-multicore/picos#327&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/328" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;External reference counting optimization&lt;/strong&gt;&lt;/a&gt; in Picos reducing memory usage by eliminating atomic indirection (&lt;a href="https://github.com/ocaml-multicore/picos/issues/328"&gt;ocaml-multicore/picos#328&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/kcas/issues/206" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization&lt;/strong&gt;&lt;/a&gt; in k-CAS using &lt;code&gt;Nativeint&lt;/code&gt; operations to reduce tagging overhead and generated code size (&lt;a href="https://github.com/ocaml-multicore/kcas/issues/206"&gt;ocaml-multicore/kcas#206&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/329" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced hash table documentation&lt;/strong&gt;&lt;/a&gt; in Picos with detailed lock-free programming examples (&lt;a href="https://github.com/ocaml-multicore/picos/issues/329"&gt;ocaml-multicore/picos#329&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/kcas/issues/207" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Benchmark infrastructure improvements&lt;/strong&gt;&lt;/a&gt; in k-CAS including reorganized test execution and updated worker targeting (&lt;a href="https://github.com/ocaml-multicore/kcas/issues/207"&gt;ocaml-multicore/kcas#207&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active repositories&lt;/strong&gt;: 4 of 9 repositories showed development activity with &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;, and &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/159" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Major restructuring&lt;/strong&gt;&lt;/a&gt; completed in Saturn with package consolidation work by &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/159"&gt;ocaml-multicore/saturn#159&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Lock-free algorithm development&lt;/strong&gt; led by &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; across Picos and k-CAS repositories with practical examples and optimizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API design discussions&lt;/strong&gt;&lt;/a&gt; in Eio focused on type safety improvements and process handling enhancements (&lt;a href="https://github.com/ocaml-multicore/eio/issues/774"&gt;ocaml-multicore/eio#774&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/775"&gt;ocaml-multicore/eio#775&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Dormant repositories&lt;/strong&gt;: 5 repositories (domainslib, ocaml-uring, meio, eio-trace, ocaml-iomux) showed no activity during this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Lock-free programming patterns&lt;/strong&gt; emerging across Picos and k-CAS repositories with &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; leading development in both projects focusing on performance optimizations and practical examples&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation coordination&lt;/strong&gt; between Picos hash table examples and k-CAS benchmark improvements showing shared approach to performance measurement and algorithm demonstration&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Saturn 1.0 preparation&lt;/strong&gt; aligning package structure simplification with broader multicore ecosystem stability goals mentioned in cross-repository discussions about future blocking data structures&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Resource type safety concerns&lt;/strong&gt;&lt;/a&gt; raised by &lt;a href="https://github.com/mbarbin"&gt;Mathieu Barbin&lt;/a&gt; in Eio exploring potential runtime issues with &lt;code&gt;Eio.Resource&lt;/code&gt; patterns and &lt;code&gt;Obj.magic&lt;/code&gt; usage (&lt;a href="https://github.com/ocaml-multicore/eio/issues/774"&gt;ocaml-multicore/eio#774&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/760" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Buffer write back-pressure design&lt;/strong&gt;&lt;/a&gt; considerations by &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; regarding memory management approaches in &lt;code&gt;Buf_write&lt;/code&gt; operations (&lt;a href="https://github.com/ocaml-multicore/eio/issues/760"&gt;ocaml-multicore/eio#760&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/159" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Future Saturn architecture&lt;/strong&gt;&lt;/a&gt; discussions between &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; and &lt;a href="https://github.com/Sudha247"&gt;Sudha Parimala&lt;/a&gt; about potential Saturn_picos package for blocking data structures requiring scheduler dependencies (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/159"&gt;ocaml-multicore/saturn#159&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Library simplification patterns&lt;/strong&gt; with Saturn removing separate lockfree package and consolidating into unified structure, reflecting broader trend toward simplified dependency management&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance-focused optimization&lt;/strong&gt; across Picos and k-CAS with targeted improvements to reduce memory overhead and generated code size in concurrent operations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation-driven development&lt;/strong&gt; emphasizing practical examples and real-world usage patterns for lock-free programming primitives&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type safety improvements&lt;/strong&gt; gaining attention in Eio with investigation into making resource patterns more robust against runtime errors&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Release preparation activities&lt;/strong&gt; indicating focus on API stabilization and package organization across multiple repositories ahead of major version milestones&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active development across 4 repositories with package restructuring in Saturn, lock-free algorithm examples in Picos, and API improvements in Eio</summary><published>2024-11-10T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-44</id><title>Week 44, 2024: Major releases in Saturn and Picos with API refinements, while Eio saw active new contributor engagement and Windows compatibility work</title><updated>2024-11-03T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/154" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Lock-free hash table implementation&lt;/strong&gt;&lt;/a&gt; imported from Picos to &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; with both safe and unsafe variants, providing comprehensive hash table operations for multi-domain environments (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/154"&gt;ocaml-multicore/saturn#154&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/320" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Refined Awaitable abstraction&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with improved trigger-based API design allowing more flexible waiting patterns and better cleanup mechanisms (&lt;a href="https://github.com/ocaml-multicore/picos/issues/320"&gt;ocaml-multicore/picos#320&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/158" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced Treiber stack functionality&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; with new consumer functions (&lt;code&gt;peek_exn&lt;/code&gt;, &lt;code&gt;peek_opt&lt;/code&gt;, &lt;code&gt;pop_exn&lt;/code&gt;, &lt;code&gt;drop_exn&lt;/code&gt;), set functions (&lt;code&gt;set_exn&lt;/code&gt;, &lt;code&gt;try_exn&lt;/code&gt;), and sequence operations (&lt;code&gt;of_seq&lt;/code&gt;, &lt;code&gt;add_seq&lt;/code&gt;, &lt;code&gt;to_seq&lt;/code&gt;) (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/158"&gt;ocaml-multicore/saturn#158&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/157" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Simplified work-stealing deque API&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; by removing the nested M module wrapper, making the interface more direct and user-friendly (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/157"&gt;ocaml-multicore/saturn#157&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active development&lt;/strong&gt; concentrated in three repositories: &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with Windows compatibility work and new contributor onboarding, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; with 1.0 release preparation, and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with version 0.6.0 release&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Six repositories inactive&lt;/strong&gt; (&lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;) with no commits or issues during this period&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;New contributor engagement&lt;/strong&gt; particularly strong in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with five new contributors receiving extensive mentoring and code review guidance&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-platform compatibility&lt;/strong&gt; focus evident across &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with Windows-specific testing and compatibility work&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/154" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Picos-Saturn integration&lt;/strong&gt;&lt;/a&gt; with hash table implementation being imported from &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; to &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/154"&gt;ocaml-multicore/saturn#154&lt;/a&gt;), demonstrating closer collaboration between the concurrent programming libraries&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/156" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Bounded stack coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; implementing bounded stack in Saturn (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/156"&gt;ocaml-multicore/saturn#156&lt;/a&gt;) to avoid Picos dependency while &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; develops parallel bounded blocking Stack in Picos (&lt;a href="https://github.com/ocaml-multicore/picos/issues/321"&gt;ocaml-multicore/picos#321&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/773" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-platform testing alignment&lt;/strong&gt;&lt;/a&gt; with both &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/773"&gt;ocaml-multicore/eio#773&lt;/a&gt;) and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/323"&gt;ocaml-multicore/picos#323&lt;/a&gt;) addressing Windows compatibility issues during the same period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Resource type safety exploration&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/mbarbin"&gt;Mathieu Barbin&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/774"&gt;ocaml-multicore/eio#774&lt;/a&gt; investigating &lt;code&gt;Obj.magic&lt;/code&gt; safety issues in &lt;code&gt;Eio.Resource&lt;/code&gt; with collaborative analysis by &lt;a href="https://github.com/v-gb"&gt;@v-gb&lt;/a&gt; and potential solutions using &lt;code&gt;Provider.Trait.Create&lt;/code&gt; approach&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/776" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Network resolution debugging&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/serpent7776"&gt;Krzysztof Leśniak&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio/issues/776"&gt;ocaml-multicore/eio#776&lt;/a&gt; identifying Linux-specific &lt;code&gt;getaddrinfo_stream&lt;/code&gt; failure after 1019 connections, with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; and &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; providing switch management guidance&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/68" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Saturn 1.0 roadmap decisions&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; and &lt;a href="https://github.com/art-w"&gt;@art-w&lt;/a&gt; agreeing to close legacy components in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, including rendezvous implementation (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/68"&gt;ocaml-multicore/saturn#68&lt;/a&gt;) due to integration into DLA and Picos, and bounded queue (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/78"&gt;ocaml-multicore/saturn#78&lt;/a&gt;) due to performance considerations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major version preparation&lt;/strong&gt; across multiple repositories with &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; approaching 1.0 release through API stabilization and legacy component removal, while &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; completed 0.6.0 release with comprehensive API refinements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/773" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-platform robustness&lt;/strong&gt;&lt;/a&gt; becoming a priority with dedicated Windows compatibility efforts in both &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/773"&gt;ocaml-multicore/eio#773&lt;/a&gt;) and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/323"&gt;ocaml-multicore/picos#323&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;New contributor mentoring&lt;/strong&gt; particularly active in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; and &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; providing extensive code review and technical guidance to five new contributors&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/154" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Library ecosystem consolidation&lt;/strong&gt;&lt;/a&gt; evident through Picos-Saturn integration (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/154"&gt;ocaml-multicore/saturn#154&lt;/a&gt;) and coordinated approach to bounded stack implementations across multiple repositories&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major releases in Saturn and Picos with API refinements, while Eio saw active new contributor engagement and Windows compatibility work</summary><published>2024-11-03T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-43</id><title>Week 43, 2024: Windows compatibility focus in EIO with Saturn repository cleanup and Picos documentation improvements</title><updated>2024-10-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/771" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows symlink detection&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with &lt;code&gt;Unix.has_symlink()&lt;/code&gt; checks to skip unsupported operations gracefully (&lt;a href="https://github.com/ocaml-multicore/eio/issues/771"&gt;ocaml-multicore/eio#771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/320" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced Awaitable abstraction&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with robust internal cleanup to prevent leaks and exposed Trigger usage (&lt;a href="https://github.com/ocaml-multicore/picos/issues/320"&gt;ocaml-multicore/picos#320&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Improved documentation clarity&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; for &lt;code&gt;Computation.canceler&lt;/code&gt; function with better trigger attachment explanations (&lt;a href="https://github.com/ocaml-multicore/picos/commit/52b92bf77149329c31abc4afb1df8e5ce193d8f6"&gt;52b92bf&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance guidance&lt;/strong&gt; added in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; for &lt;code&gt;Awaitable.signal&lt;/code&gt; and &lt;code&gt;Awaitable.broadcast&lt;/code&gt; with thundering herd warnings (&lt;a href="https://github.com/ocaml-multicore/picos/commit/1ba3357ec7ca56b9bbeb251904636e3453ff2c32"&gt;1ba3357&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt;&lt;/strong&gt; led group activity with Windows compatibility improvements, including symlink detection and new PRs for chmod implementation and test suite fixes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt;&lt;/strong&gt; focused on documentation refinements and awaitable abstraction improvements with &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; merging two PRs&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;&lt;/strong&gt; conducted repository maintenance by closing five long-standing experimental PRs spanning queue and stack implementations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Six repositories&lt;/strong&gt; (domainslib, ocaml-uring, meio, eio-trace, kcas, ocaml-iomux) remained inactive during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt;&lt;/strong&gt; provided technical contributions across both active repositories, leading development in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with documentation improvements and closing experimental PRs in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt;&lt;/strong&gt; contributed technical discussions in both &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/155"&gt;ocaml-multicore/saturn#155&lt;/a&gt;) and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/39"&gt;ocaml-multicore/picos#39&lt;/a&gt;) providing detailed technical feedback and documentation reviews&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/773" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows MDX compatibility issues&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; revealed by &lt;a href="https://github.com/RichardChukwu"&gt;Richard Chukwu&lt;/a&gt; with &lt;a href="https://github.com/talex5"&gt;Thomas Leonard&lt;/a&gt; providing guidance on isolating parsing problems for upstream bug reports (&lt;a href="https://github.com/ocaml-multicore/eio/issues/773"&gt;ocaml-multicore/eio#773&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/saturn/issues/155" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Technical review depth&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt; with &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; providing extensive feedback on blocking bounded stack memory usage, trigger signaling fairness, and performance considerations (&lt;a href="https://github.com/ocaml-multicore/saturn/issues/155"&gt;ocaml-multicore/saturn#155&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/772" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code attribution practices&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; by &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; regarding proper co-authored commits and cherry-picking ethics (&lt;a href="https://github.com/ocaml-multicore/eio/issues/772"&gt;ocaml-multicore/eio#772&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/39" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Comprehensive documentation review&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; providing detailed feedback on Computation and Fiber modules (&lt;a href="https://github.com/ocaml-multicore/picos/issues/39"&gt;ocaml-multicore/picos#39&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/773" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows platform prioritization&lt;/strong&gt;&lt;/a&gt; with multiple contributors in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; working on test suite compatibility, symlink handling, and platform-specific behaviors (&lt;a href="https://github.com/ocaml-multicore/eio/issues/773"&gt;ocaml-multicore/eio#773&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/771"&gt;ocaml-multicore/eio#771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Repository maintenance focus&lt;/strong&gt; with experimental feature evaluation leading to closure of long-standing draft PRs in &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, suggesting more selective approach to feature inclusion&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation quality emphasis&lt;/strong&gt; across &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; with systematic improvements to clarity, examples, and API guidance&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Community engagement growth&lt;/strong&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; with multiple new contributors tackling good first issues and receiving detailed mentorship from maintainers&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Windows compatibility focus in EIO with Saturn repository cleanup and Picos documentation improvements</summary><published>2024-10-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/multicore/2024/week-42</id><title>Week 42, 2024: Eio gained public fork action headers and Windows compatibility while Picos delivered performance optimizations and hash table enhancements</title><updated>2024-10-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/769" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Public header exposure&lt;/strong&gt;&lt;/a&gt; for &lt;code&gt;fork_action.h&lt;/code&gt; in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; enabling external libraries to provide new fork actions by &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/769"&gt;ocaml-multicore/eio#769&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/771" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows symlink test compatibility&lt;/strong&gt;&lt;/a&gt; check using &lt;code&gt;Unix.has_symlink()&lt;/code&gt; to skip symlink tests on systems without support in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; by &lt;a href="https://github.com/create2000"&gt;Onah_Anthony&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/771"&gt;ocaml-multicore/eio#771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/317" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Hash table consensus operations&lt;/strong&gt;&lt;/a&gt; added comprehensive set of atomic operations including &lt;code&gt;try_set&lt;/code&gt;, &lt;code&gt;try_compare_and_set&lt;/code&gt;, &lt;code&gt;set_exn&lt;/code&gt;, &lt;code&gt;try_compare_and_remove&lt;/code&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; designed for building consensus protocols over arbitrary numbers of processes (&lt;a href="https://github.com/ocaml-multicore/picos/issues/317"&gt;ocaml-multicore/picos#317&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/318" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Trigger documentation improvements&lt;/strong&gt;&lt;/a&gt; with enhanced explanations of scheduler interface and added usage notes for &lt;code&gt;Trigger.from_action&lt;/code&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/318"&gt;ocaml-multicore/picos#318&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active development&lt;/strong&gt; focused on two repositories: &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; improving Windows compatibility and external library integration, and &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; delivering performance optimizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/771" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-platform support&lt;/strong&gt;&lt;/a&gt; prioritized with Windows symlink compatibility fixes (&lt;a href="https://github.com/ocaml-multicore/eio/issues/771"&gt;ocaml-multicore/eio#771&lt;/a&gt;) and ongoing Windows test suite enablement work (&lt;a href="https://github.com/ocaml-multicore/eio/issues/761"&gt;ocaml-multicore/eio#761&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/769" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;External integration&lt;/strong&gt;&lt;/a&gt; enhanced through public header exposure enabling external libraries to extend fork actions (&lt;a href="https://github.com/ocaml-multicore/eio/issues/769"&gt;ocaml-multicore/eio#769&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance focus&lt;/strong&gt; with multiple optimization PRs merged in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; covering computation waiting, stack usage reduction, and inlining improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Seven repositories&lt;/strong&gt; remained inactive during this week: &lt;a href="https://github.com/ocaml-multicore/domainslib"&gt;ocaml-multicore/domainslib&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-uring"&gt;ocaml-multicore/ocaml-uring&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/meio"&gt;ocaml-multicore/meio&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/saturn"&gt;ocaml-multicore/saturn&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio-trace"&gt;ocaml-multicore/eio-trace&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/kcas"&gt;ocaml-multicore/kcas&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/ocaml-iomux"&gt;ocaml-multicore/ocaml-iomux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/769" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Library ecosystem integration&lt;/strong&gt;&lt;/a&gt; improvements with &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; gaining public header exposure (&lt;a href="https://github.com/ocaml-multicore/eio/issues/769"&gt;ocaml-multicore/eio#769&lt;/a&gt;) for external library fork action extensions and type system compatibility work (&lt;a href="https://github.com/ocaml-multicore/eio/issues/750"&gt;ocaml-multicore/eio#750&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/767"&gt;ocaml-multicore/eio#767&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/770"&gt;ocaml-multicore/eio#770&lt;/a&gt;) to improve API compatibility with external libraries like Cohttp&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/316" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Shared tooling adoption&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; adopting external &lt;code&gt;Countdown&lt;/code&gt; implementation from &lt;code&gt;multicore-bench&lt;/code&gt; library (&lt;a href="https://github.com/ocaml-multicore/picos/issues/316"&gt;ocaml-multicore/picos#316&lt;/a&gt;) instead of maintaining internal implementation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/39" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation feedback exchange&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; between &lt;a href="https://github.com/lyrm"&gt;Carine Morel&lt;/a&gt; and &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; covering Trigger module documentation clarity, particularly around grammatical usage of "and" vs "or" connectors, alert handler formatting, and explanation of engineering terminology (&lt;a href="https://github.com/ocaml-multicore/picos/issues/39"&gt;ocaml-multicore/picos#39&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/761" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Windows platform support&lt;/strong&gt;&lt;/a&gt; receiving increased attention across the group with multiple contributors working on test compatibility in &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/eio/issues/761"&gt;ocaml-multicore/eio#761&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/766"&gt;ocaml-multicore/eio#766&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/768"&gt;ocaml-multicore/eio#768&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/771"&gt;ocaml-multicore/eio#771&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/738"&gt;ocaml-multicore/eio#738&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/eio/issues/769" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;External library integration&lt;/strong&gt;&lt;/a&gt; focus with both &lt;a href="https://github.com/ocaml-multicore/eio"&gt;ocaml-multicore/eio&lt;/a&gt; public header exposure (&lt;a href="https://github.com/ocaml-multicore/eio/issues/769"&gt;ocaml-multicore/eio#769&lt;/a&gt;) and type system compatibility improvements (&lt;a href="https://github.com/ocaml-multicore/eio/issues/750"&gt;ocaml-multicore/eio#750&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/767"&gt;ocaml-multicore/eio#767&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/eio/issues/770"&gt;ocaml-multicore/eio#770&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/309" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization emphasis&lt;/strong&gt;&lt;/a&gt; with systematic improvements in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; covering multiple aspects of runtime efficiency (&lt;a href="https://github.com/ocaml-multicore/picos/issues/309"&gt;ocaml-multicore/picos#309&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/310"&gt;ocaml-multicore/picos#310&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/311"&gt;ocaml-multicore/picos#311&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/312"&gt;ocaml-multicore/picos#312&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml-multicore/picos/issues/313" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation quality improvements&lt;/strong&gt;&lt;/a&gt; prioritized with enhanced clarity and user experience focus in &lt;a href="https://github.com/ocaml-multicore/picos"&gt;ocaml-multicore/picos&lt;/a&gt; (&lt;a href="https://github.com/ocaml-multicore/picos/issues/313"&gt;ocaml-multicore/picos#313&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/315"&gt;ocaml-multicore/picos#315&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/318"&gt;ocaml-multicore/picos#318&lt;/a&gt;, &lt;a href="https://github.com/ocaml-multicore/picos/issues/39"&gt;ocaml-multicore/picos#39&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Eio gained public fork action headers and Windows compatibility while Picos delivered performance optimizations and hash table enhancements</summary><published>2024-10-20T00:00:00+00:00</published></entry></feed>
<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>https://thicket.dev/feeds/oxcaml.xml</id><title>OxCaml (Weekly)</title><updated>2025-09-28T00:00:00+00:00</updated><author><name>Anil Madhavapeddy</name><email>anil@recoil.org</email></author><link href="https://thicket.dev/feeds/oxcaml.xml" rel="self"/><link href="https://thicket.dev/" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Oxidised OCaml</subtitle><entry><id>https://thicket.dev/groups/oxcaml/2025/week-39</id><title>Week 39, 2025: Major TLS implementation and LLVM backend improvements in oxcaml core with package compatibility work across repositories</title><updated>2025-09-28T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4747" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Thread-local storage (TLS)&lt;/strong&gt;&lt;/a&gt; implementation in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4747"&gt;oxcaml/oxcaml#4747&lt;/a&gt; with comprehensive API in &lt;code&gt;Domain.TLS&lt;/code&gt; and &lt;code&gt;Thread.TLS&lt;/code&gt; modules, providing per-thread data storage alongside existing Domain-local storage&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4748" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Forkable mode axis&lt;/strong&gt;&lt;/a&gt; added in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4748"&gt;oxcaml/oxcaml#4748&lt;/a&gt; to track whether functions can access shared values in parent stack, with documentation and default behaviors based on locality&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4756" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Layout polymorphism extension&lt;/strong&gt;&lt;/a&gt; infrastructure in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4756"&gt;oxcaml/oxcaml#4756&lt;/a&gt; with &lt;code&gt;layout_poly&lt;/code&gt; extension available in alpha/beta/stable maturity levels&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4778" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;SIMD constants and casts&lt;/strong&gt;&lt;/a&gt; updated in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4778"&gt;oxcaml/oxcaml#4778&lt;/a&gt; to use &lt;code&gt;int8#&lt;/code&gt;/&lt;code&gt;int16#&lt;/code&gt; types with sign-extension, improving type safety for SIMD operations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4784" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;LLVM backend float data emission&lt;/strong&gt;&lt;/a&gt; improvements in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4784"&gt;oxcaml/oxcaml#4784&lt;/a&gt; now using bitwise representations instead of textual format to avoid NaN issues&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/13" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Oxidized ppx_deriving&lt;/strong&gt;&lt;/a&gt; package version 6.1.1+ox added in &lt;a href="https://github.com/oxcaml/opam-repository/issues/13"&gt;oxcaml/opam-repository#13&lt;/a&gt; with compatibility patches for oxcaml parsetree changes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/188" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Nix flake build fixes&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/188"&gt;oxcaml/merlin#188&lt;/a&gt; including updated nixpkgs dependencies and build process improvements with disabled check phase for merlin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4753" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt;&lt;/a&gt; dominated by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt;'s massive js&lt;em&gt;of&lt;/em&gt;ocaml import in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4753"&gt;oxcaml/oxcaml#4753&lt;/a&gt; and extensive threading infrastructure with TLS implementation in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4747"&gt;oxcaml/oxcaml#4747&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4757" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;LLVM backend maturation&lt;/strong&gt;&lt;/a&gt; through multiple improvements by &lt;a href="https://github.com/usuyus"&gt;Yusuf Onur Üşümez&lt;/a&gt; including exception handling fixes in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4757"&gt;oxcaml/oxcaml#4757&lt;/a&gt; and frametable improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4760"&gt;oxcaml/oxcaml#4760&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/13" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package ecosystem stability&lt;/strong&gt;&lt;/a&gt; work with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; delivering oxidized ppx_deriving in &lt;a href="https://github.com/oxcaml/opam-repository/issues/13"&gt;oxcaml/opam-repository#13&lt;/a&gt; and ongoing zarith library updates in &lt;a href="https://github.com/oxcaml/opam-repository/issues/14"&gt;oxcaml/opam-repository#14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/188" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Infrastructure maintenance&lt;/strong&gt;&lt;/a&gt; across repositories including &lt;a href="https://github.com/georgyo"&gt;George Shammas&lt;/a&gt;'s Nix improvements in &lt;a href="https://github.com/oxcaml/merlin/issues/188"&gt;oxcaml/merlin#188&lt;/a&gt; and CI metrics collection in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4762"&gt;oxcaml/oxcaml#4762&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4756" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system evolution&lt;/strong&gt;&lt;/a&gt; with layout polymorphism groundwork in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4756"&gt;oxcaml/oxcaml#4756&lt;/a&gt; and mode system refinements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4766"&gt;oxcaml/oxcaml#4766&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml integration&lt;/strong&gt; spanning multiple repositories with the large import in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4753"&gt;oxcaml/oxcaml#4753&lt;/a&gt; requiring bytecode compilation improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4782"&gt;oxcaml/oxcaml#4782&lt;/a&gt; and future coordination with the separate &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/74" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package compatibility efforts&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; highlighted by cyclic dependency analysis in &lt;a href="https://github.com/janestreet/opam-repository/issues/74"&gt;janestreet/opam-repository#74&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/13" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Oxidized library ecosystem&lt;/strong&gt;&lt;/a&gt; development with ppx_deriving success in &lt;a href="https://github.com/oxcaml/opam-repository/issues/13"&gt;oxcaml/opam-repository#13&lt;/a&gt; and ongoing zarith work in &lt;a href="https://github.com/oxcaml/opam-repository/issues/14"&gt;oxcaml/opam-repository#14&lt;/a&gt; supporting oxcaml parsetree changes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/188" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development tooling alignment&lt;/strong&gt;&lt;/a&gt; with Nix infrastructure improvements in &lt;a href="https://github.com/oxcaml/merlin/issues/188"&gt;oxcaml/merlin#188&lt;/a&gt; supporting the broader oxcaml development environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/74" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package dependency analysis&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/irategopher"&gt;Gopher&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository/issues/74"&gt;janestreet/opam-repository#74&lt;/a&gt; comparing ppxlib_jane dependencies between janestreet/opam-repository and oxcaml/opam-repository, highlighting version constraint differences causing cyclic dependency conflicts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4752" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;For loop optimization&lt;/strong&gt;&lt;/a&gt; discussion initiated by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4752"&gt;oxcaml/oxcaml#4752&lt;/a&gt; requesting optimization of &lt;code&gt;for&lt;/code&gt; loops with &lt;code&gt;()&lt;/code&gt; body after inlining or functor application&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/15" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Repository update issues&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/henrytill"&gt;Henry Till&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository/issues/15"&gt;oxcaml/opam-repository#15&lt;/a&gt; affecting opam 2.3.0 users on Debian with detailed troubleshooting context&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4747" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Threading infrastructure expansion&lt;/strong&gt;&lt;/a&gt; with TLS implementation in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4747"&gt;oxcaml/oxcaml#4747&lt;/a&gt; and domain improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4764"&gt;oxcaml/oxcaml#4764&lt;/a&gt;, building foundation for enhanced multi-threaded programming support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4757" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;LLVM backend maturation&lt;/strong&gt;&lt;/a&gt; through systematic improvements including exception handling in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4757"&gt;oxcaml/oxcaml#4757&lt;/a&gt;, frametables in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4760"&gt;oxcaml/oxcaml#4760&lt;/a&gt;, and float data emission in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4784"&gt;oxcaml/oxcaml#4784&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/pull/4756" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system evolution&lt;/strong&gt;&lt;/a&gt; with layout polymorphism infrastructure in &lt;a href="https://github.com/oxcaml/oxcaml/pull/4756"&gt;oxcaml/oxcaml#4756&lt;/a&gt;, mode system refinements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4766"&gt;oxcaml/oxcaml#4766&lt;/a&gt;, and jkind improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4777"&gt;oxcaml/oxcaml#4777&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/13" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package ecosystem integration&lt;/strong&gt;&lt;/a&gt; with oxidized library adaptations like ppx_deriving in &lt;a href="https://github.com/oxcaml/opam-repository/issues/13"&gt;oxcaml/opam-repository#13&lt;/a&gt; and dependency coordination between repositories in &lt;a href="https://github.com/janestreet/opam-repository/issues/74"&gt;janestreet/opam-repository#74&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4762" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development automation focus&lt;/strong&gt;&lt;/a&gt; with comprehensive CI metrics collection across &lt;a href="https://github.com/oxcaml/oxcaml/issues/4762"&gt;oxcaml/oxcaml#4762&lt;/a&gt;-&lt;a href="https://github.com/oxcaml/oxcaml/issues/4771"&gt;oxcaml/oxcaml#4771&lt;/a&gt; and build infrastructure improvements in &lt;a href="https://github.com/oxcaml/merlin/issues/188"&gt;oxcaml/merlin#188&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major TLS implementation and LLVM backend improvements in oxcaml core with package compatibility work across repositories</summary><published>2025-09-28T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-38</id><title>Week 38, 2025: Major LLVM backend refactor and JavaScript integration progress with Merlin tooling improvements and build issues in packaging</title><updated>2025-09-21T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4722" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;LLVM backend refactor&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/usuyus"&gt;Yusuf Onur Üşümez&lt;/a&gt; brings architectural improvements to the oxcaml compilation pipeline (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4722"&gt;oxcaml/oxcaml#4722&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/168" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Syntax hovers for oxcaml&lt;/strong&gt;&lt;/a&gt; language constructs with detailed English descriptions for IDE support by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/168"&gt;oxcaml/merlin#168&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/182" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance fix&lt;/strong&gt;&lt;/a&gt; for exponential short-paths algorithm that was causing 40+ minute delays in large codebases by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4633" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Register allocation attributes&lt;/strong&gt;&lt;/a&gt; &lt;code&gt;[@regalloc]&lt;/code&gt;, &lt;code&gt;[@regalloc_param]&lt;/code&gt; and &lt;code&gt;[@cold]&lt;/code&gt; added by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; for fine-grained optimization control (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4633"&gt;oxcaml/oxcaml#4633&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4718" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dynamic bindings memory management&lt;/strong&gt;&lt;/a&gt; fix by &lt;a href="https://github.com/NickBarnes"&gt;Nick Barnes&lt;/a&gt; prevents memory leaks during domain termination (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4718"&gt;oxcaml/oxcaml#4718&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4727" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JSIR backend improvements&lt;/strong&gt;&lt;/a&gt; including unbound variable bug fix (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4727"&gt;oxcaml/oxcaml#4727&lt;/a&gt;) and machine width value corrections (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4726"&gt;oxcaml/oxcaml#4726&lt;/a&gt;) by &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; and &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4728" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;External function support&lt;/strong&gt;&lt;/a&gt; for unboxed product returns of value kind by &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4728"&gt;oxcaml/oxcaml#4728&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active development week&lt;/strong&gt; with 24 merged PRs across oxcaml core and Merlin, plus ongoing JavaScript backend integration efforts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4722" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Major architectural changes&lt;/strong&gt;&lt;/a&gt; including LLVM backend refactor (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4722"&gt;oxcaml/oxcaml#4722&lt;/a&gt;) and compiler synchronization (&lt;a href="https://github.com/oxcaml/merlin/issues/185"&gt;oxcaml/merlin#185&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository coordination&lt;/strong&gt; visible through JavaScript backend work spanning oxcaml core and tooling integration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/12" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build infrastructure challenges&lt;/strong&gt;&lt;/a&gt; with js&lt;em&gt;of&lt;/em&gt;ocaml-compiler compilation failures reported in packaging (&lt;a href="https://github.com/oxcaml/opam-repository/issues/12"&gt;oxcaml/opam-repository#12&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4727" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript backend integration&lt;/strong&gt;&lt;/a&gt; spanning oxcaml core JSIR improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4727"&gt;oxcaml/oxcaml#4727&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4726"&gt;oxcaml/oxcaml#4726&lt;/a&gt;) and JSOO integration work (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4730"&gt;oxcaml/oxcaml#4730&lt;/a&gt;) coordinated with packaging issues (&lt;a href="https://github.com/oxcaml/opam-repository/issues/12"&gt;oxcaml/opam-repository#12&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/185" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler synchronization&lt;/strong&gt;&lt;/a&gt; between oxcaml core and Merlin tooling with major merge from 5.2.0minus-19 (&lt;a href="https://github.com/oxcaml/merlin/issues/185"&gt;oxcaml/merlin#185&lt;/a&gt;) including cross-references to oxcaml core issues (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658"&gt;oxcaml/oxcaml#4658&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/182" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization focus&lt;/strong&gt;&lt;/a&gt; with short-paths algorithm fixes in Merlin (&lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;) complementing memory management improvements in oxcaml core (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4718"&gt;oxcaml/oxcaml#4718&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/185" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler merge technical review&lt;/strong&gt;&lt;/a&gt; in Merlin involving detailed discussions of shape-related changes, syntax quotations, and merge conflict resolution with contributions from &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt;, &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt;, and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/185"&gt;oxcaml/merlin#185&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/182" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enterprise performance concerns&lt;/strong&gt;&lt;/a&gt; with short-paths algorithm causing 40+ minute delays in Jane Street internal codebase addressed through algorithmic improvements (&lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/12" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build infrastructure challenges&lt;/strong&gt;&lt;/a&gt; with detailed error reporting for js&lt;em&gt;of&lt;/em&gt;ocaml-compiler compilation failures including patch application issues (&lt;a href="https://github.com/oxcaml/opam-repository/issues/12"&gt;oxcaml/opam-repository#12&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;JavaScript backend maturation&lt;/strong&gt; with concentrated effort on JSIR optimizations and JSOO integration targeting production-ready JavaScript compilation from oxcaml&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4733" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Match compilation system issues&lt;/strong&gt;&lt;/a&gt; surfacing through three bug reports by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; covering missing symbols (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4733"&gt;oxcaml/oxcaml#4733&lt;/a&gt;), zero allocation failures (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4732"&gt;oxcaml/oxcaml#4732&lt;/a&gt;), and missing code generation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4731"&gt;oxcaml/oxcaml#4731&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enterprise performance optimization&lt;/strong&gt; focus with algorithmic improvements targeting large-scale production deployments at major financial institutions&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository coordination&lt;/strong&gt; increasing with synchronized compiler updates, shared JavaScript backend development, and coordinated tooling integration efforts&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major LLVM backend refactor and JavaScript integration progress with Merlin tooling improvements and build issues in packaging</summary><published>2025-09-21T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-37</id><title>Week 37, 2025: Major infrastructure development in oxcaml/oxcaml with TLS, JSIR backend, small integers, and comprehensive DWARF debugging improvements</title><updated>2025-09-14T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4671" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Thread-Local Storage (TLS)&lt;/strong&gt;&lt;/a&gt; implementation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing thread-specific storage with Domain.TLS module alongside existing Domain.DLS (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4671"&gt;oxcaml/oxcaml#4671&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Untagged char literals&lt;/strong&gt;&lt;/a&gt; with &lt;code&gt;#'a'&lt;/code&gt; syntax and &lt;strong class="achievement"&gt;untagged char range patterns&lt;/strong&gt; like &lt;code&gt;#'a'..#'z'&lt;/code&gt; for pattern matching in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658"&gt;oxcaml/oxcaml#4658&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4716"&gt;oxcaml/oxcaml#4716&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4677" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Array indexing by small integers&lt;/strong&gt;&lt;/a&gt; with &lt;code&gt;arr.(idx : int16#)&lt;/code&gt; and &lt;code&gt;arr.(idx : int8#)&lt;/code&gt; syntax support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4677"&gt;oxcaml/oxcaml#4677&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4691"&gt;oxcaml/oxcaml#4691&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JSIR backend&lt;/strong&gt;&lt;/a&gt; for JavaScript compilation with comprehensive primitive mappings, effects support, and error handling in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4531" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced DWARF debugging&lt;/strong&gt;&lt;/a&gt; with metrics collection, performance dials, small integer support, and recursive types in shapes in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4531"&gt;oxcaml/oxcaml#4531&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4535"&gt;oxcaml/oxcaml#4535&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4478"&gt;oxcaml/oxcaml#4478&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4492"&gt;oxcaml/oxcaml#4492&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Fixed js&lt;em&gt;of&lt;/em&gt;ocaml installation failures&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; by correcting patch file line numbers for iarray primitives across five packages (&lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major infrastructure development&lt;/strong&gt; dominated the week with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; delivering 48 merged PRs across threading, JavaScript compilation, small integers, and debugging capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;JavaScript backend maturation&lt;/strong&gt; reached significant milestone with comprehensive JSIR implementation and dynamic width selection features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package distribution fixes&lt;/strong&gt; resolved critical js&lt;em&gt;of&lt;/em&gt;ocaml installation issues affecting macOS users in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development tools progress&lt;/strong&gt; continued in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with syntax hovers implementation and documentation updates&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Focused activity&lt;/strong&gt; concentrated primarily in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; while other repositories had minimal or no activity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml ecosystem coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; JSIR backend development and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; patch fixes, ensuring JavaScript compilation improvements align with package distribution reliability&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DWARF debugging integration&lt;/strong&gt;&lt;/a&gt; spanning &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440"&gt;oxcaml/oxcaml#4440&lt;/a&gt;) and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; editor support for enhanced developer debugging experience&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Small integers feature coordination&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler support and potential future integration with &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; compilation targets&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4675" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ikind system architecture&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; and &lt;a href="https://github.com/julesjacobs"&gt;@julesjacobs&lt;/a&gt; covering representation choices, performance implications, and dependency structure concerns in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4675"&gt;oxcaml/oxcaml#4675&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4671" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Thread-Local Storage design&lt;/strong&gt;&lt;/a&gt; involving &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt;, &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt;, and &lt;a href="https://github.com/mdelvecchio-jsc"&gt;Megan Del Vecchio&lt;/a&gt; covering thread safety, performance optimization, and js&lt;em&gt;of&lt;/em&gt;ocaml compatibility in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4671"&gt;oxcaml/oxcaml#4671&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4674" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance regression investigation&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt; reporting severe Flambda2 compilation slowdown from 6 seconds to 10 minutes for menhir-generated parser in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4674"&gt;oxcaml/oxcaml#4674&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/11" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package distribution compatibility&lt;/strong&gt;&lt;/a&gt; discussion involving &lt;a href="https://github.com/matthewelse"&gt;Matthew Else&lt;/a&gt;, &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt;, and &lt;a href="https://github.com/kit-ty-kate"&gt;Kate&lt;/a&gt; regarding patch behavior differences between GNU Patch and hannesm/patch in &lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;JavaScript compilation infrastructure maturation&lt;/strong&gt; with comprehensive JSIR backend implementation, dynamic width selection, and coordination with package distribution improvements across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced debugging ecosystem development&lt;/strong&gt; with sophisticated DWARF support, metrics collection, and cross-tool integration between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; editor support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Small integers feature set expansion&lt;/strong&gt; with growing support for unboxed types, specialized literals, array indexing syntax, and comprehensive runtime integration in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Threading paradigm evolution&lt;/strong&gt; with TLS implementation providing finer-grained concurrency support and Format module integration demonstrating broader adoption patterns&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Strategic architecture planning focus&lt;/strong&gt; with systematic roadmap creation covering testing infrastructure, compiler component redesign, and long-term maintainability initiatives&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository coordination&lt;/strong&gt; emerging between JavaScript compilation work, package distribution fixes, and debugging tool integration efforts&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major infrastructure development in oxcaml/oxcaml with TLS, JSIR backend, small integers, and comprehensive DWARF debugging improvements</summary><published>2025-09-14T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-36</id><title>Week 36, 2025: Major week with JSIR backend development, package infrastructure modernization, and merlin LSP improvements</title><updated>2025-09-07T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4555" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DWARF debugging enhancements&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;-gdwarf-pedantic&lt;/code&gt; flag enabling fatal error checking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4555"&gt;oxcaml/oxcaml#4555&lt;/a&gt;), Type Shapes integration for functor support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;oxcaml/oxcaml#4398&lt;/a&gt;), and improved debug ranges output formatting (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4650"&gt;oxcaml/oxcaml#4650&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4621" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Atomic operations API refinements&lt;/strong&gt;&lt;/a&gt; with improved mode handling where atomic fields are properly marked as &lt;code&gt;sync_data&lt;/code&gt; instead of &lt;code&gt;mutable_data&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4621"&gt;oxcaml/oxcaml#4621&lt;/a&gt;) and simplified contended operations API (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4636"&gt;oxcaml/oxcaml#4636&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml infrastructure improvements&lt;/strong&gt; with fixed iarray primitives patches across all js&lt;em&gt;of&lt;/em&gt;ocaml packages (&lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;) and enabled toplevel support for interactive OCaml in browser environments (&lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Merlin outline API enhancement&lt;/strong&gt;&lt;/a&gt; with optional type printing control via &lt;code&gt;include_types&lt;/code&gt; parameter, enabling LSP servers to use Merlin's outline query directly (&lt;a href="https://github.com/oxcaml/merlin/issues/183"&gt;oxcaml/merlin#183&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4641" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Standard library locality improvements&lt;/strong&gt;&lt;/a&gt; including Queue module annotations with most operations taking queue and functions as &lt;code&gt;@ local&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4641"&gt;oxcaml/oxcaml#4641&lt;/a&gt;) and &lt;code&gt;Mutex.protect&lt;/code&gt; refinement with correct &lt;code&gt;@ local once&lt;/code&gt; annotation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4640"&gt;oxcaml/oxcaml#4640&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt;&lt;/a&gt; led by &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; with extensive JSIR backend progress through 12+ merged PRs covering JavaScript compilation improvements and bytecode compatibility (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598"&gt;oxcaml/oxcaml#4598&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4573"&gt;oxcaml/oxcaml#4573&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4570"&gt;oxcaml/oxcaml#4570&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package infrastructure modernization&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt; delivering comprehensive toolchain updates including eio integration, documentation tooling, and js&lt;em&gt;of&lt;/em&gt;ocaml enhancements (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer tooling improvements&lt;/strong&gt;&lt;/a&gt; through &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; enhancing merlin LSP integration and addressing performance bottlenecks (&lt;a href="https://github.com/oxcaml/merlin/issues/183"&gt;oxcaml/merlin#183&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Debugging and performance focus&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; advancing DWARF capabilities and multiple contributors optimizing atomic operations and memory efficiency (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;oxcaml/oxcaml#4398&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4621"&gt;oxcaml/oxcaml#4621&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript compilation ecosystem&lt;/strong&gt;&lt;/a&gt; with coordinated improvements across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; JSIR backend development and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; js&lt;em&gt;of&lt;/em&gt;ocaml package updates (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598"&gt;oxcaml/oxcaml#4598&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/183" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development tooling alignment&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; LSP enhancements and &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; debugging infrastructure through DWARF improvements supporting better IDE integration (&lt;a href="https://github.com/oxcaml/merlin/issues/183"&gt;oxcaml/merlin#183&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;oxcaml/oxcaml#4398&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package dependency coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; providing comprehensive toolchain support for &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; development including eio integration and documentation infrastructure (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/182" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Merlin performance optimization strategy&lt;/strong&gt;&lt;/a&gt; discussed between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt; regarding exponential short-paths algorithm fixes, with preference for systematic &lt;code&gt;Module.is_defined&lt;/code&gt; approach over ad-hoc solutions (&lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4628" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda 2 symbol ordering bug&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; involving out-of-order symbol definitions in classic mode, quickly resolved through coordinated debugging and fix implementation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4628"&gt;oxcaml/oxcaml#4628&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4629"&gt;oxcaml/oxcaml#4629&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript compilation infrastructure maturation&lt;/strong&gt;&lt;/a&gt; with comprehensive JSIR backend development and js&lt;em&gt;of&lt;/em&gt;ocaml ecosystem improvements enabling robust browser-based OCaml development (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4598"&gt;oxcaml/oxcaml#4598&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Advanced debugging capabilities&lt;/strong&gt;&lt;/a&gt; through sophisticated DWARF infrastructure with Type Shapes integration and functor support, improving developer experience (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4398"&gt;oxcaml/oxcaml#4398&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4555"&gt;oxcaml/oxcaml#4555&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4621" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance-focused development&lt;/strong&gt;&lt;/a&gt; across multiple areas including atomic operations optimization, memory efficiency improvements, and merlin scalability for large codebases (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4621"&gt;oxcaml/oxcaml#4621&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Concurrent programming support&lt;/strong&gt;&lt;/a&gt; with eio integration and atomic operations refinements preparing the ecosystem for modern asynchronous patterns (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4636"&gt;oxcaml/oxcaml#4636&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week with JSIR backend development, package infrastructure modernization, and merlin LSP improvements</summary><published>2025-09-07T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-35</id><title>Week 35, 2025: Major compiler advances with mode system improvements, backend optimizations, and ecosystem package integration</title><updated>2025-08-31T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4607" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Abstract static exception labels&lt;/strong&gt;&lt;/a&gt; with new Static_label module providing type safety for exception handling throughout the compiler pipeline (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4607"&gt;oxcaml/oxcaml#4607&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4471" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Comprehensive mode error hints&lt;/strong&gt;&lt;/a&gt; with tracking and improved error messages for better developer experience (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4471"&gt;oxcaml/oxcaml#4471&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4579" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Shrink-wrapping prologue duplication&lt;/strong&gt;&lt;/a&gt; for performance optimization by duplicating prologues across execution paths (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4579"&gt;oxcaml/oxcaml#4579&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4589" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced Array and Bigarray mode annotations&lt;/strong&gt;&lt;/a&gt; marking pure accessors as immutable for better optimization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4589"&gt;oxcaml/oxcaml#4589&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4470"&gt;oxcaml/oxcaml#4470&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4563"&gt;oxcaml/oxcaml#4563&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Complete eio ecosystem packages&lt;/strong&gt;&lt;/a&gt; added with Oxcaml-specific patches for enhanced async I/O support (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Complete odoc documentation suite&lt;/strong&gt;&lt;/a&gt; integrated including odoc, odoc-driver, odoc-parser, and sherlodoc packages (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/181" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Disabled spurious probe error&lt;/strong&gt;&lt;/a&gt; reporting that was incorrectly flagging undefined probe names, improving user experience (&lt;a href="https://github.com/oxcaml/merlin/issues/181"&gt;oxcaml/merlin#181&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Significant compiler development&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; delivering 20 merged commits focused on mode system improvements, backend optimizations, and type safety enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package ecosystem expansion&lt;/strong&gt;&lt;/a&gt; through &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with comprehensive integration of eio async I/O library and complete odoc documentation toolchain (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/9"&gt;oxcaml/opam-repository#9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/181" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Editor tooling improvements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with user experience fixes for spurious error reporting (&lt;a href="https://github.com/oxcaml/merlin/issues/181"&gt;oxcaml/merlin#181&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; during this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package maintenance strategy alignment&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler development and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; ecosystem management, with decisions to use direct git+https sources for fast-moving dependencies (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation toolchain integration&lt;/strong&gt;&lt;/a&gt; with odoc package suite in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; supporting enhanced documentation generation for &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler features (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/148" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Editor support coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; development and upstream OCaml merlin repository for feature timing and compatibility (&lt;a href="https://github.com/oxcaml/merlin/issues/148"&gt;oxcaml/merlin#148&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/149"&gt;oxcaml/merlin#149&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Async I/O ecosystem preparation&lt;/strong&gt;&lt;/a&gt; with eio library integration in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; supporting future &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; runtime enhancements (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package maintenance strategy debate&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt; where &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; advocated for direct git+https URLs over patch files for easier maintenance, leading &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt; to migrate from patch-based to direct repository sourcing approach&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/148" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Editor feature coordination&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/148"&gt;oxcaml/merlin#148&lt;/a&gt; with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; coordinating timing for multi-type location PR review with upstream discussions in the main OCaml merlin repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/181" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Probe error investigation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/181"&gt;oxcaml/merlin#181&lt;/a&gt; with review discussion between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and reviewer about ensuring no functionality breaks when disabling spurious errors&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4607" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type safety modernization&lt;/strong&gt;&lt;/a&gt; with abstract types replacing raw integers for static labels and enhanced type checking throughout the compilation pipeline in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4607"&gt;oxcaml/oxcaml#4607&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4471" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode system maturation&lt;/strong&gt;&lt;/a&gt; as advanced mode annotations become more sophisticated with comprehensive error reporting and modality system improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4471"&gt;oxcaml/oxcaml#4471&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4619"&gt;oxcaml/oxcaml#4619&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4579" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend performance focus&lt;/strong&gt;&lt;/a&gt; with multiple optimization efforts including shrink-wrapping, prologue management, and register allocation enhancements across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4579"&gt;oxcaml/oxcaml#4579&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4633"&gt;oxcaml/oxcaml#4633&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;AI-assisted development adoption&lt;/strong&gt; with multiple PRs marked as "100% vibe" indicating Claude Code usage for compiler development in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package ecosystem strategic alignment&lt;/strong&gt;&lt;/a&gt; moving toward direct git repository sources rather than patch-based maintenance for better integration between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4574" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-module collaboration&lt;/strong&gt;&lt;/a&gt; visible in joint work between contributors like &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; and &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; on polling safety improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4574"&gt;oxcaml/oxcaml#4574&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler advances with mode system improvements, backend optimizations, and ecosystem package integration</summary><published>2025-08-31T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-34</id><title>Week 34, 2025: Major oxcaml/oxcaml backend optimizations with prologue shrink wrapping and atomic API improvements</title><updated>2025-08-24T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Prologue shrink wrapping optimization&lt;/strong&gt;&lt;/a&gt; implemented in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4544"&gt;oxcaml/oxcaml#4544&lt;/a&gt; to minimize unnecessary prologue executions by placing them optimally in CFG&lt;/li&gt;
&lt;li&gt;New &lt;strong class="achievement"&gt;CLI flags&lt;/strong&gt; for prologue validation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;: &lt;code&gt;-cfg-prologue-validate&lt;/code&gt;, &lt;code&gt;-no-cfg-prologue-validate&lt;/code&gt;, &lt;code&gt;-cfg-prologue-shrink-wrap&lt;/code&gt;, &lt;code&gt;-no-cfg-prologue-shrink-wrap&lt;/code&gt;, and &lt;code&gt;-cfg-prologue-shrink-wrap-threshold&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/0724e632f809b4e2b03d6a1db38a56b2d28def9d"&gt;0724e632&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4551" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Atomic.t structure exposed&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4551"&gt;oxcaml/oxcaml#4551&lt;/a&gt; as &lt;code&gt;{ mutable contents : 'a [@atomic] }&lt;/code&gt; enabling direct access with &lt;code&gt;%atomic.loc t.contents&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4521" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dataflow analysis for prologue validation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4521"&gt;oxcaml/oxcaml#4521&lt;/a&gt; ensuring correct prologue/epilogue placement throughout execution paths&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/179" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dot-merlin-reader discovery&lt;/strong&gt;&lt;/a&gt; enhancement in &lt;a href="https://github.com/oxcaml/merlin/issues/179"&gt;oxcaml/merlin#179&lt;/a&gt; allowing Merlin to find dot-merlin-reader in the same directory as the Merlin binary, with support for &lt;code&gt;DOT_MERLIN_READER_EXE&lt;/code&gt; environment variable override&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/180" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml compiler integration&lt;/strong&gt;&lt;/a&gt; update in &lt;a href="https://github.com/oxcaml/merlin/issues/180"&gt;oxcaml/merlin#180&lt;/a&gt; merging 5.2.0minus-18 changes with 894 additions and 602 deletions across typing, pattern matching, and core compiler modules&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt;&lt;/a&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with major backend optimizations including prologue shrink wrapping (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544"&gt;#4544&lt;/a&gt;) and atomic API improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4551"&gt;#4551&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/179" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer tooling updates&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with enhanced dot-merlin-reader discovery (&lt;a href="https://github.com/oxcaml/merlin/issues/179"&gt;#179&lt;/a&gt;) and compiler compatibility (&lt;a href="https://github.com/oxcaml/merlin/issues/180"&gt;#180&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/73" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Minimal package management activity&lt;/strong&gt;&lt;/a&gt; with dependency fix in &lt;a href="https://github.com/janestreet/opam-repository/pull/73"&gt;janestreet/opam-repository#73&lt;/a&gt; and automated version bumps&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;20+ contributors active&lt;/strong&gt; across the group with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt;, &lt;a href="https://github.com/cfalas"&gt;Christos Falas&lt;/a&gt;, &lt;a href="https://github.com/ccasin"&gt;Chris Casinghino&lt;/a&gt;, and &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; leading major contributions&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Two repositories inactive&lt;/strong&gt; during this period: &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/180" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Merlin and oxcaml compiler synchronization&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; integrating OCaml 5.2.0minus-18 changes from &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; into &lt;a href="https://github.com/oxcaml/merlin/issues/180"&gt;oxcaml/merlin#180&lt;/a&gt;, ensuring compatibility with latest compiler features&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4552" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer tooling coordination&lt;/strong&gt;&lt;/a&gt; with jane-street-merlin-setup improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4552"&gt;oxcaml/oxcaml#4552&lt;/a&gt; supporting AI development workflows that likely benefit both main compiler and Merlin usage&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/73" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package management alignment&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; and broader ecosystem with dependency conflict fixes in &lt;a href="https://github.com/janestreet/opam-repository/pull/73"&gt;#73&lt;/a&gt; that may affect oxcaml toolchain integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance-oriented backend development&lt;/strong&gt;&lt;/a&gt; with multiple contributors focusing on prologue optimization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544"&gt;oxcaml/oxcaml#4544&lt;/a&gt;), CFG improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4546"&gt;oxcaml/oxcaml#4546&lt;/a&gt;), and register allocation enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4545"&gt;oxcaml/oxcaml#4545&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4560" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed types ecosystem maturation&lt;/strong&gt;&lt;/a&gt; through bug fixes for match-in-match compilation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4560"&gt;oxcaml/oxcaml#4560&lt;/a&gt;), better &lt;code&gt;caml_modify&lt;/code&gt; elimination (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4553"&gt;oxcaml/oxcaml#4553&lt;/a&gt;), and improved compilation behavior for indirect calls (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4554"&gt;oxcaml/oxcaml#4554&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4556" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer experience improvements&lt;/strong&gt;&lt;/a&gt; including better DWARF debugging support, shape error silencing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4556"&gt;oxcaml/oxcaml#4556&lt;/a&gt;), and enhanced Merlin configuration (&lt;a href="https://github.com/oxcaml/merlin/issues/179"&gt;oxcaml/merlin#179&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4527" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code quality and maintainability focus&lt;/strong&gt;&lt;/a&gt; with removal of obsolete compilation pipelines (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4527"&gt;oxcaml/oxcaml#4527&lt;/a&gt;) and unification of approaches across backends&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml/oxcaml backend optimizations with prologue shrink wrapping and atomic API improvements</summary><published>2025-08-24T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-33</id><title>Week 33, 2025: Heavy development week with compiler backend advances, IDE tooling improvements, and language extension stabilization across two repositories</title><updated>2025-08-17T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Small integer types&lt;/strong&gt; (&lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8_u&lt;/code&gt;, &lt;code&gt;int16_u&lt;/code&gt;, &lt;code&gt;int_u&lt;/code&gt;) moved from beta to stable extensions in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, now available in &lt;code&gt;stdlib_stable&lt;/code&gt; instead of &lt;code&gt;stdlib_beta&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/ae5ce4357a652830bfff3072d52b80ea2f2dde89"&gt;oxcaml/oxcaml@ae5ce43&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4229" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Atomic locations API&lt;/strong&gt;&lt;/a&gt; added to &lt;code&gt;Atomic.Loc&lt;/code&gt; module for atomic record fields with support for &lt;code&gt;[%atomic.loc r.field]&lt;/code&gt; syntax (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4229"&gt;oxcaml/oxcaml#4229&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4232"&gt;oxcaml/oxcaml#4232&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4264"&gt;oxcaml/oxcaml#4264&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/177" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;PPX overrides system&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; enabling custom behavior for &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;locate&lt;/code&gt; commands through &lt;code&gt;[@@@merlin.document]&lt;/code&gt; and &lt;code&gt;[@@@merlin.locate]&lt;/code&gt; floating attributes (&lt;a href="https://github.com/oxcaml/merlin/issues/177"&gt;oxcaml/merlin#177&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4468" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;DWARF debugging enhancements&lt;/strong&gt;&lt;/a&gt; including new &lt;code&gt;-ddwarf-types&lt;/code&gt; debug flag and compressed single function call output (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4468"&gt;oxcaml/oxcaml#4468&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4498"&gt;oxcaml/oxcaml#4498&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4523" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Void support in C stubs&lt;/strong&gt;&lt;/a&gt; for primitives and function calls (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4523"&gt;oxcaml/oxcaml#4523&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4528"&gt;oxcaml/oxcaml#4528&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4499" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Memory profiling participation&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;Gc.Memprof.participate&lt;/code&gt; function (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4499"&gt;oxcaml/oxcaml#4499&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/177" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Interval tree data structure&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; for efficient querying of override mappings by cursor position with O(log n + m) search complexity (&lt;a href="https://github.com/oxcaml/merlin/issues/177"&gt;oxcaml/merlin#177&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Two repositories active&lt;/strong&gt; out of five in the oxcaml group: &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 39 commits and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with major PPX overrides functionality&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Backend infrastructure focus&lt;/strong&gt; with comprehensive LLVM backend development, JavaScript backend improvements, and DWARF debugging system enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Language stabilization&lt;/strong&gt; with small integer types graduating from beta to stable status and atomic programming primitives expansion&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;IDE tooling advancement&lt;/strong&gt; through PPX-based extensibility mechanisms and enhanced phase caching in merlin&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-compiler alignment&lt;/strong&gt; with merlin integrating OCaml 5.2.0minus-17 updates to maintain compatibility with oxcaml development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4525" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript backend coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; JavaScript compilation improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4525"&gt;oxcaml/oxcaml#4525&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;) and the &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; repository ecosystem&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/178" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml compiler synchronization&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; integrating 5.2.0minus-17 updates (&lt;a href="https://github.com/oxcaml/merlin/issues/178"&gt;oxcaml/merlin#178&lt;/a&gt;) to maintain compatibility with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler development&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Shared contributor expertise&lt;/strong&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; working on both repositories: merlin compiler integration and detailed code review processes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4504" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Baremetal framework exploration&lt;/strong&gt;&lt;/a&gt; requested by &lt;a href="https://github.com/nickbetteridge"&gt;@nickbetteridge&lt;/a&gt; for micro-kernel architectures in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4504"&gt;oxcaml/oxcaml#4504&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4511" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 compilation challenges&lt;/strong&gt;&lt;/a&gt; with assembler errors affecting very large files on macOS and Ubuntu builds (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4511"&gt;oxcaml/oxcaml#4511&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/176" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;PPX override design review&lt;/strong&gt;&lt;/a&gt; with detailed technical discussions about caching implementation, GADT usage, and test output filtering between &lt;a href="https://github.com/maxmwang"&gt;Max Wang&lt;/a&gt; and &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/176"&gt;oxcaml/merlin#176&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;LLVM backend maturation&lt;/strong&gt; with comprehensive instruction support reaching production readiness across exception handling, memory allocation, and control flow constructs&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Atomic programming expansion&lt;/strong&gt; through dedicated location-based APIs for record fields, memory profiling participation, and performance-oriented consolidation work&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;IDE extensibility patterns&lt;/strong&gt; emerging through PPX-based override mechanisms that enable custom behavior without modifying core tooling logic&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Debugging infrastructure advancement&lt;/strong&gt; with DWARF improvements, recursive type support, and comprehensive test coverage indicating focus on production debugging capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-language integration&lt;/strong&gt; improvements through void support in C stubs, enhanced Unix library portability, and JavaScript compilation enhancements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Heavy development week with compiler backend advances, IDE tooling improvements, and language extension stabilization across two repositories</summary><published>2025-08-17T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-32</id><title>Week 32, 2025: Major compiler development week with 27 commits to oxcaml/oxcaml featuring new optimization infrastructure and merlin integration</title><updated>2025-08-10T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Block indices implementation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; allowing indexed access to structured data with comprehensive testing framework (&lt;a href="https://github.com/oxcaml/oxcaml/commit/56c7b45c00b3589c06f29cb40d700e4a26d892e8"&gt;56c7b45&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;LLVM backend data declarations&lt;/strong&gt; enhanced in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for improved code generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/7cb4f55fdb4afa32fcc548122c149e11e11a73ec"&gt;7cb4f55&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CMM peephole optimization engine&lt;/strong&gt; implemented in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for dedicated compiler optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/fbd15c15bc7404bb500b62f2e1f80d81e28a3357"&gt;fbd15c1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/173" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;PPX override system&lt;/strong&gt;&lt;/a&gt; completed in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with interval tree data structure and caching for flexible command output overriding (&lt;a href="https://github.com/oxcaml/merlin/issues/173"&gt;#173&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/176"&gt;#176&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/172" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OxCaml 5.2.0minus-16 integration&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; bringing extensive typing system updates, enhanced mode system, and jkind enhancements (&lt;a href="https://github.com/oxcaml/merlin/issues/172"&gt;#172&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime dynamic bindings&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; enabling more flexible execution patterns (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b84488a319760db1c70b28478cd6707e47e847db"&gt;b844883&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Unboxed and small scalars primitives&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for performance improvements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/018fa4230aba6766c62a6ef3e4b6d5c9ea8494ce"&gt;018fa42&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Active development&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 27 commits featuring major compiler infrastructure improvements and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with comprehensive tooling enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler optimization focus&lt;/strong&gt; with new peephole optimization engine, register allocator improvements, and LLVM backend enhancements across both active repositories&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository synchronization&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler development and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; tooling integration through OxCaml 5.2.0minus-16 merge&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, or &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/172" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler-tooling synchronization&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; maintaining compatibility with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; developments through OxCaml 5.2.0minus-16 integration (&lt;a href="https://github.com/oxcaml/merlin/issues/172"&gt;oxcaml/merlin#172&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Shape system coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler changes and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; tooling support, with enhanced UID representation for DWARF debugging (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440"&gt;oxcaml/oxcaml#4440&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode system development&lt;/strong&gt;&lt;/a&gt; spanning both repositories with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; implementing core mode crossing functionality (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314"&gt;oxcaml/oxcaml#4314&lt;/a&gt;) and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; integrating enhanced mode system support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/172" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Collaborative review process&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; providing cross-repository validation for compiler integration work (&lt;a href="https://github.com/oxcaml/merlin/issues/172"&gt;oxcaml/merlin#172&lt;/a&gt;) while contributing to mode crossing development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Compiler optimization strategy&lt;/strong&gt; discussions around peephole optimization engine implementation and register allocator improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;PPX tooling architecture&lt;/strong&gt; detailed discussions between &lt;a href="https://github.com/maxmwang"&gt;Max Wang&lt;/a&gt; and &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; on interval tree design, testing frameworks, and API decisions in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Testing framework evolution&lt;/strong&gt; conversations about adopting expect-tests and quickcheck alongside existing Alcotest usage for &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; development&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;LLVM backend development&lt;/strong&gt; planning discussions around exception handling implementation and GitHub CI integration for &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Performance optimization infrastructure&lt;/strong&gt; development with dedicated peephole optimization engines, register allocator improvements, and scalar primitive enhancements across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Advanced tooling integration&lt;/strong&gt; through comprehensive PPX override systems and interval tree data structures for efficient development workflows in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;LLVM backend expansion&lt;/strong&gt; with enhanced exception handling capabilities and improved data declaration support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system advancement&lt;/strong&gt; through block indices, mode crossing functionality, and enhanced jkind systems spanning both active repositories&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler development week with 27 commits to oxcaml/oxcaml featuring new optimization infrastructure and merlin integration</summary><published>2025-08-10T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-31</id><title>Week 31, 2025: Significant oxcaml compiler development with atomic fields, SIMD improvements, and merlin PPX enhancements.</title><updated>2025-08-03T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Atomic record fields&lt;/strong&gt; support added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;code&gt;[@atomic]&lt;/code&gt; attribute for mutable fields, enabling atomic operations on record fields (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b5fff2343bd"&gt;b5fff2343bd&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/2d2ddd7aa56"&gt;2d2ddd7aa56&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/4b05aaa4df9"&gt;4b05aaa4df9&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/2188553a13b"&gt;2188553a13b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;SIMD vec256 stabilization&lt;/strong&gt; completed in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with comprehensive documentation updates and improved load/store operations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/aaffa137f3f"&gt;aaffa137f3f&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/7f104b148b4"&gt;7f104b148b4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Command-line deprecations&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for CFG and meet options marked as deprecated with warnings in help text (&lt;a href="https://github.com/oxcaml/oxcaml/commit/cad729e9859"&gt;cad729e9859&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;LLVM backend call support&lt;/strong&gt; implemented in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with comprehensive call mechanism for LLVM code generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/7c80250deb2"&gt;7c80250deb2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;DWARF debugging configuration&lt;/strong&gt; flag added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; to enable OxCaml-specific debugging information generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6f5069d7dea"&gt;6f5069d7dea&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;BMI instruction support&lt;/strong&gt; checking implemented in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; instead of LZCNT for x86-64 optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/15802bab845"&gt;15802bab845&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Unboxed array length calculations&lt;/strong&gt; improved in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; &lt;code&gt;Sys&lt;/code&gt; module with more accurate maximum array length formulas for SIMD vectors (&lt;a href="https://github.com/oxcaml/oxcaml/commit/8ae3c0d864d"&gt;8ae3c0d864d&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 5 new PRs opened and 2 major PRs merged focusing on type system improvements and backend enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Merlin tooling progress&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with PPX locate support and compiler synchronization alongside extensive repository cleanup&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Repository maintenance&lt;/strong&gt; across the group with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showing no activity this week&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Multi-area contributions&lt;/strong&gt; from 6 active contributors spanning compiler internals, debugging tools, and language server enhancements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/172" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; merging OxCaml version 5.2.0minus-16 changes into Merlin (&lt;a href="https://github.com/oxcaml/merlin/issues/172"&gt;oxcaml/merlin#172&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/171" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;PPX tooling enhancements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; supporting PPX-expanded files with [@@@merlin.locate] attributes, complementing the broader OxCaml compiler ecosystem (&lt;a href="https://github.com/oxcaml/merlin/issues/171"&gt;oxcaml/merlin#171&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;JavaScript backend integration&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; bringing ocamlj changes that may relate to &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; ecosystem (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4405" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system robustness&lt;/strong&gt;&lt;/a&gt; focus in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with multiple interconnected PRs by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; addressing Flambda2 meet algorithm edge cases and projection handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4405"&gt;oxcaml/oxcaml#4405&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4397"&gt;oxcaml/oxcaml#4397&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4394"&gt;oxcaml/oxcaml#4394&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4390"&gt;oxcaml/oxcaml#4390&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance infrastructure maturation&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with atomic record fields completion and SIMD vec256 stabilization indicating production readiness for performance-critical features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development tooling improvements&lt;/strong&gt; spanning both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with DWARF debugging enhancements and PPX locate support improving developer experience&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Multi-backend compiler evolution&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with continued LLVM backend development and JavaScript backend integration showing expansion beyond traditional OCaml compilation targets&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Significant oxcaml compiler development with atomic fields, SIMD improvements, and merlin PPX enhancements.</summary><published>2025-08-03T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-30</id><title>Week 30, 2025: Major week led by oxcaml core with 40+ commits adding SIMD support, new types, and cross-repository js_of_ocaml integration work</title><updated>2025-07-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Unboxed small integer types&lt;/strong&gt; &lt;code&gt;int8_u&lt;/code&gt; and &lt;code&gt;int16_u&lt;/code&gt; added to stdlib_beta in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for 8-bit and 16-bit unsigned integers (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4823b9e"&gt;4823b9e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;AVX and AVX2 SIMD intrinsics&lt;/strong&gt; support with comprehensive 256-bit vector operations for AMD64 in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/11e1eed"&gt;11e1eed&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;String functions local annotation&lt;/strong&gt; improvements with &lt;code&gt;@local_opt&lt;/code&gt; annotations on key functions like &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;equal&lt;/code&gt;, and &lt;code&gt;compare&lt;/code&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6675e16"&gt;6675e16&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml toplevel support&lt;/strong&gt; enabled through comprehensive patches in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; by &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt;, implementing interactive OCaml toplevel in browsers (&lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Zero allocation checker&lt;/strong&gt; enhanced with &lt;code&gt;-zero-alloc-checker-details-extra&lt;/code&gt; flag in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d14fa4b"&gt;d14fa4b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/171" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;PPX integration features&lt;/strong&gt;&lt;/a&gt; with &lt;code&gt;[@@@merlin.locate]&lt;/code&gt; and &lt;code&gt;[@@@merlin.document]&lt;/code&gt; attribute parsing support in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/171"&gt;oxcaml/merlin#171&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/167"&gt;oxcaml/merlin#167&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Void layout type&lt;/strong&gt; moved to stable status with comprehensive testing infrastructure in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/0dbe8a8"&gt;0dbe8a8&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; led group activity&lt;/strong&gt; with 40+ commits featuring major language enhancements including SIMD support, new type system features, and performance optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; focused on js&lt;em&gt;of&lt;/em&gt;ocaml integration&lt;/strong&gt; with comprehensive toplevel support implementation spanning multiple packages&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; enhanced editor tooling&lt;/strong&gt; with PPX integration features and improved VSCode support for oxcaml syntax&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Two repositories inactive&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showing no activity during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml ecosystem integration&lt;/strong&gt; with &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt; implementing toplevel support in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; using patches from &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;), coordinating with the inactive &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; repository&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;PPX tooling coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; type system enhancements and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; editor support for oxcaml-specific syntax features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package management alignment&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; managing patches for js&lt;em&gt;of&lt;/em&gt;ocaml packages while main development occurs in the primary &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; repository&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;SIMD acceleration focus&lt;/strong&gt; with comprehensive AVX/AVX2 support implementation suggesting increased emphasis on high-performance computing applications in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory locality optimization&lt;/strong&gt; with systematic &lt;code&gt;@local_opt&lt;/code&gt; annotation deployment across stdlib functions indicating performance-first development approach in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system maturation&lt;/strong&gt; with void types achieving stable status and new unboxed integer types expanding oxcaml's type capabilities in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Editor tooling sophistication&lt;/strong&gt; with PPX integration support and enhanced VSCode features showing commitment to developer experience in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Web compilation ecosystem development&lt;/strong&gt; with js&lt;em&gt;of&lt;/em&gt;ocaml toplevel support enabling browser-based OCaml development workflows across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week led by oxcaml core with 40+ commits adding SIMD support, new types, and cross-repository js_of_ocaml integration work</summary><published>2025-07-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-29</id><title>Week 29, 2025: Major compiler SIMD improvements and developer tooling enhancements across oxcaml ecosystem</title><updated>2025-07-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4247" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Vec256 SIMD support&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; including 256-bit vector constants and array operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4247"&gt;oxcaml/oxcaml#4247&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4201"&gt;oxcaml/oxcaml#4201&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4258"&gt;oxcaml/oxcaml#4258&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;LLVM backend &lt;code&gt;-keep-llvmir&lt;/code&gt; flag&lt;/strong&gt; for preserving IR files in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4138" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Atomic primitives refactoring&lt;/strong&gt;&lt;/a&gt; with field-specific operations like &lt;code&gt;Patomic_load_field&lt;/code&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4138"&gt;oxcaml/oxcaml#4138&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4272" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;VEX encoding for SSE operations&lt;/strong&gt;&lt;/a&gt; improving x86 code generation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4272"&gt;oxcaml/oxcaml#4272&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4300" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Three-operand float operations&lt;/strong&gt;&lt;/a&gt; support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4300"&gt;oxcaml/oxcaml#4300&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4253" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type Shapes for Debugger&lt;/strong&gt;&lt;/a&gt; providing enhanced debugging information in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4253"&gt;oxcaml/oxcaml#4253&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/157" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Completion order improvements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; prioritizing modules over types in expression contexts (&lt;a href="https://github.com/oxcaml/merlin/issues/157"&gt;oxcaml/merlin#157&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/155" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Project-wide renaming infrastructure&lt;/strong&gt;&lt;/a&gt; with index format optimizations in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/155"&gt;oxcaml/merlin#155&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/165" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CI workflow enhancements&lt;/strong&gt;&lt;/a&gt; with pull request triggers and workflow dispatch in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/165"&gt;oxcaml/merlin#165&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/164"&gt;oxcaml/merlin#164&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt; focused on &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 23 commits implementing SIMD Vec256 support, atomic primitives refactoring, and LLVM backend improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer tooling advances&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with five merged PRs enhancing IDE capabilities including completion improvements and project-wide renaming infrastructure&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-ecosystem collaboration&lt;/strong&gt; with Jane Street contributors like &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; working on compiler features and &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; leading Merlin development&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance focus&lt;/strong&gt;&lt;/a&gt; evident across both compiler optimizations and typer performance regression reporting (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323"&gt;oxcaml/oxcaml#4323&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories inactive&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showing no activity during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Jane Street contributor engagement&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; working on compiler Mode.Crossing improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4314"&gt;oxcaml/oxcaml#4314&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Shared performance focus&lt;/strong&gt;&lt;/a&gt; between compiler optimization efforts in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and IDE responsiveness concerns, with typer performance regression affecting both compilation speed and editor experience (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323"&gt;oxcaml/oxcaml#4323&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4253" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development toolchain integration&lt;/strong&gt;&lt;/a&gt; where compiler features like enhanced debugging support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4253"&gt;oxcaml/oxcaml#4253&lt;/a&gt;) complement IDE capabilities being developed in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/164" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CI workflow improvements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; setting patterns for collaborative development practices across the oxcaml ecosystem (&lt;a href="https://github.com/oxcaml/merlin/issues/164"&gt;oxcaml/merlin#164&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/165"&gt;oxcaml/merlin#165&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;SIMD ecosystem expansion&lt;/strong&gt; with Vec256 support representing growing vectorization capabilities in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler backend&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/155" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Advanced IDE feature development&lt;/strong&gt;&lt;/a&gt; continuing with project-wide analysis capabilities for renaming and better code navigation in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/155"&gt;oxcaml/merlin#155&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4138" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend modularity improvements&lt;/strong&gt;&lt;/a&gt; with better separation between atomic operations and regular operations in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4138"&gt;oxcaml/oxcaml#4138&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure modernization focus&lt;/strong&gt; on CI/CD improvements and collaborative development workflows across both &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization emphasis&lt;/strong&gt;&lt;/a&gt; both in generated code quality and compiler/tooling internals with active performance regression tracking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323"&gt;oxcaml/oxcaml#4323&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler SIMD improvements and developer tooling enhancements across oxcaml ecosystem</summary><published>2025-07-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-28</id><title>Week 28, 2025: Active compiler development week with type system improvements, CPU feature detection, and autocompletion enhancements</title><updated>2025-07-13T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;BMI instruction set detection&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; configure script for automatic CPU feature detection to prevent segmentation faults on unsupported hardware (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3ce2c8cedbff979a4603387a99d1654f691dfb1d"&gt;3ce2c8c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Portable annotations&lt;/strong&gt; added to core stdlib modules including Map, Set, StdLabels, and Stdlib for improved portability (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e0ba82400e2b30e70d74181df26e02fa20390708"&gt;e0ba824&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Unboxed number modules&lt;/strong&gt; marked as portable with appropriate annotations for Float&lt;em&gt;u, Int32&lt;/em&gt;u, Int64&lt;em&gt;u, and Nativeint&lt;/em&gt;u (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e0ba82400e2b30e70d74181df26e02fa20390708"&gt;e0ba824&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;or_null type refinement&lt;/strong&gt; changing layout from &lt;code&gt;immediate_or_null with 'a&lt;/code&gt; to &lt;code&gt;value_or_null mod everything&lt;/code&gt; for improved type safety (&lt;a href="https://github.com/oxcaml/oxcaml/commit/f2bcf32ed86fd26ea6440a8558ce1c903e5b9b42"&gt;f2bcf32&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system enhancement&lt;/strong&gt;&lt;/a&gt; supporting &lt;code&gt;make boot-_install&lt;/code&gt; with ocamllex on different devices using symbolic links instead of hard links (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292"&gt;oxcaml/oxcaml#4292&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;32-bit support&lt;/strong&gt; enabled for Targetint&lt;em&gt;31&lt;/em&gt;63 module improving platform compatibility (&lt;a href="https://github.com/oxcaml/oxcaml/commit/246bf323aa2156f9f128f9fb0c557fa75453afde"&gt;246bf32&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with compiler improvements and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with autocompletion enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system work&lt;/strong&gt; focused on Mode.Crossing implementation and layout constraint refinements for enhanced safety&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility&lt;/strong&gt; improvements through BMI instruction detection and portable stdlib annotations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer tooling&lt;/strong&gt; advances with autocompletion ordering optimization and renaming infrastructure development&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Build system robustness&lt;/strong&gt; addressing cross-device installation scenarios&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/157" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Completion behavior debate&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/157"&gt;oxcaml/merlin#157&lt;/a&gt; between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt;, &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt;, and &lt;a href="https://github.com/JimmyZJX"&gt;@JimmyZJX&lt;/a&gt; about whether to remove types from expression context completions entirely or just reorder them&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;PPX completion challenges&lt;/strong&gt; identified where expression contexts might require different completion behavior due to ppx flexibility in treating expressions as types&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4267" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Hardware compatibility discussion&lt;/strong&gt;&lt;/a&gt; around segmentation fault resolution with &lt;a href="https://github.com/tmcgilchrist"&gt;Tim McGilchrist&lt;/a&gt; reporting issues and &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; providing technical support for BMI instruction detection fix (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4267"&gt;oxcaml/oxcaml#4267&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Portability emphasis&lt;/strong&gt; with systematic addition of portable annotations across stdlib modules indicating focus on cross-platform compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system refinement&lt;/strong&gt; through layout constraints and mode crossing improvements for enhanced type safety&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Hardware compatibility&lt;/strong&gt; improvements with CPU feature detection preventing runtime crashes on unsupported architectures&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer experience focus&lt;/strong&gt; with autocompletion improvements and build system robustness addressing cross-device installation scenarios&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active compiler development week with type system improvements, CPU feature detection, and autocompletion enhancements</summary><published>2025-07-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-27</id><title>Week 27, 2025: Active development across oxcaml ecosystem with 17 PRs merged in core compiler, atomic operations improvements, and Merlin OCaml compatibility updates</title><updated>2025-07-06T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;CPU relaxation primitive&lt;/strong&gt; &lt;code&gt;%cpu_relax&lt;/code&gt; implemented in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; as external in &lt;code&gt;Domain.cpu_relax&lt;/code&gt; for better busy-waiting performance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4ba2ad473f8"&gt;4ba2ad473f8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced atomic operations&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with improved &lt;code&gt;Stdlib.Atomic.Contended&lt;/code&gt; module fixing mode constraints and type safety (&lt;a href="https://github.com/oxcaml/oxcaml/commit/70dc44292d5"&gt;70dc44292d5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Or_null type unboxing&lt;/strong&gt; support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; allowing &lt;code&gt;or_null&lt;/code&gt; in &lt;code&gt;[@@unboxed]&lt;/code&gt; types for better memory layout (&lt;a href="https://github.com/oxcaml/oxcaml/commit/59e1d3aa9bd"&gt;59e1d3aa9bd&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Simplified jkind API&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; for boxed variant types by removing complex parameter handling from &lt;code&gt;for_boxed_variant&lt;/code&gt; function (&lt;a href="https://github.com/oxcaml/merlin/commit/dea383999438d7f70d7bfe5d887ec3f5781924fc"&gt;dea3839&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/6" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fixed dune sandboxing compatibility&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; by resolving ppxlib&lt;em&gt;ast build issues and updating ocaml&lt;/em&gt;simd to installable version (&lt;a href="https://github.com/oxcaml/opam-repository/issues/6"&gt;oxcaml/opam-repository#6&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4241" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt;&lt;/a&gt; dominated activity with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; merging 17 PRs focused on atomic operations, type system improvements, and upstream OCaml integration (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4241"&gt;oxcaml/oxcaml#4241&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4240"&gt;oxcaml/oxcaml#4240&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/6" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package maintenance&lt;/strong&gt;&lt;/a&gt; across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with fixes for ocaml_simd installation and build compatibility issues (&lt;a href="https://github.com/oxcaml/opam-repository/issues/6"&gt;oxcaml/opam-repository#6&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/156" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Editor tooling updates&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with OCaml 5.2.0minus-14 compatibility and ongoing navigation improvements (&lt;a href="https://github.com/oxcaml/merlin/issues/156"&gt;oxcaml/merlin#156&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4206" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development tooling integration&lt;/strong&gt;&lt;/a&gt; with comprehensive Claude AI documentation added to support automated development workflows (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4206"&gt;oxcaml/oxcaml#4206&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/72" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt; moving ocaml_simd fix from Jane Street repository to oxcaml repository (&lt;a href="https://github.com/janestreet/opam-repository/issues/72"&gt;janestreet/opam-repository#72&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/6"&gt;oxcaml/opam-repository#6&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler version synchronization&lt;/strong&gt; across toolchain with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; updating to OCaml 5.2.0minus-14 while &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; standardized compiler tags to 5.2.0minus-11-opam format&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure alignment&lt;/strong&gt; with magic number updates (563 to 564 series) applied consistently across &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; CMI, AST, CMT, CMS, and index formats to maintain compatibility&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4267" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Installation issues&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/tmcgilchrist"&gt;Tim McGilchrist&lt;/a&gt; regarding SEGV in simdgen.exe during OxCaml switch creation affecting developer onboarding (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4267"&gt;oxcaml/oxcaml#4267&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2123" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Long-standing bug resolution&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; contributing to closure of mutable unboxing issue with for-loop interaction that had been open since earlier development cycles (&lt;a href="https://github.com/oxcaml/oxcaml/issues/2123"&gt;oxcaml/oxcaml#2123&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Systematic upstream integration&lt;/strong&gt; with multiple OCaml compiler backports across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; focusing on type system robustness and module handling improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Atomic operations maturation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; through enhanced mode constraints, type safety fixes, and performance-oriented primitives like CPU relaxation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4206" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer experience enhancement&lt;/strong&gt;&lt;/a&gt; via comprehensive tooling documentation and AI integration guides for automated development workflows (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4206"&gt;oxcaml/oxcaml#4206&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository coordination&lt;/strong&gt; patterns emerging with package fixes being moved between repositories based on maintenance responsibility and architectural decisions&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Active development across oxcaml ecosystem with 17 PRs merged in core compiler, atomic operations improvements, and Merlin OCaml compatibility updates</summary><published>2025-07-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-26</id><title>Week 26, 2025: Major language features added to oxcaml/oxcaml with ARM64 SIMD support plus infrastructure improvements across repositories</title><updated>2025-06-29T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;&lt;code&gt;let mutable&lt;/code&gt; syntax&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; enables mutable variables without ref allocation overhead (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3964"&gt;oxcaml/oxcaml#3964&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 SIMD intrinsics&lt;/strong&gt;&lt;/a&gt; fully implemented with comprehensive test suite and backend support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140"&gt;oxcaml/oxcaml#4140&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4088" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Void function types&lt;/strong&gt;&lt;/a&gt; extension for handling void types in function signatures (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4088"&gt;oxcaml/oxcaml#4088&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/131" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced type enclosing&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with constructor support and improved stability (&lt;a href="https://github.com/oxcaml/merlin/issues/131"&gt;oxcaml/merlin#131&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/123" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Stale occurrence detection&lt;/strong&gt;&lt;/a&gt; in project-wide search now flags potentially outdated results (&lt;a href="https://github.com/oxcaml/merlin/issues/123"&gt;oxcaml/merlin#123&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Automated compiler merge bot&lt;/strong&gt;&lt;/a&gt; with GitHub Actions workflow for OxCaml compiler merges (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/5" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Expanded CI testing&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; supporting Archlinux, Debian, Ubuntu containers and arm64 architecture (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Substantial development activity&lt;/strong&gt; with 49+ merged PRs across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (43 PRs) and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (6 PRs) delivering major language features and IDE improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 platform maturation&lt;/strong&gt;&lt;/a&gt; with comprehensive SIMD intrinsics implementation bringing ARM64 backend to feature parity with x86_64 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140"&gt;oxcaml/oxcaml#4140&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/5" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Infrastructure improvements&lt;/strong&gt;&lt;/a&gt; across multiple repositories including expanded CI testing (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;) and compiler merge automation (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded for &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/72" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Single compiler fix&lt;/strong&gt;&lt;/a&gt; proposed in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; addressing SIMD package compatibility (&lt;a href="https://github.com/janestreet/opam-repository/pull/72"&gt;janestreet/opam-repository#72&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;SIMD compatibility fixes&lt;/strong&gt;&lt;/a&gt; spanning &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with ARM64 SIMD implementation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140"&gt;oxcaml/oxcaml#4140&lt;/a&gt;) requiring compiler version updates to resolve ocaml_simd bytecode issues (&lt;a href="https://github.com/janestreet/opam-repository/pull/72"&gt;janestreet/opam-repository#72&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/151" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler integration coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with two major compiler merge PRs (&lt;a href="https://github.com/oxcaml/merlin/issues/151"&gt;oxcaml/merlin#151&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/153"&gt;oxcaml/merlin#153&lt;/a&gt;) keeping Merlin synchronized with OxCaml compiler changes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/5" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-platform testing expansion&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with ARM64 support (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;) complementing ARM64 SIMD development in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Automated workflow development&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; creating compiler merge automation (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;) to streamline integration with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; updates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/147" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Punned record pattern locate fixes&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; providing technical review and coordination suggestions with upstream maintainer &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/147"&gt;oxcaml/merlin#147&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/149" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;VSCode extension compatibility&lt;/strong&gt;&lt;/a&gt; planning in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; moving type definitions to JSOO-compatible libraries (&lt;a href="https://github.com/oxcaml/merlin/issues/149"&gt;oxcaml/merlin#149&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/150" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler renaming integration&lt;/strong&gt;&lt;/a&gt; discussions involving &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; and &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; for coordinating compiler changes with Merlin updates (&lt;a href="https://github.com/oxcaml/merlin/issues/150"&gt;oxcaml/merlin#150&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 ecosystem maturation&lt;/strong&gt;&lt;/a&gt; with comprehensive SIMD support implementation across compiler backend (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4140"&gt;oxcaml/oxcaml#4140&lt;/a&gt;), testing infrastructure (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;), and package compatibility fixes (&lt;a href="https://github.com/janestreet/opam-repository/pull/72"&gt;janestreet/opam-repository#72&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3964" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance-focused language features&lt;/strong&gt;&lt;/a&gt; adding &lt;code&gt;let mutable&lt;/code&gt; syntax (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3964"&gt;oxcaml/oxcaml#3964&lt;/a&gt;) and array type safety improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4098"&gt;oxcaml/oxcaml#4098&lt;/a&gt;) to reduce allocation overhead&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Automation and tooling integration&lt;/strong&gt;&lt;/a&gt; with GitHub Actions adoption for compiler merge processes (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;) and reusable CI components (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4160" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced developer experience&lt;/strong&gt;&lt;/a&gt; through improved error messaging (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4160"&gt;oxcaml/oxcaml#4160&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4161"&gt;oxcaml/oxcaml#4161&lt;/a&gt;), IDE feature improvements (&lt;a href="https://github.com/oxcaml/merlin/issues/131"&gt;oxcaml/merlin#131&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/123"&gt;oxcaml/merlin#123&lt;/a&gt;), and comprehensive documentation updates&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major language features added to oxcaml/oxcaml with ARM64 SIMD support plus infrastructure improvements across repositories</summary><published>2025-06-29T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-25</id><title>Week 25, 2025: Major oxcaml ecosystem updates with new stdlib modules, Merlin integration, and repository infrastructure establishment</title><updated>2025-06-22T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Backoff module&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; stdlib providing randomized exponential backoff mechanism for concurrent programming (&lt;a href="https://github.com/oxcaml/oxcaml/commit/75ab9dc03cb7c0c0492ca55f137628df3b99d643"&gt;75ab9dc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Multicore module&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; systhreads library enabling spawning of preemptively scheduled threads across domains (&lt;a href="https://github.com/oxcaml/oxcaml/commit/75ab9dc03cb7c0c0492ca55f137628df3b99d643"&gt;75ab9dc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Domain alerts updated&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; to guide users away from direct domain spawning toward using Multicore library (&lt;a href="https://github.com/oxcaml/oxcaml/commit/75ab9dc03cb7c0c0492ca55f137628df3b99d643"&gt;75ab9dc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Comprehensive oxcaml 5.2.0-minus11 integration&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; bringing updated language extensions, mode system improvements, and jkind enhancements (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced parser support&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with updated syntax handling and AST improvements for new language constructs (&lt;a href="https://github.com/oxcaml/merlin/commit/989914aaa173032cd22d24eca9382019df9fe149"&gt;989914a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/pull/4" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;conf-which build dependency&lt;/strong&gt;&lt;/a&gt; added to &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; for improved compatibility with ArchLinux and other distributions (&lt;a href="https://github.com/oxcaml/opam-repository/pull/4"&gt;oxcaml/opam-repository#4&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; focused on parallel programming infrastructure with new stdlib modules and runtime optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Tooling synchronization&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; receiving comprehensive updates to support oxcaml 5.2.0-minus11 across 206 files&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Repository infrastructure&lt;/strong&gt; establishment in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with CI setup and cross-platform compatibility improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package ecosystem challenges&lt;/strong&gt; emerging as external libraries require oxcaml-specific adaptations for compatibility&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with Merlin updated to support oxcaml 5.2.0-minus11 bringing language extensions and typing system changes (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/pull/3" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package distribution infrastructure&lt;/strong&gt;&lt;/a&gt; coordinated between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with repository establishment to support oxcaml variant distribution (&lt;a href="https://github.com/oxcaml/opam-repository/pull/3"&gt;oxcaml/opam-repository#3&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/pull/4"&gt;oxcaml/opam-repository#4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Ecosystem compatibility&lt;/strong&gt;&lt;/a&gt; challenges spanning from &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler changes requiring specialized versions of external packages, addressed through &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; infrastructure (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141"&gt;oxcaml/oxcaml#4141&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4146"&gt;oxcaml/oxcaml#4146&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4155" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system bug&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; by &lt;a href="https://github.com/samsa1"&gt;Samuel Vivien&lt;/a&gt; regarding polymorphic parameters and letop interactions affecting universal variable scope handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4155"&gt;oxcaml/oxcaml#4155&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package compatibility strategy&lt;/strong&gt;&lt;/a&gt; discussions in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;a href="https://github.com/joelreymont"&gt;Joel Reymont&lt;/a&gt; working with maintainers to identify oxcaml-specific requirements for external libraries (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141"&gt;oxcaml/oxcaml#4141&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4146"&gt;oxcaml/oxcaml#4146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compilation unit usage&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; regarding &lt;code&gt;Unit_info.make_with_known_compilation_unit&lt;/code&gt; with plans for follow-up discussions on future improvements (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package ecosystem fragmentation&lt;/strong&gt;&lt;/a&gt; with external libraries requiring oxcaml-specific versions due to compiler changes, highlighting need for compatibility strategy (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4141"&gt;oxcaml/oxcaml#4141&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4146"&gt;oxcaml/oxcaml#4146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/pull/3" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Infrastructure maturation&lt;/strong&gt;&lt;/a&gt; with establishment of &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; CI testing across multiple platforms and architectures (&lt;a href="https://github.com/oxcaml/opam-repository/pull/3"&gt;oxcaml/opam-repository#3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;User experience focus&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with improvements to guide users toward higher-level abstractions like Multicore instead of direct domain usage (&lt;a href="https://github.com/oxcaml/oxcaml/commit/75ab9dc03cb7c0c0492ca55f137628df3b99d643"&gt;75ab9dc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Tooling synchronization&lt;/strong&gt;&lt;/a&gt; efforts with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; maintaining compatibility with rapidly evolving oxcaml compiler features (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml ecosystem updates with new stdlib modules, Merlin integration, and repository infrastructure establishment</summary><published>2025-06-22T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-24</id><title>Week 24, 2025: Major rebranding from flambda-backend to OxCaml with SIMD enhancements, CI infrastructure, and IDE improvements</title><updated>2025-06-15T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Vec256/512 SIMD instruction support&lt;/strong&gt; implemented with comprehensive backend changes affecting AMD64 and ARM64 architectures in &lt;a href="https://github.com/oxcaml/oxcaml/commit/0db41c34894947b7822ad5cc5c3ac0869dfa7f4e"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 FMOV instruction fix&lt;/strong&gt; for correct popcnt sequence emission improving code generation in &lt;a href="https://github.com/oxcaml/oxcaml/commit/145c529ee12a6710689ef22224153af7569f3604"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/3" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;GitHub Actions CI workflow&lt;/strong&gt;&lt;/a&gt; added for testing package installation across multiple platforms including Ubuntu and macOS with OxCaml compiler variant in &lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/1" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ppxlib_ast build script fix&lt;/strong&gt;&lt;/a&gt; to use bash instead of sh, resolving build failures in &lt;a href="https://github.com/oxcaml/opam-repository/issues/1"&gt;oxcaml/opam-repository#1&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/opam-repository/issues/2"&gt;oxcaml/opam-repository#2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/148" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Merlin locate-type-multi command&lt;/strong&gt;&lt;/a&gt; enabling enhanced VSCode type navigation for complex types like &lt;code&gt;a -&gt; (b * c)&lt;/code&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/148"&gt;oxcaml/merlin#148&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/147" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Punned record pattern locate fixes&lt;/strong&gt;&lt;/a&gt; addressing cases where &lt;code&gt;{ a; b }&lt;/code&gt; pattern navigation incorrectly focuses on pattern instead of label definition in &lt;a href="https://github.com/oxcaml/merlin/issues/147"&gt;oxcaml/merlin#147&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/71" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Shell script permission fixes&lt;/strong&gt;&lt;/a&gt; for macOS builds avoiding reliance on executable permissions in ppxlib_ast cleanup script in &lt;a href="https://github.com/janestreet/opam-repository/issues/71"&gt;janestreet/opam-repository#71&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Comprehensive parallelism tutorials&lt;/strong&gt; added with two new guides covering basic concepts and advanced techniques in &lt;a href="https://github.com/oxcaml/oxcaml/commit/b55315e2ffb97c1dbd6cddeccc8edd3ffca2adcc"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Project-wide rebranding&lt;/strong&gt; from flambda-backend to OxCaml across all repositories with systematic package renaming from &lt;code&gt;+jst&lt;/code&gt; to &lt;code&gt;+ox&lt;/code&gt; suffixes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository CI infrastructure&lt;/strong&gt; development by &lt;a href="https://github.com/punchagan"&gt;Puneeth Chaganti&lt;/a&gt; establishing automated testing workflows for the OxCaml ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Multi-platform compatibility improvements&lt;/strong&gt; focusing on macOS support across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced developer experience&lt;/strong&gt; through new IDE features in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and comprehensive documentation updates in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;SIMD and performance focus&lt;/strong&gt; with Vec256/512 instruction support and backend optimizations in the core &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Coordinated rebranding effort&lt;/strong&gt; from Jane Street to OxCaml branding affecting &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with package suffix changes from &lt;code&gt;+jst&lt;/code&gt; to &lt;code&gt;+ox&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/3" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CI workflow consolidation&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/punchagan"&gt;Puneeth Chaganti&lt;/a&gt; with GitHub Actions development in both &lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt; and initial work in &lt;a href="https://github.com/janestreet/opam-repository/issues/68"&gt;janestreet/opam-repository#68&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository/issues/69"&gt;janestreet/opam-repository#69&lt;/a&gt; before redirecting to oxcaml repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2858" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Shared build compatibility issues&lt;/strong&gt;&lt;/a&gt; with ppxlib compilation problems affecting both &lt;a href="https://github.com/oxcaml/oxcaml/issues/2858"&gt;oxcaml/oxcaml#2858&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; patches, requiring coordinated solutions&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;macOS platform support&lt;/strong&gt; improvements spanning &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with shell script fixes and library compatibility patches&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; through OxCaml 5.2.0-minus11 integration work in &lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Code review practices&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; about module path adjustment strategies for easier future merges in compiler integration work in &lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system behavior analysis&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; identifying potential Merlin bugs in modality handling where &lt;code&gt;int&lt;/code&gt; type crosses multiple axes inappropriately in &lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unit info handling&lt;/strong&gt;&lt;/a&gt; technical discussion involving &lt;a href="https://github.com/lukemaurer"&gt;Luke Maurer&lt;/a&gt; about avoiding &lt;code&gt;make_dummy&lt;/code&gt; usage and proper &lt;code&gt;Unit_info.make_with_known_compilation_unit&lt;/code&gt; implementation in &lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2858" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Community support&lt;/strong&gt;&lt;/a&gt; provided to &lt;a href="https://github.com/patrick-nicodemus"&gt;Patrick Nicodemus&lt;/a&gt; for ppxlib compilation issues with suggestions from &lt;a href="https://github.com/v01dXYZ"&gt;Robert Dazi&lt;/a&gt; for using janestreet/opam-repo#with-extensions branch in &lt;a href="https://github.com/oxcaml/oxcaml/issues/2858"&gt;oxcaml/oxcaml#2858&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;SIMD and vectorization emphasis&lt;/strong&gt; with new vec256/512 instruction support and extensive testing infrastructure showing commitment to high-performance computing across the OxCaml ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation-driven development&lt;/strong&gt; with multiple new tutorial series, reference guides, and reorganized content structure indicating focus on developer experience in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced IDE navigation capabilities&lt;/strong&gt; with multi-type location commands and pattern matching improvements targeting complex type definitions in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure consolidation&lt;/strong&gt; with CI/CD workflow discussions indicating centralization efforts toward the &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Collaborative code review practices&lt;/strong&gt; emphasizing maintainability and future merge compatibility in compiler integration work across repositories&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major rebranding from flambda-backend to OxCaml with SIMD enhancements, CI infrastructure, and IDE improvements</summary><published>2025-06-15T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-23</id><title>Week 23, 2025: Heavy oxcaml/oxcaml development with 35 PRs plus Merlin compatibility update and Jane Street package issues</title><updated>2025-06-08T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;New &lt;code&gt;-o&lt;/code&gt; option for ocamldep&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; allowing output to a specific file rather than stdout (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4045"&gt;oxcaml/oxcaml#4045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced &lt;code&gt;-I-paths&lt;/code&gt; and &lt;code&gt;-H-paths&lt;/code&gt; flags&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; replacing &lt;code&gt;-libloc&lt;/code&gt; with more flexible path specification (&lt;a href="https://github.com/oxcaml/oxcaml/commit/963afe053f648894c761f7b26a3b222297634481"&gt;oxcaml/oxcaml@963afe0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3829" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Improved Domain module type annotations&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;code&gt;mod portable contended&lt;/code&gt; layout specifications (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3829"&gt;oxcaml/oxcaml#3829&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4069" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;VEX encoding bug fix&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; binary emitter affecting x86 assembly generation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4069"&gt;oxcaml/oxcaml#4069&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3545" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced continuation shortcuts&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; Flambda2 optimizer for better performance (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3545"&gt;oxcaml/oxcaml#3545&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 5.2.0minus-10 compatibility&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with magic number updates to &lt;code&gt;Caml1999I560&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt;: &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; experienced intensive development with 35 merged PRs covering CLI improvements, compiler optimizations, and type system enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Tooling maintenance&lt;/strong&gt;: &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; received compatibility updates for OCaml 5.2.0minus-10 support with magic number changes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package ecosystem issues&lt;/strong&gt;: &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; had two build-related problems reported affecting ocaml-index and base packages&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Limited activity&lt;/strong&gt;: &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; showed no development activity this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Version synchronization&lt;/strong&gt;&lt;/a&gt;: &lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt; compatibility update directly supports new &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler changes, ensuring editor tooling remains functional&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package dependency coordination&lt;/strong&gt;: Issues in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with ocaml-index and base packages potentially affect &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; development environments and LSP functionality&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Magic number consistency&lt;/strong&gt;&lt;/a&gt;: The &lt;code&gt;Caml1999I560&lt;/code&gt; magic number update in &lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt; aligns with compiler interface changes in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4079" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler optimization focus&lt;/strong&gt;&lt;/a&gt;: Multiple register allocation improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4079"&gt;oxcaml/oxcaml#4079&lt;/a&gt;) and garbage collection enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4051"&gt;oxcaml/oxcaml#4051&lt;/a&gt;) in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; indicate performance-oriented development&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Advanced type system development&lt;/strong&gt;&lt;/a&gt;: Runtime quotations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;oxcaml/oxcaml#4395&lt;/a&gt;) and mode annotations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4077"&gt;oxcaml/oxcaml#4077&lt;/a&gt;) show sophisticated type system evolution in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4045" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Developer experience improvements&lt;/strong&gt;&lt;/a&gt;: Enhanced CLI options (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4045"&gt;oxcaml/oxcaml#4045&lt;/a&gt;) and better error messages (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4105"&gt;oxcaml/oxcaml#4105&lt;/a&gt;) demonstrate focus on tooling usability&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Infrastructure maintenance&lt;/strong&gt;&lt;/a&gt;: Version compatibility work in &lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt; and package issues in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; highlight ongoing ecosystem maintenance needs&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Heavy oxcaml/oxcaml development with 35 PRs plus Merlin compatibility update and Jane Street package issues</summary><published>2025-06-08T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-22</id><title>Week 22, 2025: Heavy development week dominated by oxcaml/oxcaml compiler optimizations and Jane Street package ecosystem updates for OxCaml compatibility</title><updated>2025-06-01T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3501" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Continuation specialization budget&lt;/strong&gt;&lt;/a&gt; support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with new &lt;code&gt;-flambda2-expert-cont-spec-budget&lt;/code&gt; compiler flag for controlling continuation copying/generation limits (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3501"&gt;oxcaml/oxcaml#3501&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4027" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CSV output support&lt;/strong&gt;&lt;/a&gt; in oxcaml standalone regalloc tool with &lt;code&gt;-csv-output&lt;/code&gt; flag providing structured performance analysis data (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4027"&gt;oxcaml/oxcaml#4027&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3993" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Improved x86 Boolean negation&lt;/strong&gt;&lt;/a&gt; code generation optimizations for better performance in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3993"&gt;oxcaml/oxcaml#3993&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3955" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode implications documentation&lt;/strong&gt;&lt;/a&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; explaining how mode expressions imply related modes (immutable→contended, local→yielding, etc.) (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3955"&gt;oxcaml/oxcaml#3955&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/145" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Removed runtime float32 support&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; that conflicted with compiler definitions, eliminating foreign C stubs and float32.c implementation (&lt;a href="https://github.com/oxcaml/merlin/issues/145"&gt;oxcaml/merlin#145&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package version update&lt;/strong&gt; to &lt;code&gt;v0.18~preview.130.33+516&lt;/code&gt; across 200+ Jane Street packages in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with opam file dependency updates (&lt;a href="https://github.com/janestreet/opam-repository/commit/2819773f29b6f6c14b918eae3cb40c8ff6b22d0e"&gt;janestreet/opam-repository@2819773&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/56" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;MDX support&lt;/strong&gt;&lt;/a&gt; added for version 2.5.0 in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with OxCaml compiler compatibility including AST and type exposure changes (&lt;a href="https://github.com/janestreet/opam-repository/issues/56"&gt;janestreet/opam-repository#56&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/59" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;UTop crash fix&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; for module definitions with enum types, resolving fatal exception in autoprinter functionality (&lt;a href="https://github.com/janestreet/opam-repository/issues/59"&gt;janestreet/opam-repository#59&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Heavy development activity&lt;/strong&gt; with 30 commits in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; implementing advanced compiler optimizations including continuation specialization, x86 improvements, and jkind inference enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package ecosystem coordination&lt;/strong&gt; with &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; updating 200+ packages to v0.18~preview.130.33+516 for OxCaml compatibility alongside tool integration fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/145" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-repository compatibility work&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; addressing float32 conflicts and parsing module updates for 5.2.0minus-9 magic number support (&lt;a href="https://github.com/oxcaml/merlin/issues/145"&gt;oxcaml/merlin#145&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity recorded&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Focus on production readiness&lt;/strong&gt; with runtime stability improvements, GC bug fixes, and comprehensive tooling enhancements across the ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/145" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OxCaml compiler compatibility&lt;/strong&gt;&lt;/a&gt; coordination between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with merlin removing float32 runtime support that conflicted with compiler definitions (&lt;a href="https://github.com/oxcaml/merlin/issues/145"&gt;oxcaml/merlin#145&lt;/a&gt;) and Jane Street packages requiring AST/type changes for compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package ecosystem synchronization&lt;/strong&gt; with &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; updating all 200+ packages to v0.18~preview.130.33+516 to align with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler developments (&lt;a href="https://github.com/janestreet/opam-repository/commit/2819773f29b6f6c14b918eae3cb40c8ff6b22d0e"&gt;janestreet/opam-repository@2819773&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-repository contributor engagement&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; active in both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; documentation discussions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;oxcaml/oxcaml#4016&lt;/a&gt;) and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; utop bug reporting (&lt;a href="https://github.com/janestreet/opam-repository/issues/58"&gt;janestreet/opam-repository#58&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/145" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Magic number compatibility&lt;/strong&gt;&lt;/a&gt; coordination between repositories with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; updating msupport_parsing module for 5.2.0minus-9 compatibility (&lt;a href="https://github.com/oxcaml/merlin/issues/145"&gt;oxcaml/merlin#145&lt;/a&gt;) while &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; continues compiler development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation improvement discussion&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; between &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; about providing copy-paste ready code examples (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;oxcaml/oxcaml#4016&lt;/a&gt;) to improve developer experience&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4033" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;GCC 15 compilation failure&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; runtime4 (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4033"&gt;oxcaml/oxcaml#4033&lt;/a&gt;) with &lt;a href="https://github.com/lthls"&gt;Vincent Laviron&lt;/a&gt; providing guidance on upstream patches&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/60" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package installation troubleshooting&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with &lt;a href="https://github.com/nathanfarlow"&gt;Nathan Farlow&lt;/a&gt; identifying base v0.17.2 compilation failures and documenting workaround using preview versions (&lt;a href="https://github.com/janestreet/opam-repository/issues/60"&gt;janestreet/opam-repository#60&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/58" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;UTop bug investigation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; reporting autoprinter crashes with module definitions (&lt;a href="https://github.com/janestreet/opam-repository/issues/58"&gt;janestreet/opam-repository#58&lt;/a&gt;) leading to fix by &lt;a href="https://github.com/art-w"&gt;@art-w&lt;/a&gt; (&lt;a href="https://github.com/janestreet/opam-repository/issues/59"&gt;janestreet/opam-repository#59&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3501" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Advanced compiler optimization focus&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; implementing continuation specialization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3501"&gt;oxcaml/oxcaml#3501&lt;/a&gt;) and match-in-match optimizations representing push toward more sophisticated code generation capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package ecosystem stability emphasis&lt;/strong&gt; with &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; systematic version updates across 200+ packages and compatibility fixes showing coordination for production readiness&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository collaboration intensification&lt;/strong&gt; evident in OxCaml compatibility work spanning &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;, and &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with shared contributors addressing integration challenges&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4027" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Tooling and development experience improvements&lt;/strong&gt;&lt;/a&gt; pattern with CSV output for performance analysis (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4027"&gt;oxcaml/oxcaml#4027&lt;/a&gt;), documentation enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;oxcaml/oxcaml#4016&lt;/a&gt;), and CI infrastructure upgrades&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4042" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime stability and correctness focus&lt;/strong&gt;&lt;/a&gt; with multiple GC bug fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4042"&gt;oxcaml/oxcaml#4042&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4046"&gt;oxcaml/oxcaml#4046&lt;/a&gt;) and memory management improvements addressing production deployment concerns&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Heavy development week dominated by oxcaml/oxcaml compiler optimizations and Jane Street package ecosystem updates for OxCaml compatibility</summary><published>2025-06-01T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-21</id><title>Week 21, 2025: Major oxcaml compiler advances with atomic operations, API cleanup, and opam repository restructuring for dune compatibility</title><updated>2025-05-25T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3807" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Atomic operations&lt;/strong&gt;&lt;/a&gt; now support &lt;code&gt;value_or_null&lt;/code&gt; types with correct result kind inference throughout the type system (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3807"&gt;oxcaml/oxcaml#3807&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3687" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed records&lt;/strong&gt;&lt;/a&gt; can now be embedded inside boxed records, expanding mixed data structure capabilities (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3687"&gt;oxcaml/oxcaml#3687&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3998" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New x86 assembly directives&lt;/strong&gt;&lt;/a&gt; system (v2) replaces old directive handling for improved code generation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3998"&gt;oxcaml/oxcaml#3998&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3948"&gt;oxcaml/oxcaml#3948&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3942" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced debugging identifiers&lt;/strong&gt;&lt;/a&gt; propagation through Lambda IR for better debugging experience (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3942"&gt;oxcaml/oxcaml#3942&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3995" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 TSAN support&lt;/strong&gt;&lt;/a&gt; with proper 128-bit register save/restore functionality (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3995"&gt;oxcaml/oxcaml#3995&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4034" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Function sections&lt;/strong&gt;&lt;/a&gt; for cached generic functions optimization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4034"&gt;oxcaml/oxcaml#4034&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4025" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Regalloc tool&lt;/strong&gt;&lt;/a&gt; validation option for standalone usage (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4025"&gt;oxcaml/oxcaml#4025&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4018" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Datalog predicates&lt;/strong&gt;&lt;/a&gt; added &lt;code&gt;not_equal&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt; operations for analysis (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4018"&gt;oxcaml/oxcaml#4018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4039" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Improved error hints&lt;/strong&gt;&lt;/a&gt; for unboxed record field projection and non-existent unboxed versions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4039"&gt;oxcaml/oxcaml#4039&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4038"&gt;oxcaml/oxcaml#4038&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/54" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dune package management compatibility&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/art-w"&gt;@art-w&lt;/a&gt; reorganizing folder structure to packages/pkg/pkg.X.Y.Z format enabling &lt;code&gt;dune pkg&lt;/code&gt; workflows alongside traditional opam (&lt;a href="https://github.com/janestreet/opam-repository/issues/54"&gt;janestreet/opam-repository#54&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;macOS ARM64 and x86_64 runtime fixes&lt;/strong&gt; including huge pages compilation fix and stack overflow handler patches in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/57" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;NixOS script compatibility&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/glittershark"&gt;Aspen Smith&lt;/a&gt; using &lt;code&gt;/usr/bin/env bash&lt;/code&gt; instead of &lt;code&gt;/bin/bash&lt;/code&gt; for POSIX compliance (&lt;a href="https://github.com/janestreet/opam-repository/issues/57"&gt;janestreet/opam-repository#57&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/56" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;MDX 2.5.0 support&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/maiste"&gt;Etienne&lt;/a&gt; with AST and type compatibility changes for oxcaml compiler (&lt;a href="https://github.com/janestreet/opam-repository/issues/56"&gt;janestreet/opam-repository#56&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4041" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Primary activity concentrated&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 25 merged PRs covering atomic operations, unboxed records, x86 backend improvements, and major API cleanup (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4041"&gt;oxcaml/oxcaml#4041&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/54" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Repository infrastructure modernization&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with dune package management integration and cross-platform compatibility improvements (&lt;a href="https://github.com/janestreet/opam-repository/issues/54"&gt;janestreet/opam-repository#54&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories inactive&lt;/strong&gt; with no commits or activity: &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system stabilization&lt;/strong&gt; focus with experimental features removal and documentation improvements across multiple PRs&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-platform robustness&lt;/strong&gt; improvements addressing macOS compilation issues and NixOS compatibility for broader adoption&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Compiler and repository coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler improvements and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; packaging infrastructure to support new language features&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/56" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;MDX integration&lt;/strong&gt;&lt;/a&gt; work by &lt;a href="https://github.com/maiste"&gt;Etienne&lt;/a&gt; ensuring markdown documentation tooling compatibility with oxcaml compiler extensions (&lt;a href="https://github.com/janestreet/opam-repository/issues/56"&gt;janestreet/opam-repository#56&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3995" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Platform-specific fixes&lt;/strong&gt;&lt;/a&gt; developed in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for ARM64 TSAN support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3995"&gt;oxcaml/oxcaml#3995&lt;/a&gt;) with corresponding runtime patches applied in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/54" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system evolution&lt;/strong&gt;&lt;/a&gt; with dune package management integration in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; supporting modern workflows for &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; development (&lt;a href="https://github.com/janestreet/opam-repository/issues/54"&gt;janestreet/opam-repository#54&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; initiated discussion about missing documentation for &lt;code&gt;unique_&lt;/code&gt; allocation keyword, which was resolved by clarifying it should be covered in uniqueness documentation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4026"&gt;oxcaml/oxcaml#4026&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4031" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Domain terminology&lt;/strong&gt;&lt;/a&gt; discussion with &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; suggesting explicit connection to vanilla OCaml domain concepts for clarity, with maintainer agreement on improving documentation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4031"&gt;oxcaml/oxcaml#4031&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; reported runtime4 compilation failure with recent GCC versions, providing detailed error analysis and workaround suggestions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4033"&gt;oxcaml/oxcaml#4033&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4041" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;API stabilization&lt;/strong&gt;&lt;/a&gt; effort with major cleanup removing experimental capsule and effect systems, focusing on production-ready features (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4041"&gt;oxcaml/oxcaml#4041&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3943" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation enhancement&lt;/strong&gt;&lt;/a&gt; push covering modes, kinds, and uniqueness features with community feedback and systematic improvement (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3943"&gt;oxcaml/oxcaml#3943&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3988"&gt;oxcaml/oxcaml#3988&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4015"&gt;oxcaml/oxcaml#4015&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3687" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mixed data structures&lt;/strong&gt;&lt;/a&gt; advancement enabling more complex unboxed record compositions with ongoing work on mixed modules (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3687"&gt;oxcaml/oxcaml#3687&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4020"&gt;oxcaml/oxcaml#4020&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/54" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build system modernization&lt;/strong&gt;&lt;/a&gt; with dune package management integration allowing dependency management directly from dune without opam binary requirements (&lt;a href="https://github.com/janestreet/opam-repository/issues/54"&gt;janestreet/opam-repository#54&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/57" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-platform robustness&lt;/strong&gt;&lt;/a&gt; addressing macOS compilation issues and NixOS compatibility for broader OCaml with extensions adoption (&lt;a href="https://github.com/janestreet/opam-repository/issues/57"&gt;janestreet/opam-repository#57&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3995" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Backend optimization&lt;/strong&gt;&lt;/a&gt; work spanning ARM64, x86, and debugging infrastructure improvements with focus on performance and tooling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3995"&gt;oxcaml/oxcaml#3995&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3998"&gt;oxcaml/oxcaml#3998&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml compiler advances with atomic operations, API cleanup, and opam repository restructuring for dune compatibility</summary><published>2025-05-25T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-20</id><title>Week 20, 2025: Major development week with oxcaml compiler advances, repository restructuring for dune pkg support, and runtime compatibility fixes</title><updated>2025-05-18T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;New &lt;code&gt;-save-ir-before&lt;/code&gt; compiler flag&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; allows saving intermediate representation before specified compilation passes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4000"&gt;oxcaml/oxcaml#4000&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3854" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Separability axis basics&lt;/strong&gt;&lt;/a&gt; for layout types introduce new type system capabilities for tracking layout separability in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3854"&gt;oxcaml/oxcaml#3854&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Register allocation debugging tool&lt;/strong&gt; added to help analyze and debug register allocation passes in the compiler (&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/54" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Repository layout restructured&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; for dune package management compatibility, moving packages to &lt;code&gt;packages/pkg/pkg.X.Y.Z&lt;/code&gt; format (&lt;a href="https://github.com/janestreet/opam-repository/issues/54"&gt;janestreet/opam-repository#54&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;OCaml compiler upgraded&lt;/strong&gt; from 4.14.1 to 4.14.2 in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; to resolve compilation issues on Arch Linux&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3989" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CI enhancement&lt;/strong&gt;&lt;/a&gt; with automated 80-character line length checking in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3989"&gt;oxcaml/oxcaml#3989&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Intensive compiler development&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 17 merged PRs delivering new debugging tools, type system enhancements, and runtime fixes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Major infrastructure work&lt;/strong&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; restructuring 931 files for dune pkg compatibility and upgrading to OCaml 4.14.2&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime compatibility focus&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; addressing float32 support and library fixes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; repositories during this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/145" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Float32 runtime compatibility&lt;/strong&gt;&lt;/a&gt; work spans &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; addressing potential collisions between runtime support and compiler definitions (&lt;a href="https://github.com/oxcaml/merlin/issues/145"&gt;oxcaml/merlin#145&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Documentation consistency&lt;/strong&gt;&lt;/a&gt; efforts by &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; across both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; improving installation instructions and code example quality (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;oxcaml/oxcaml#4016&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/52"&gt;janestreet/opam-repository#52&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;OCaml version synchronization&lt;/strong&gt; between repositories with &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; upgrading to 4.14.2 while &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; addresses 5.2.0minus-9 branch compatibility&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/49" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;PPX_deriving compatibility&lt;/strong&gt;&lt;/a&gt; work in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; enabling compilation with OxCaml extensions (&lt;a href="https://github.com/janestreet/opam-repository/issues/49"&gt;janestreet/opam-repository#49&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/44" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Uniqueness mode compilation discrepancy&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/onsah"&gt;Onur Şahin&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; where LSP shows no errors but dune build fails with "aliased but expected to be unique" errors, leading to investigation of switch setup and dune version compatibility (&lt;a href="https://github.com/janestreet/opam-repository/issues/44"&gt;janestreet/opam-repository#44&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced compiler introspection&lt;/strong&gt; with new IR saving capabilities and debugging tools in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; improving development workflow and compiler analysis&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Repository modernization&lt;/strong&gt; focus with &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; restructuring for dune pkg compatibility and removing bootstrap packages to prevent PATH pollution&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime compatibility prioritization&lt;/strong&gt; across multiple repositories addressing platform-specific issues and version synchronization challenges&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository collaboration&lt;/strong&gt; increasing with contributors working on related issues across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major development week with oxcaml compiler advances, repository restructuring for dune pkg support, and runtime compatibility fixes</summary><published>2025-05-18T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-19</id><title>Week 19, 2025: Major bytecode compilation improvements in oxcaml/oxcaml with ARM64 fixes across multiple repositories</title><updated>2025-05-11T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;New &lt;code&gt;-dblambda&lt;/code&gt; command-line flag&lt;/strong&gt; for dumping Blambda terms before bytecode generation, enhancing debugging capabilities for bytecode compilation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6e3762ab8b81d897875b27adf1b6601a28708a2c"&gt;oxcaml/oxcaml commit 6e3762ab&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 CSSC instruction support&lt;/strong&gt; with new &lt;code&gt;-fcssc&lt;/code&gt; flag enabling Common Short Sequence Compression instructions for optimized &lt;code&gt;popcnt&lt;/code&gt; and &lt;code&gt;ctz&lt;/code&gt; operations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/30b5ee65653db2e02b17404a6ad6b72a84c13b49"&gt;oxcaml/oxcaml commit 30b5ee65&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Configurable fiber stack sizes&lt;/strong&gt; allowing runtime adjustment of stack allocation for better memory management (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6e3762ab8b81d897875b27adf1b6601a28708a2c"&gt;oxcaml/oxcaml commit 6e3762ab&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Signal stack size computation&lt;/strong&gt; improvements for better thread safety and memory usage (&lt;a href="https://github.com/oxcaml/oxcaml/commit/2b7f4e22cc950311d2450e57bcf8a2920a05dbea"&gt;oxcaml/oxcaml commit 2b7f4e22&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package version release&lt;/strong&gt; &lt;code&gt;v0.18~preview.130.31+242&lt;/code&gt; including updates to core Jane Street libraries and addition of new packages: &lt;code&gt;float_array&lt;/code&gt;, &lt;code&gt;oklab&lt;/code&gt;, &lt;code&gt;simple_xml&lt;/code&gt;, and &lt;code&gt;toplayer&lt;/code&gt; (&lt;a href="https://github.com/janestreet/opam-repository/commit/fd6d4f29cc5f0e56ed2f1f0058a6cee547b715f8"&gt;janestreet/opam-repository commit fd6d4f2&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major bytecode compilation modernization&lt;/strong&gt; led by &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with introduction of new Blambda intermediate representation&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-platform ARM64 improvements&lt;/strong&gt; spanning multiple repositories with runtime fixes and instruction optimizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/pull/144" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml version compatibility updates&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; for OCaml 5.2.0minus-10 via &lt;a href="https://github.com/oxcaml/merlin/pull/144"&gt;oxcaml/merlin#144&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Community engagement&lt;/strong&gt; around uniqueness mode implementation and toolchain integration challenges in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/45" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 platform support coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; implementing CSSC instruction optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/30b5ee65653db2e02b17404a6ad6b72a84c13b49"&gt;commit 30b5ee65&lt;/a&gt;) while &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; addresses runtime effects and locals issues (&lt;a href="https://github.com/janestreet/opam-repository/pull/45"&gt;pull #45&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/pull/144" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml version alignment&lt;/strong&gt;&lt;/a&gt; efforts with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; updating for OCaml 5.2.0minus-10 compatibility (&lt;a href="https://github.com/oxcaml/merlin/pull/144"&gt;pull #144&lt;/a&gt;) while core compiler work continues in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3574" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda-backend integration&lt;/strong&gt;&lt;/a&gt; referenced across repositories with ARM64 fixes being backported from upstream to &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; and register allocation bugs being resolved in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3574"&gt;issue #3574&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/44" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Uniqueness mode behavior&lt;/strong&gt;&lt;/a&gt; discussion initiated by &lt;a href="https://github.com/onsah"&gt;Onur Şahin&lt;/a&gt; reporting unexpected compiler behavior with unique annotations, with &lt;a href="https://github.com/matthewelse"&gt;Matthew Else&lt;/a&gt; providing troubleshooting assistance and example implementations (&lt;a href="https://github.com/janestreet/opam-repository/issues/44"&gt;janestreet/opam-repository#44&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/43" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Borrowing implementation status&lt;/strong&gt;&lt;/a&gt; inquiry by &lt;a href="https://github.com/onsah"&gt;Onur Şahin&lt;/a&gt; about Rust-style borrowing operators, with &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt; explaining current implementation status and timeline (&lt;a href="https://github.com/janestreet/opam-repository/issues/43"&gt;janestreet/opam-repository#43&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/42" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Local switch creation issue&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; regarding dune-project compatibility problems, with technical analysis from &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; on dune build flags (&lt;a href="https://github.com/janestreet/opam-repository/issues/42"&gt;janestreet/opam-repository#42&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Bytecode compilation modernization&lt;/strong&gt; with introduction of Blambda IR in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; representing significant architectural improvement in the compilation pipeline&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 optimization focus&lt;/strong&gt; with multiple commits across repositories targeting performance improvements and cross-platform compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced debugging capabilities&lt;/strong&gt; through new command-line flags like &lt;code&gt;-dblambda&lt;/code&gt; and improved intermediate representation dumping in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime system hardening&lt;/strong&gt; with better memory management, signal handling, and sanitizer integration across the toolchain&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Experimental feature adoption&lt;/strong&gt; showing active community testing of uniqueness mode and ownership features in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;, revealing implementation gaps between tooling and compiler behavior&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major bytecode compilation improvements in oxcaml/oxcaml with ARM64 fixes across multiple repositories</summary><published>2025-05-11T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-18</id><title>Week 18, 2025: Major oxcaml compiler improvements with SIMD documentation and Flambda2 enhancements, while Jane Street ecosystem faced OCaml 5.2.0+flambda2 compatibility issues</title><updated>2025-05-04T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;SIMD documentation&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with comprehensive guide covering 128-bit vector types, intrinsics up to SSE4.2, and C ABI support (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d95e9c9650b2f8dfa9f7ce6f934bcf28e74d3439"&gt;d95e9c9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Small-numbers documentation&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; covering &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, and &lt;code&gt;int8&lt;/code&gt; types with detailed representation and C ABI sections (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d95e9c9650b2f8dfa9f7ce6f934bcf28e74d3439"&gt;d95e9c9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CFG instruction ID sequence tracking&lt;/strong&gt; implemented in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; to store instruction sequences in control flow graphs (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b04e920eefd029647e127fb66dddccb38b5bd7c8"&gt;b04e920&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Replay history mechanism&lt;/strong&gt; for Flambda2 in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; to match names between downwards traversals improving optimization consistency (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e8058d535d598c67e20caeb5c5ea80a5cda454d7"&gt;e8058d5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Jane Street package ecosystem release&lt;/strong&gt; v0.18~preview.130.26+1192 in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with new packages basement, command&lt;em&gt;nodejs, and oxcaml&lt;/em&gt;effect (&lt;a href="https://github.com/janestreet/opam-repository/commit/fab2717b1806f269a2b538e8b489fc4a797b4139"&gt;fab2717b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;VEX prefix optimization&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; removing duplicate VEX prefixes in x86 binary emission (&lt;a href="https://github.com/oxcaml/oxcaml/commit/83590ebb9e33fabe8d5892152d61a31709069007"&gt;83590eb&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; repository with significant compiler optimization work and documentation improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Jane Street ecosystem&lt;/strong&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; experienced compatibility challenges with OCaml 5.2.0+flambda2 affecting multiple packages&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories&lt;/strong&gt; (&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;) showed no activity during this week&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development focus&lt;/strong&gt; on advanced compiler features including SIMD support, CFG improvements, and Flambda2 optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Community engagement&lt;/strong&gt; with multiple contributors reporting issues and proposing solutions for compiler and package compatibility problems&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;OCaml 5.2.0+flambda2 compatibility&lt;/strong&gt; challenges affecting both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; development and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; package compilation&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 optimization features&lt;/strong&gt; developed in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; directly supporting the Jane Street ecosystem packages that depend on compiler optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package ecosystem coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler improvements and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; package releases to maintain compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation alignment&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; SIMD and small-numbers guides supporting features used across the broader OCaml ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Pattern-matching equality performance&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3914"&gt;oxcaml/oxcaml#3914&lt;/a&gt; with &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; reporting slow compilation for variant equality and community providing workaround patterns using discriminant functions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3956" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime timing hooks&lt;/strong&gt;&lt;/a&gt; issue raised by &lt;a href="https://github.com/NickBarnes"&gt;Nick Barnes&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3956"&gt;oxcaml/oxcaml#3956&lt;/a&gt; highlighting multi-core problems and proposing solutions for hook mechanisms&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/42" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Dune project discovery behavior&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/janestreet/opam-repository/issues/42"&gt;janestreet/opam-repository#42&lt;/a&gt; between &lt;a href="https://github.com/dkalinichenko-js"&gt;@dkalinichenko-js&lt;/a&gt; and &lt;a href="https://github.com/smuenzel"&gt;Stefan Muenzel&lt;/a&gt; regarding upward search behavior and potential sandboxing solutions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/40" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler compatibility solutions&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/janestreet/opam-repository/issues/40"&gt;janestreet/opam-repository#40&lt;/a&gt; with &lt;a href="https://github.com/dkalinichenko-js"&gt;@dkalinichenko-js&lt;/a&gt; providing temporary fixes for ARM64 intrinsics issues&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;OCaml 5.2.0+flambda2 adoption challenges&lt;/strong&gt; emerging as a consistent theme across &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with multiple packages requiring updates for new compiler features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler optimization infrastructure improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with emphasis on CFG instruction tracking and Flambda2 traversal mechanisms&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 architecture support gaps&lt;/strong&gt; becoming apparent with intrinsics-related packages in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; needing specific attention for cross-platform compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation enhancement focus&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with comprehensive guides for advanced features like SIMD and small-numbers supporting broader ecosystem adoption&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml compiler improvements with SIMD documentation and Flambda2 enhancements, while Jane Street ecosystem faced OCaml 5.2.0+flambda2 compatibility issues</summary><published>2025-05-04T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-17</id><title>Week 17, 2025: Major oxcaml compiler backend improvements including register allocation fixes, DLS API changes, and comprehensive kind system documentation</title><updated>2025-04-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;New &lt;code&gt;--regalloc-linscan-threshold&lt;/code&gt; compiler flag for configuring register allocation behavior (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4b42aa3a1bffc28a2cc55ca6887f47dfe33578f0"&gt;4b42aa3&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/79633d2b5c7e72a7e66392088217e81d1ae8e3a3"&gt;79633d2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enhanced &lt;strong class="achievement"&gt;DLS.access&lt;/strong&gt; API now requires &lt;code&gt;unyielding once&lt;/code&gt; modalities for improved thread safety (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b768626b951cd3a8769dd014b3e1d3c6d19ef865"&gt;b768626&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/8ccf97426c60a54c6f55e42e44a1119ea3407fb5"&gt;8ccf974&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ARM backend now supports &lt;strong class="achievement"&gt;new DWARF directives&lt;/strong&gt; including CFI register management (&lt;a href="https://github.com/oxcaml/oxcaml/commit/35b86850f07b6b2d4a94c03e2077e1e8c92bfe31"&gt;35b8685&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved &lt;strong class="achievement"&gt;stack offset validation&lt;/strong&gt; in CFG invariants with better error checking (&lt;a href="https://github.com/oxcaml/oxcaml/commit/f3124afb61a17c046aa4ef2d1e0be21cc7d96f5e"&gt;f3124af&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/0e191f3e27889f4704064f2040a5e59e7c166026"&gt;0e191f3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Comprehensive &lt;strong class="achievement"&gt;kind system documentation&lt;/strong&gt; including syntax guide, type computation rules, and non-modal bounds (&lt;a href="https://github.com/oxcaml/oxcaml/commit/689b66ce5466c88a68d3298673e2f5df82dd98ab"&gt;689b66c&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3912" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;oxcaml/oxcaml&lt;/strong&gt;&lt;/a&gt; dominated group activity with 24 commits addressing backend optimization, register allocation fixes, and compiler infrastructure improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3912"&gt;oxcaml/oxcaml#3912&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3913"&gt;oxcaml/oxcaml#3913&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/pull/143" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;oxcaml/merlin&lt;/strong&gt;&lt;/a&gt; had limited experimental activity with &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; opening a granular marshal PR that was later closed (&lt;a href="https://github.com/oxcaml/merlin/pull/143"&gt;oxcaml/merlin#143&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;oxcaml/opam-repository&lt;/strong&gt;, &lt;strong class="achievement"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/strong&gt;, and &lt;strong class="achievement"&gt;janestreet/opam-repository&lt;/strong&gt; had no activity during this week&lt;/li&gt;
&lt;li&gt;Single performance issue reported by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; regarding equality compilation inefficiencies (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914"&gt;oxcaml/oxcaml#3914&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/pull/143" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Granular marshal&lt;/strong&gt;&lt;/a&gt; functionality being explored in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; working on downstream integration (&lt;a href="https://github.com/oxcaml/merlin/pull/143"&gt;oxcaml/merlin#143&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler infrastructure&lt;/strong&gt; improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; that may impact merlin's compilation analysis capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;DLS API&lt;/strong&gt; changes in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; requiring stricter modalities could affect downstream tools and libraries (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b768626b951cd3a8769dd014b3e1d3c6d19ef865"&gt;b768626&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Equality compilation performance&lt;/strong&gt;&lt;/a&gt; issue reported by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; showing pattern-matched equality functions generate inefficient jump table assembly instead of direct comparisons (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914"&gt;oxcaml/oxcaml#3914&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/pull/143" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Granular marshal conflicts&lt;/strong&gt;&lt;/a&gt; discussion around &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt;'s experimental PR highlighting challenges in downstream integration (&lt;a href="https://github.com/oxcaml/merlin/pull/143"&gt;oxcaml/merlin#143&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Backend reliability&lt;/strong&gt; emphasis with multiple register allocation fixes and CFG invariant improvements showing focus on compilation robustness (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4b42aa3a1bffc28a2cc55ca6887f47dfe33578f0"&gt;4b42aa3&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/f3124afb61a17c046aa4ef2d1e0be21cc7d96f5e"&gt;f3124af&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Thread safety&lt;/strong&gt; enhancements through stricter DLS API modalities and continuation parameter management improvements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b768626b951cd3a8769dd014b3e1d3c6d19ef865"&gt;b768626&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation investment&lt;/strong&gt; in advanced features with extensive kind system documentation making complex type theory more accessible (&lt;a href="https://github.com/oxcaml/oxcaml/commit/689b66ce5466c88a68d3298673e2f5df82dd98ab"&gt;689b66c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Architecture support&lt;/strong&gt; expansion with ARM-specific improvements and DWARF debugging enhancements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/35b86850f07b6b2d4a94c03e2077e1e8c92bfe31"&gt;35b8685&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance optimization&lt;/strong&gt;&lt;/a&gt; focus through register allocation thresholds and equality compilation improvements addressing compilation efficiency (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914"&gt;oxcaml/oxcaml#3914&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml compiler backend improvements including register allocation fixes, DLS API changes, and comprehensive kind system documentation</summary><published>2025-04-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-16</id><title>Week 16, 2025: High-activity week with 36 total PRs: intensive backend modernization in oxcaml/oxcaml and critical Merlin bug fix</title><updated>2025-04-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3853" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Auto-generated SSE instructions&lt;/strong&gt;&lt;/a&gt; with comprehensive simdgen tool for AMD64 platforms including 3,595 instruction definitions and automated code generation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3853"&gt;oxcaml/oxcaml#3853&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced contention mode support&lt;/strong&gt; in Obj module functions including &lt;code&gt;is_block&lt;/code&gt;, &lt;code&gt;is_int&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, and &lt;code&gt;Extension_constructor.of_val&lt;/code&gt; for better memory safety (&lt;a href="https://github.com/oxcaml/oxcaml/commit/9f3ded95b9bd743378e2f9bda56f88ba17091839"&gt;oxcaml/oxcaml commit 9f3ded95&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3857" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fixed-size assembly directives&lt;/strong&gt;&lt;/a&gt; replacing instruction-set specific ones for more portable backend code generation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3857"&gt;oxcaml/oxcaml#3857&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3891" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Critical edges support&lt;/strong&gt;&lt;/a&gt; in Control Flow Graph for improved optimization passes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3891"&gt;oxcaml/oxcaml#3891&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CMM &lt;code&gt;Ctrywith&lt;/code&gt; merged with &lt;code&gt;Ccatch&lt;/code&gt;&lt;/strong&gt; simplifying exception handling in intermediate representation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3743"&gt;oxcaml/oxcaml#3743&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/142" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fixed jump-to-definition resolution&lt;/strong&gt;&lt;/a&gt; when compilation unit names match current file names by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt;, resolving assertion failures and incorrect symbol resolution (&lt;a href="https://github.com/oxcaml/merlin/issues/142"&gt;oxcaml/merlin#142&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3853" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;oxcaml/oxcaml&lt;/strong&gt;&lt;/a&gt; delivered intensive backend modernization with 35 merged PRs focusing on register allocation refactoring, SIMD instruction generation, and compiler infrastructure improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3853"&gt;oxcaml/oxcaml#3853&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3780"&gt;oxcaml/oxcaml#3780&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/142" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;oxcaml/merlin&lt;/strong&gt;&lt;/a&gt; fixed critical jump-to-definition bug affecting files with matching compilation unit names (&lt;a href="https://github.com/oxcaml/merlin/issues/142"&gt;oxcaml/merlin#142&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;oxcaml/opam-repository&lt;/strong&gt;, &lt;strong class="achievement"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/strong&gt;, and &lt;strong class="achievement"&gt;janestreet/opam-repository&lt;/strong&gt; had no recorded activity during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/926" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Match-in-match compilation&lt;/strong&gt;&lt;/a&gt; ongoing discussions between &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; and team regarding optimization strategies (&lt;a href="https://github.com/oxcaml/oxcaml/issues/926"&gt;oxcaml/oxcaml#926&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3718" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Array indexing optimization issues&lt;/strong&gt;&lt;/a&gt; identified by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; requiring comprehensive bind function auditing across the compiler (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3718"&gt;oxcaml/oxcaml#3718&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3888" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance concerns&lt;/strong&gt;&lt;/a&gt; raised by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; regarding unboxed int64 conversion performance (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3888"&gt;oxcaml/oxcaml#3888&lt;/a&gt;) and indexing bugs (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3889"&gt;oxcaml/oxcaml#3889&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Backend infrastructure modernization&lt;/strong&gt; with systematic refactoring of register allocation, instruction generation, and assembly emission across the oxcaml/oxcaml compiler&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Code quality standardization&lt;/strong&gt; through systematic warning enablement and formatting improvements across all backend modules&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Architecture-specific optimizations&lt;/strong&gt; with separate targeted improvements for AMD64 and ARM64 platforms&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer tooling improvements&lt;/strong&gt; including Merlin enhancements for better IDE integration and debugging capabilities&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>High-activity week with 36 total PRs: intensive backend modernization in oxcaml/oxcaml and critical Merlin bug fix</summary><published>2025-04-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-15</id><title>Week 15, 2025: Major backend refactoring in oxcaml/oxcaml with register allocation improvements and CFG optimizations, plus Merlin compiler updates</title><updated>2025-04-13T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;CFG simplification pass&lt;/strong&gt; consolidates block merging and dead code elimination into unified module in &lt;a href="https://github.com/oxcaml/oxcaml/commit/3398e1e9a47039b600bfc164dd92d17263b7dbc3"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Expanded ARM64 assembly DSL&lt;/strong&gt; with new instruction support, operand types, and register helpers for better code generation in &lt;a href="https://github.com/oxcaml/oxcaml/commit/14e6d4d4d5ad6f56a784471e6f13ce77e4fd6fc4"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;N-way join algorithm&lt;/strong&gt; implementation in Flambda2 types system for improved type inference performance in &lt;a href="https://github.com/oxcaml/oxcaml/commit/a29501027d5be434ebb6752346b43700b2eb3059"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Register allocation refactoring&lt;/strong&gt; removing IRC-specific fields from Reg.t and introducing Substitution module in &lt;a href="https://github.com/oxcaml/oxcaml/commit/e5ea115f3190438f38d0303c8bcf688457e31f36"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Hugepage support restoration&lt;/strong&gt; via OCAMLRUNPARAM=H=1 environment variable in &lt;a href="https://github.com/oxcaml/oxcaml/commit/00efa7cc0cdc1d919cce8449f243866c60493349"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Mode syntax improvements&lt;/strong&gt; with enhanced documentation and statefulness/visibility axis support in &lt;a href="https://github.com/oxcaml/oxcaml/commit/cb54980f013f958427184e9d34da74b126e99d73"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/138" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Menhir version upgrade&lt;/strong&gt;&lt;/a&gt; from 20210419 to 20231231 with CI validation in &lt;a href="https://github.com/oxcaml/merlin/issues/138"&gt;oxcaml/merlin#138&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced mode crossing APIs&lt;/strong&gt; in type system with new functions for crossing right/left modes and allocation modes in &lt;a href="https://github.com/oxcaml/merlin/commit/26c0f76436597e8af9901516ff18ce73e7364593"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3835" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;oxcaml/oxcaml&lt;/strong&gt;&lt;/a&gt; dominated group activity with extensive backend modernization including register allocation refactoring (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3835"&gt;oxcaml/oxcaml#3835&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3836"&gt;oxcaml/oxcaml#3836&lt;/a&gt;), ARM64 improvements, and CFG optimization work&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/141" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;oxcaml/merlin&lt;/strong&gt;&lt;/a&gt; contributed compiler synchronization work with OCaml 5.2.0minus-9 updates (&lt;a href="https://github.com/oxcaml/merlin/issues/141"&gt;oxcaml/merlin#141&lt;/a&gt;) and build infrastructure improvements (&lt;a href="https://github.com/oxcaml/merlin/issues/138"&gt;oxcaml/merlin#138&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories&lt;/strong&gt; (oxcaml/opam-repository, oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml, janestreet/opam-repository) showed no activity during this week&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Focus areas&lt;/strong&gt; included backend architecture consolidation, ARM64 code generation, and development tooling reliability&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/141" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml compiler synchronization&lt;/strong&gt;&lt;/a&gt; between oxcaml/oxcaml and oxcaml/merlin with both repositories working on OCaml 5.2.0minus-9 compatibility and mode system enhancements (&lt;a href="https://github.com/oxcaml/merlin/issues/141"&gt;oxcaml/merlin#141&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3774" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode crossing APIs&lt;/strong&gt;&lt;/a&gt; development spanning both repositories with type system improvements for allocation modes and jkind crossing support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3774"&gt;oxcaml/oxcaml#3774&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Build tooling coordination&lt;/strong&gt; with similar CI and dependency management approaches, including version validation strategies that could be shared across repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Backend consolidation pattern&lt;/strong&gt; with multiple modules being merged and simplified for better maintainability, including Operation/Simple_operation merger and CFG pass unification in oxcaml/oxcaml&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3813" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 optimization focus&lt;/strong&gt;&lt;/a&gt; with extensive improvements to assembly generation, instruction DSL, and architecture-specific optimizations reflecting growing ARM64 adoption (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3813"&gt;oxcaml/oxcaml#3813&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3827"&gt;oxcaml/oxcaml#3827&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3835" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Register allocation modernization&lt;/strong&gt;&lt;/a&gt; systematically removing legacy IRC-specific code and introducing cleaner abstractions for multiple allocation strategies (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3835"&gt;oxcaml/oxcaml#3835&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3538" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system performance improvements&lt;/strong&gt;&lt;/a&gt; with new algorithms like n-way join and enhanced meet operations addressing scalability concerns in large codebases (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3538"&gt;oxcaml/oxcaml#3538&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/138" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Build reliability emphasis&lt;/strong&gt;&lt;/a&gt; with automated validation and version checking to prevent compilation issues across development environments (&lt;a href="https://github.com/oxcaml/merlin/issues/138"&gt;oxcaml/merlin#138&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major backend refactoring in oxcaml/oxcaml with register allocation improvements and CFG optimizations, plus Merlin compiler updates</summary><published>2025-04-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-14</id><title>Week 14, 2025: Major compiler backend refactoring in oxcaml/oxcaml with new instruction selection code and type system advances</title><updated>2025-04-06T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Compiler comparison tool&lt;/strong&gt; added for analyzing differences between compiler versions (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b031c8f10550cafb226e23cd4d9db7296df846ec"&gt;oxcaml/oxcaml@b031c8f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Implicit unboxed records&lt;/strong&gt; feature implementation with comprehensive test suite (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b6c8826b75787cc91f4442a01c30a55cdd5a4699"&gt;oxcaml/oxcaml@b6c8826&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CFG invariants pass&lt;/strong&gt; added for compiler verification and validation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4d7a6a9acd283c5cfdc5cb75d9f09e3576afba77"&gt;oxcaml/oxcaml@4d7a6a9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Modal kinds system&lt;/strong&gt; enhanced with 'mod everything' support for improved type safety (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4e3fe417a7ac1b5b2fe979c7f9ddcbdf436c8eb7"&gt;oxcaml/oxcaml@4e3fe41&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM DSL extension&lt;/strong&gt; for more efficient instruction emission (&lt;a href="https://github.com/oxcaml/oxcaml/commit/cf170a5a4073a4693c1a64445840b373f43ce70c"&gt;oxcaml/oxcaml@cf170a5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Local yielding inference&lt;/strong&gt; where &lt;code&gt;local&lt;/code&gt; implies &lt;code&gt;yielding&lt;/code&gt; in the type system (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c881b343cfc7cc08c01b4a7343db6aac4a8a617d"&gt;oxcaml/oxcaml@c881b34&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Array blit optimization&lt;/strong&gt; using &lt;code&gt;caml_array_blit&lt;/code&gt; for better performance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3dc48bec619ce17af8911f25042087fce4de8dee"&gt;oxcaml/oxcaml@3dc48be&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Atomic refcount system&lt;/strong&gt; improvements with new header and cleaner implementation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/f3c3139b50a2e725db56576c2f1ceace7678ec81"&gt;oxcaml/oxcaml@f3c3139&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Concentrated development activity&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 31 commits focusing on compiler backend improvements and type system advances&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No recorded activity&lt;/strong&gt; in the other four repositories during this week period&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Major architectural changes&lt;/strong&gt; affecting both AMD64 and ARM64 compilation targets with extensive instruction selection refactoring&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type safety enhancements&lt;/strong&gt; through modal kinds system improvements and implicit unboxed records support&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Backend modernization&lt;/strong&gt; drive with systematic removal of legacy code patterns and object-oriented designs in favor of functional approaches in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system enhancement&lt;/strong&gt; trend toward more expressive layout and modal systems for better compile-time guarantees through the modal kinds system (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4e3fe417a7ac1b5b2fe979c7f9ddcbdf436c8eb7"&gt;oxcaml/oxcaml@4e3fe41&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance optimization&lt;/strong&gt; focus on instruction selection, register allocation, and runtime efficiency improvements across multiple commits&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Code organization&lt;/strong&gt; improvements with better separation of target-specific and generic compiler components for maintainability&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler backend refactoring in oxcaml/oxcaml with new instruction selection code and type system advances</summary><published>2025-04-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-13</id><title>Week 13, 2025: Major development focus on oxcaml compiler with 35 commits introducing portable continuations and ARM64 enhancements, plus Merlin OCaml integration update</title><updated>2025-09-29T06:51:27.727776+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3541" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Portable continuations&lt;/strong&gt;&lt;/a&gt; implementation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; enabling cross-platform effect handling (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3541"&gt;oxcaml/oxcaml#3541&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3699" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Externals extraction tool&lt;/strong&gt;&lt;/a&gt; for analyzing external function declarations from .cmt files with command-line interface (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3699"&gt;oxcaml/oxcaml#3699&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3747" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 SIMD intrinsics&lt;/strong&gt;&lt;/a&gt; expansion with new float32 and vector instructions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3747"&gt;oxcaml/oxcaml#3747&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3750"&gt;oxcaml/oxcaml#3750&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3710"&gt;oxcaml/oxcaml#3710&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3704"&gt;oxcaml/oxcaml#3704&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3736" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;or_null type&lt;/strong&gt;&lt;/a&gt; moved to stable library providing nullable value support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3736"&gt;oxcaml/oxcaml#3736&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3636"&gt;oxcaml/oxcaml#3636&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/137" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Mode crossing capabilities&lt;/strong&gt;&lt;/a&gt; added to &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with new &lt;code&gt;Crossing&lt;/code&gt; module (&lt;a href="https://github.com/oxcaml/merlin/issues/137"&gt;oxcaml/merlin#137&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/137" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced jkind modal bounds&lt;/strong&gt;&lt;/a&gt; with &lt;code&gt;Mod_bounds&lt;/code&gt; module in Merlin (&lt;a href="https://github.com/oxcaml/merlin/issues/137"&gt;oxcaml/merlin#137&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary development activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 35 commits introducing major language features including portable continuations and ARM64 optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Coordinated version updates&lt;/strong&gt; between oxcaml compiler and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; maintaining compatibility through OCaml 5.2.0minus-9 integration&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 platform advancement&lt;/strong&gt; with multiple SIMD instruction enhancements and float32 operation support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Effect system maturation&lt;/strong&gt; through portable continuations implementation and async exception handling improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories inactive&lt;/strong&gt; during this period: &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3753" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with magic number updates to 559 series and OCaml 5.2.0minus-9 integration (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3753"&gt;oxcaml/oxcaml#3753&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/137"&gt;oxcaml/merlin#137&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system coordination&lt;/strong&gt; with jkind modal bounds and mode crossing features developed in oxcaml compiler being integrated into Merlin for editor support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream compatibility maintenance&lt;/strong&gt; ensuring Merlin tracks flambda-backend changes while oxcaml continues independent development&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Shared contributor effort&lt;/strong&gt; with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; handling Merlin integration while core oxcaml team focuses on language features&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 platform prioritization&lt;/strong&gt; with multiple contributors focusing on SIMD instruction support and float32 operations, establishing ARM64 as a first-class compilation target&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Effect system stabilization&lt;/strong&gt; through portable continuations implementation and async exception integration, moving towards production-ready effect handling&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Mode system evolution&lt;/strong&gt; with enhanced crossing capabilities and jkind modal bounds indicating advanced type system features for memory layout control&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Tool ecosystem integration&lt;/strong&gt; pattern where major compiler updates require coordinated tooling updates across the oxcaml ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance-focused development&lt;/strong&gt; with runtime optimizations, GC improvements, and backend efficiency gains across multiple subsystems&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major development focus on oxcaml compiler with 35 commits introducing portable continuations and ARM64 enhancements, plus Merlin OCaml integration update</summary></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-12</id><title>Week 12, 2025: Major Atomic module API improvements, ARM64 SIMD enhancements, and GC parameter optimizations across oxcaml/oxcaml</title><updated>2025-03-23T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Atomic module redesign&lt;/strong&gt; with simplified type system using &lt;code&gt;mutable_data with 'a&lt;/code&gt; instead of complex mode annotations, removing unsafe multidomain alerts and introducing &lt;code&gt;Atomic.Contended&lt;/code&gt; submodule for cross-domain operations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b747bffb579918d69f738f410b01a5517199617f"&gt;oxcaml/oxcaml@b747bff&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 Float32 support&lt;/strong&gt; implementation enabling 32-bit floating point operations in the ARM64 backend (&lt;a href="https://github.com/oxcaml/oxcaml/commit/31f4cba04b610b54e7ef5aca3b2f0e971e08c638"&gt;oxcaml/oxcaml@31f4cba&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 runtime SIMD intrinsics&lt;/strong&gt; added for vector operations with comprehensive instruction support (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4f6ebc755ec17bcb4ab12221b6ef96b0f21407ee"&gt;oxcaml/oxcaml@4f6ebc7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 SIMD DSL&lt;/strong&gt; providing structured interface for ARM64 vector operations with type-safe register names and instruction generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3bfc7a86bc18d8cab8e86bb83c0689be1485e3ba"&gt;oxcaml/oxcaml@3bfc7a8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;GC space overhead optimization&lt;/strong&gt; reducing default from 160% to 80% for improved memory efficiency (&lt;a href="https://github.com/oxcaml/oxcaml/commit/f7c39c10bb610328315976273aa8df99989ef399"&gt;oxcaml/oxcaml@f7c39c1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced GC runtime events&lt;/strong&gt; for tracking major heap allocation words, dependent words, work budgets, and pacing computations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/9772a2cae48137605ba48c0e94b801d243b4d105"&gt;oxcaml/oxcaml@9772a2c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Minor heap default size increase&lt;/strong&gt; from 256k to 1M words with updated documentation and runtime behavior (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d459599e47b2730d332aac9a24f24f75b33806ad"&gt;oxcaml/oxcaml@d459599&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Atomic counter consolidation&lt;/strong&gt; merging inc/dec functions for consistent usage across the runtime (&lt;a href="https://github.com/oxcaml/oxcaml/commit/f7e9aca0eec12c091d3f0fa11e1090d944bede3f"&gt;oxcaml/oxcaml@f7e9aca&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CFG noalloc extcalls optimization&lt;/strong&gt; treating no-allocation external calls as non-raising for better code generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/88a8f90e78a182562129b93bb761fa0eb4d5c8d7"&gt;oxcaml/oxcaml@88a8f90&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;GC parameter caml&lt;em&gt;major&lt;/em&gt;heap_increment&lt;/strong&gt; resurrection with updated semantics for runtime5 (&lt;a href="https://github.com/oxcaml/oxcaml/commit/30c36af53be640820f40934014d6d12ad7933a64"&gt;oxcaml/oxcaml@30c36af&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;oxcaml/oxcaml&lt;/strong&gt; dominated activity with 27 commits focused on ARM64 backend improvements, Atomic module redesign, and GC optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Other repositories&lt;/strong&gt; (oxcaml/opam-repository, oxcaml/merlin, oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml, janestreet/opam-repository) showed no activity during this period&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Core development&lt;/strong&gt; concentrated on performance optimization and platform-specific enhancements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 ecosystem maturation&lt;/strong&gt; with comprehensive SIMD support, Float32 implementation, and modern DSL infrastructure indicating platform-specific optimization focus in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory management optimization&lt;/strong&gt; through GC parameter tuning, space overhead reduction, and enhanced runtime events suggesting performance-oriented development cycle&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system evolution&lt;/strong&gt; via mode crossing, atomic interface simplification, and kind checking improvements showing continued language feature development&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Backend modernization&lt;/strong&gt; through code cleanup, unused code removal, and improved warning coverage demonstrating maintenance-focused engineering practices&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major Atomic module API improvements, ARM64 SIMD enhancements, and GC parameter optimizations across oxcaml/oxcaml</summary><published>2025-03-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-11</id><title>Week 11, 2025: None</title><updated>2025-03-16T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for oxcaml - Week 11, 2025</summary><published>2025-03-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-10</id><title>Week 10, 2025: Major oxcaml development week with new Effects API, typing system updates, and extensive backend optimization across 25 commits</title><updated>2025-03-09T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Alternative Effects API&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; standard library with comprehensive interface for handlers, continuations, and effect operations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c00f9028b3fbdd690fce7f5f6ad02ad82b7fa158"&gt;c00f9028b3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Automatic record field reordering&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; to satisfy mixed block restrictions, improving memory layout compliance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/0c7e618ede64a624c550f8ad3f74d9c7ac5655b1"&gt;0c7e618ede&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Removed &lt;code&gt;-infer-with-bounds&lt;/code&gt; flag&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, defaulting to &lt;code&gt;true&lt;/code&gt; for improved kind inference behavior (&lt;a href="https://github.com/oxcaml/oxcaml/commit/71b0a9efac23f0738c5bad22a27a5a433ebfb427"&gt;71b0a9efac&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Shape UIDs for parameter modules&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; enhancing module system functionality (&lt;a href="https://github.com/oxcaml/oxcaml/commit/1266d89f74dd124067547a30c2203a4462a98710"&gt;1266d89f74&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced comparison specialization&lt;/strong&gt; for &lt;code&gt;immediate_or_null&lt;/code&gt; types in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; improving runtime performance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/dc108ccc92da9f9ded43ff047d8dc27a42e2079f"&gt;dc108ccc92&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/136" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Typing system enhancements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with improved jkind and mode analysis including new &lt;code&gt;Sub_failure_reason&lt;/code&gt; and &lt;code&gt;Sub_result&lt;/code&gt; modules for better type checking (&lt;a href="https://github.com/oxcaml/merlin/issues/136"&gt;oxcaml/merlin#136&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/136" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Magic number updates&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; from 557 to 558 across all binary formats (cmi, ast, cmt, cms, index) indicating breaking changes in the compiler interface (&lt;a href="https://github.com/oxcaml/merlin/issues/136"&gt;oxcaml/merlin#136&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major development activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 25 commits spanning runtime, typing, and backend systems&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream synchronization&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with comprehensive OCaml flambda merge affecting core typing and parsing systems&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Repository coordination&lt;/strong&gt; evident through synchronized magic number updates and typing system changes across both active repositories&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, or &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Synchronized typing system updates&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with coordinated magic number bumps and jkind improvements ensuring compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;OCaml flambda integration&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; aligning with ongoing effects and advanced type system work in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/136" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Magic number coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; bumping to OCaml 5.2.0minus-8 compatibility (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3e86fb7833d1f2d375fc33d9a4e5099815b048ba"&gt;3e86fb7833&lt;/a&gt;) and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; updating from 557 to 558 across binary formats (&lt;a href="https://github.com/oxcaml/merlin/issues/136"&gt;oxcaml/merlin#136&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/926" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Match-in-match optimization&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/oxcaml/issues/926"&gt;oxcaml/oxcaml#926&lt;/a&gt; with detailed implementation roadmap by &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; covering continuation specialization, heuristics, and partitioning algorithm extensions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2188" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Peephole optimization engine&lt;/strong&gt;&lt;/a&gt; proposal in &lt;a href="https://github.com/oxcaml/oxcaml/issues/2188"&gt;oxcaml/oxcaml#2188&lt;/a&gt; by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; for implementing generic rewrite rules in Flambda2, including specific optimization examples like untag(tag x) and comparison operator transformations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/136" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Merge review process&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/136"&gt;oxcaml/merlin#136&lt;/a&gt; with &lt;a href="https://github.com/glittershark"&gt;Aspen Smith&lt;/a&gt; providing feedback on missing parser tokens (GREATERDOT, DOTLESS, DOTTILDE) during the comprehensive upstream integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Systematic backend optimization&lt;/strong&gt; with coordinated effort to eliminate polymorphic comparisons across all &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; backend modules, demonstrating commitment to performance and code quality improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Effects system maturation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with the addition of alternative API alongside existing effects implementation, showing evolution toward production-ready effects support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository synchronization&lt;/strong&gt; with coordinated typing system updates, magic number bumps, and upstream merges ensuring compatibility across the oxcaml ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory management refinements&lt;/strong&gt; including GC pacing policy experiments and root safety improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, reflecting focus on runtime efficiency&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system advancement&lt;/strong&gt; through automatic field reordering, shape UIDs, and improved kind inference in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, with corresponding jkind and mode analysis enhancements in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml development week with new Effects API, typing system updates, and extensive backend optimization across 25 commits</summary><published>2025-03-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-9</id><title>Week 9, 2025: Major compiler backend improvements in oxcaml/oxcaml with instruction ID abstraction and GC fixes, plus version updates in oxcaml/merlin</title><updated>2025-03-02T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Abstract instruction identifiers&lt;/strong&gt; introduced in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; through new InstructionId module providing type-safe instruction tracking in the compiler backend (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c40a1239f432dab5add9ff632ffd6b808b7d3859"&gt;c40a1239&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced ocamlobjinfo output&lt;/strong&gt; with improved compilation unit display and import information formatting in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4c486f47373a8ae2ac878721147520bf5305fd80"&gt;4c486f47&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;or&lt;em&gt;null module migrated&lt;/strong&gt; from stdlib&lt;/em&gt;stable to stdlib_beta with complete nullable value API in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/bff2e7d67f96bee38c31c5bc8dbfc88412f3f016"&gt;bff2e7d6&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Stack allocation documentation&lt;/strong&gt; added comprehensive introduction guide explaining local values, regions, and performance benefits in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/04fb351fa796d879f632aa10947639e46a5bdff7"&gt;04fb351f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Jkind bounds system improvements&lt;/strong&gt; with nullability support in value_kind and enhanced type checking in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/5d0cc9e90243aee6cbadf340e63eb4e2ba79a61b"&gt;5d0cc9e9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Major GC work accounting fixes&lt;/strong&gt; addressing allocation tracking and ephemeron handling in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c359907064ec713db14f5e0b33ce910a2772faba"&gt;c3599070&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/b99682c4728d8ff7e8f30866da56e9aa9733bd20"&gt;b99682c4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/135" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Updated magic numbers&lt;/strong&gt;&lt;/a&gt; to support OCaml 5.2.0minus-7 version including CMI, AST, CMT, CMS, and index magic numbers in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/135"&gt;oxcaml/merlin#135&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Layouts language extension&lt;/strong&gt; status changed from Stable to Beta in type environment setup in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/commit/5b315ce617e73e143764ca6ff3676a2245b84875"&gt;5b315ce&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary activity concentrated&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 17 merged PRs focusing on compiler backend improvements, type system enhancements, and developer experience&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/135" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Version synchronization&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; to maintain compatibility with OCaml 5.2.0minus-7 through &lt;a href="https://github.com/oxcaml/merlin/issues/135"&gt;oxcaml/merlin#135&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories inactive&lt;/strong&gt; (&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;) with no recorded commits or pull requests&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Active contributor base&lt;/strong&gt; with &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; leading feature development and &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; handling version compatibility&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/135" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Version alignment&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin/issues/135"&gt;oxcaml/merlin#135&lt;/a&gt; updating magic numbers to support OCaml 5.2.0minus-7 compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Language extension coordination&lt;/strong&gt; with Layouts extension status change from Stable to Beta in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; aligning with ongoing type system improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Standard library evolution&lt;/strong&gt; with or&lt;em&gt;null module migration from stdlib&lt;/em&gt;stable to stdlib_beta in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; indicating API stabilization progress that may affect downstream tooling&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Compiler backend modernization&lt;/strong&gt; with abstract instruction identifiers and improved register allocation validation frameworks in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system advancement&lt;/strong&gt; through jkind bounds improvements, nullability support, and type-directed disambiguation features in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer experience enhancement&lt;/strong&gt; via comprehensive stack allocation documentation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and improved debugging tools like enhanced ocamlobjinfo output&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Standard library evolution&lt;/strong&gt; with or_null module migration to beta status in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; indicating API stabilization progress across the ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Tool synchronization focus&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; maintaining compatibility through version updates and extension status alignment&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler backend improvements in oxcaml/oxcaml with instruction ID abstraction and GC fixes, plus version updates in oxcaml/merlin</summary><published>2025-03-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-8</id><title>Week 8, 2025: Major OCaml compiler development week with 20 commits in oxcaml/oxcaml and significant upstream integration in oxcaml/merlin</title><updated>2025-02-23T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Capsule Key API&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing runtime identification capabilities with Password.Id.t system (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c38d82229060922e4fca1f276316d6dc1a7e37b0"&gt;c38d822&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime events path function&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; allowing retrieval of runtime events file path when collection is active (&lt;a href="https://github.com/oxcaml/oxcaml/commit/5a3ff8f1a4e146525d36484dff4b98883fe71dbf"&gt;5a3ff8f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced jkind bounds tracking&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with remember with bounds in unboxed products without -infer-with-bounds flag (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6afde76b24250dde2f9d35f48df0c64ebbc99e0b"&gt;6afde76&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 5.2.0minus-6 compatibility&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; integrating extensive typing system and zero allocation annotations (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;OCAMLRUNPARAM parameter renaming&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; from i= and j= to avoid runtime4 clashes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6b3a65449c2dc3a5da505e7c0085b35cff24edb0"&gt;6b3a654&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Axis_set bitfield reimplementation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing more efficient representation for axis operations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3da7f8c02585490212b0ffd5896eee528a8341e7"&gt;3da7f8c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/134" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Test server management improvements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; fixing flaky test failures through proper server cleanup (&lt;a href="https://github.com/oxcaml/merlin/issues/134"&gt;oxcaml/merlin#134&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;High-velocity development&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 20 commits covering runtime events, capsule API, Flambda2 enhancements, and memory safety improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Major upstream integration&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with OCaml 5.2.0minus-6 compatibility update affecting 168 files and 17k+ line changes (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime stability focus&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with multiple fixes for runtime events, memory allocation failures, and garbage collection edge cases&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Advanced compiler features&lt;/strong&gt; development including enhanced jkind bounds tracking, Flambda2 region tracking, and zero allocation analysis improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/134" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Test infrastructure hardening&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; addressing flaky test issues for improved CI stability (&lt;a href="https://github.com/oxcaml/merlin/issues/134"&gt;oxcaml/merlin#134&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Upstream compiler synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with merlin integrating extensive changes from the 5.2.0minus-6 compiler version (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Zero allocation analysis&lt;/strong&gt; coordination with enhanced zero&lt;em&gt;alloc&lt;/em&gt;assert fields and improved zero&lt;em&gt;alloc&lt;/em&gt;check typing appearing in both compiler core (&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;) and editor tooling (&lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced typing system features&lt;/strong&gt; propagating from &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; jkind improvements to &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; configuration API updates including new mode interfaces&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Runtime quotations development&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; by &lt;a href="https://github.com/Dreian"&gt;Andrej Ivašković&lt;/a&gt; with ongoing &lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;oxcaml/oxcaml#4395&lt;/a&gt; representing significant language feature that will require merlin integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Runtime stability prioritization&lt;/strong&gt; with multiple fixes in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; addressing runtime events, memory allocation failures, and garbage collection edge cases&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Advanced type system evolution&lt;/strong&gt; including enhanced jkind bounds tracking in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6afde76b24250dde2f9d35f48df0c64ebbc99e0b"&gt;6afde76&lt;/a&gt;) and layout system improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 optimizer maturation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with region tracking (&lt;a href="https://github.com/oxcaml/oxcaml/commit/92d8707a773ac497b9b3a63c6709421667130802"&gt;92d8707&lt;/a&gt;), axis optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/a41be0f458ca4c0a0d5a3b51c9fd2eab1b343966"&gt;a41be0f&lt;/a&gt;), and better compilation pipeline integration&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Memory safety emphasis&lt;/strong&gt; through proper error handling for allocation failures and uninitialized pointer prevention in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/8597ee88fa5196993fca004e5d6854f194524a97"&gt;8597ee8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Test infrastructure hardening&lt;/strong&gt; focus across both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; addressing flaky test issues and improving development workflow reliability&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;API evolution patterns&lt;/strong&gt; in capsule system showing move toward more explicit runtime identification and better concurrency support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c38d82229060922e4fca1f276316d6dc1a7e37b0"&gt;c38d822&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major OCaml compiler development week with 20 commits in oxcaml/oxcaml and significant upstream integration in oxcaml/merlin</summary><published>2025-02-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-7</id><title>Week 7, 2025: Major oxcaml compiler advances with jkind system improvements and merlin tooling enhancements</title><updated>2025-02-16T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;AddressSanitizer support&lt;/strong&gt; for debugging memory issues with comprehensive integration (&lt;a href="https://github.com/oxcaml/oxcaml/commit/2518c1143c07893c2561980353a463941a42cf9f"&gt;oxcaml/oxcaml@2518c11&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Jkind bounds system&lt;/strong&gt; with comprehensive implementation of with-kinds, subsumption, and quality tracking (&lt;a href="https://github.com/oxcaml/oxcaml/commit/288c9ff45fb89bfd1f6693f12f259d2be295b451"&gt;oxcaml/oxcaml@288c9ff&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/3fbad34d2487da881637cc51b0e8ebc387b45c22"&gt;oxcaml/oxcaml@3fbad34&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Parameter flag processing&lt;/strong&gt;&lt;/a&gt; for parameterized modules via &lt;code&gt;-parameter&lt;/code&gt; flag in merlin (&lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/130" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced file location algorithm&lt;/strong&gt;&lt;/a&gt; with path-based disambiguation in merlin (&lt;a href="https://github.com/oxcaml/merlin/issues/130"&gt;oxcaml/merlin#130&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 datalog engine&lt;/strong&gt; implementation for advanced dependency analysis (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4180fecaf365cc53382b85636e36c598a9f46233"&gt;oxcaml/oxcaml@4180fec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;ARM64 intrinsics&lt;/strong&gt; support for &lt;code&gt;clz&lt;/code&gt; and &lt;code&gt;ctz&lt;/code&gt; instructions (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d37cd4269b3eedaf4f99af165ce0b3658bdf30f7"&gt;oxcaml/oxcaml@d37cd42&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime 5 automatic compaction&lt;/strong&gt; feature for improved memory management (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e5b16002d2174d46dc5d15e415738763a4067163"&gt;oxcaml/oxcaml@e5b1600&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Or_null type&lt;/strong&gt; moved to stable stdlib making it production-ready (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e81635c8643ca6d6405a52a689186268df983921"&gt;oxcaml/oxcaml@e81635c&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major compiler development&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 30 commits introducing comprehensive jkind system improvements and runtime enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Tooling advancement&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with parameter flag support for parameterized modules and enhanced file disambiguation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Large-scale updates&lt;/strong&gt;&lt;/a&gt; including OCaml 5.2.0minus-6 compiler integration spanning 167 files (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, or &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler-tooling integration&lt;/strong&gt;&lt;/a&gt; with merlin updates to support oxcaml's parameterized module system through parameter flag processing (&lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml compiler synchronization&lt;/strong&gt;&lt;/a&gt; with large-scale 5.2.0minus-6 update in merlin aligning with oxcaml's compiler development (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream feature backporting&lt;/strong&gt; pattern with merlin incorporating file disambiguation features that enhance development experience across the oxcaml ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Type system evolution&lt;/strong&gt; with extensive work on jkind bounds, modal kinds, and with-kinds providing more precise type checking and optimization opportunities in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Parameterized module ecosystem&lt;/strong&gt;&lt;/a&gt; development with proper tooling support for Jane Street's parameterized libraries through merlin integration (&lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime performance&lt;/strong&gt; improvements including automatic compaction, ARM64 intrinsics, and memory management enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer tooling&lt;/strong&gt; advancement through AddressSanitizer integration and enhanced debugging capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream merlin integration&lt;/strong&gt; pattern with selective backporting of features that enhance development experience&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml compiler advances with jkind system improvements and merlin tooling enhancements</summary><published>2025-02-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-6</id><title>Week 6, 2025: Major oxcaml compiler advancements in zero-alloc infrastructure and unboxed types with cross-repository ARM64 compatibility improvements</title><updated>2025-02-09T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Zero-alloc assertion flag&lt;/strong&gt; &lt;code&gt;-zero-alloc-assert&lt;/code&gt; with support for &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;all_opt&lt;/code&gt;, and &lt;code&gt;default&lt;/code&gt; modes for automatically adding zero-alloc annotations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/cb628b21f4551c747dc65844057d9d500f33cbbb"&gt;oxcaml/oxcaml commit cb628b21&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3134" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced zero-alloc attributes&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;@@@zero_alloc all&lt;/code&gt; and &lt;code&gt;@@@zero_alloc all_opt&lt;/code&gt; support for &lt;code&gt;.mli&lt;/code&gt; files (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3134"&gt;oxcaml/oxcaml#3134&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;New assume&lt;em&gt;unless&lt;/em&gt;opt payload&lt;/strong&gt; for zero-alloc annotations with conditional optimization behavior (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3140"&gt;oxcaml/oxcaml#3140&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Non-value types in unboxed types&lt;/strong&gt;&lt;/a&gt; now allowed, removing previous restrictions on float#, word, bits32/64, vec128 in &lt;code&gt;[@@unboxed]&lt;/code&gt; records and variants (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558"&gt;oxcaml/oxcaml#3558&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3143" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Custom error messages&lt;/strong&gt;&lt;/a&gt; for zero-alloc violations with improved diagnostic information (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3143"&gt;oxcaml/oxcaml#3143&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3228"&gt;oxcaml/oxcaml#3228&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3118" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Directory field in debug info&lt;/strong&gt;&lt;/a&gt; for enhanced debugging information in generated code (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3118"&gt;oxcaml/oxcaml#3118&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/strong&gt; dominated group activity with 17 merged PRs focused on zero-alloc infrastructure expansion and unboxed type system enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/strong&gt; saw 2 new PRs opened by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; for backporting upstream editor integration improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/strong&gt; received 2 PRs from &lt;a href="https://github.com/matthewelse"&gt;Matthew Else&lt;/a&gt; addressing ARM64 build compatibility issues&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/strong&gt; and &lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/strong&gt; had no activity this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/36" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 runtime fix coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/janestreet/opam-repository/issues/36"&gt;janestreet/opam-repository#36&lt;/a&gt; backporting the fix from &lt;a href="https://github.com/oxcaml/oxcaml/issues/3533"&gt;oxcaml/oxcaml#3533&lt;/a&gt; for assembly directive compatibility&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml/merlin/issues/1864" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Upstream synchronization efforts&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; backporting improvements from &lt;a href="https://github.com/ocaml/merlin/issues/1864"&gt;ocaml/merlin#1864&lt;/a&gt; and &lt;a href="https://github.com/ocaml/merlin/issues/1882"&gt;ocaml/merlin#1882&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;async&lt;em&gt;ssl compatibility&lt;/strong&gt; work in &lt;a href="https://github.com/janestreet/opam-repository/issues/37"&gt;janestreet/opam-repository#37&lt;/a&gt; addressing build issues referenced in &lt;a href="https://github.com/janestreet/async_ssl/issues/39"&gt;janestreet/async&lt;/em&gt;ssl#39&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3125" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Zero-allocation optimization infrastructure maturity&lt;/strong&gt;&lt;/a&gt; with comprehensive tooling including command-line controls (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3125"&gt;oxcaml/oxcaml#3125&lt;/a&gt;), custom error messages (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3143"&gt;oxcaml/oxcaml#3143&lt;/a&gt;), and fine-grained attribute support indicating production readiness&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed type system advancement&lt;/strong&gt;&lt;/a&gt; with removal of layout restrictions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558"&gt;oxcaml/oxcaml#3558&lt;/a&gt;) and enhanced documentation showing commitment to high-performance data structures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/36" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 ecosystem support&lt;/strong&gt;&lt;/a&gt; with coordinated fixes across repositories addressing modern hardware compatibility (&lt;a href="https://github.com/janestreet/opam-repository/issues/36"&gt;janestreet/opam-repository#36&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/37"&gt;janestreet/opam-repository#37&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/131" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Editor tooling synchronization&lt;/strong&gt;&lt;/a&gt; with active backporting of upstream improvements to maintain feature parity (&lt;a href="https://github.com/oxcaml/merlin/issues/131"&gt;oxcaml/merlin#131&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/130"&gt;oxcaml/merlin#130&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml compiler advancements in zero-alloc infrastructure and unboxed types with cross-repository ARM64 compatibility improvements</summary><published>2025-02-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-5</id><title>Week 5, 2025: Merlin repository focused on parameterized module support with two PRs merged and one opened</title><updated>2025-02-02T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/129" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Typed hole detection module&lt;/strong&gt;&lt;/a&gt; added to analysis framework with &lt;code&gt;can_be_hole&lt;/code&gt; and &lt;code&gt;is_a_hole&lt;/code&gt; functions for identifying typed holes in OCaml code (&lt;a href="https://github.com/oxcaml/merlin/issues/129"&gt;oxcaml/merlin#129&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/127" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Fixed instance name handling&lt;/strong&gt;&lt;/a&gt; in &lt;code&gt;Persistent_env&lt;/code&gt; by removing unsupported parameter validation that was causing fatal errors (&lt;a href="https://github.com/oxcaml/merlin/issues/127"&gt;oxcaml/merlin#127&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Single repository activity&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; being the only active repository in the group during week 5&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Parameterized module focus&lt;/strong&gt; with two completed PRs and one ongoing PR all related to improving support for parameterized modules&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream synchronization&lt;/strong&gt; efforts to align with ocaml-lsp and reduce maintenance burden through module migration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Testing requirements&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/lukemaurer"&gt;Luke Maurer&lt;/a&gt; about rebasing parameter flag PR for CI tests to pass (&lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/129" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Module purpose clarification&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; about typed_hole module migration and its effect on reducing ocaml-lsp diff (&lt;a href="https://github.com/oxcaml/merlin/issues/129"&gt;oxcaml/merlin#129&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/128" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Parameterized module infrastructure&lt;/strong&gt;&lt;/a&gt; development with &lt;a href="https://github.com/lukemaurer"&gt;Luke Maurer&lt;/a&gt; implementing parameter flag processing and fixing related persistent environment issues (&lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/127"&gt;oxcaml/merlin#127&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/129" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Upstream synchronization efforts&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; migrating modules from ocaml-lsp to reduce maintenance burden and stay aligned with upstream merlin (&lt;a href="https://github.com/oxcaml/merlin/issues/129"&gt;oxcaml/merlin#129&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Merlin repository focused on parameterized module support with two PRs merged and one opened</summary><published>2025-02-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-4</id><title>Week 4, 2025: Major flambda backend integration in oxcaml/merlin bringing unboxed record types and new syntax features</title><updated>2025-01-26T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed record types&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;#{...}&lt;/code&gt; syntax for type definitions, pattern matching, and expressions in &lt;a href="https://github.com/oxcaml/merlin/issues/124"&gt;oxcaml/merlin#124&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Overwrite expressions&lt;/strong&gt;&lt;/a&gt; using &lt;code&gt;overwrite_ exp with exp&lt;/code&gt; syntax for functional updates in &lt;a href="https://github.com/oxcaml/merlin/issues/124"&gt;oxcaml/merlin#124&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Typed holes&lt;/strong&gt;&lt;/a&gt; support with &lt;code&gt;_&lt;/code&gt; expressions and improved hole handling in the AST via &lt;a href="https://github.com/oxcaml/merlin/issues/124"&gt;oxcaml/merlin#124&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed field access&lt;/strong&gt;&lt;/a&gt; syntax using &lt;code&gt;E.#field&lt;/code&gt; for accessing unboxed record fields in &lt;a href="https://github.com/oxcaml/merlin/issues/124"&gt;oxcaml/merlin#124&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Single repository activity&lt;/strong&gt;: Only &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; showed development activity during week 4 of 2025&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Major integration&lt;/strong&gt;: Completed flambda 5.2.0minus-5 backend merge affecting 207 files with new type system features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Language enhancements&lt;/strong&gt;: Added unboxed record types, overwrite expressions, and typed holes support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Parser improvements&lt;/strong&gt;: Fixed reduce/reduce conflicts introduced by the new syntax features&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Advanced type system integration&lt;/strong&gt; with upstream OCaml flambda backend bringing performance-oriented language features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Unboxed types adoption&lt;/strong&gt; representing a shift toward memory-efficient type system features with dedicated syntax support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Parser robustness&lt;/strong&gt; focus on handling complex syntax interactions and preventing conflicts between new language features&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major flambda backend integration in oxcaml/merlin bringing unboxed record types and new syntax features</summary><published>2025-01-26T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-3</id><title>Week 3, 2025: Major compiler backend improvements with vectorization expansion, flambda integration, and optimization discussions</title><updated>2025-01-19T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3483" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New -ocamlrunparam CLI flag&lt;/strong&gt;&lt;/a&gt; allows setting default OCAMLRUNPARAM values for executable linking in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3483"&gt;oxcaml/oxcaml#3483&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;%array&lt;em&gt;element&lt;/em&gt;size&lt;em&gt;in&lt;/em&gt;bytes primitive&lt;/strong&gt; implemented for determining element sizes of typed arrays in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3367"&gt;oxcaml/oxcaml#3367&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3267" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;or_null feature&lt;/strong&gt;&lt;/a&gt; fully implemented with null pointer support in runtime and type system via &lt;a href="https://github.com/oxcaml/oxcaml/issues/3267"&gt;oxcaml/oxcaml#3267&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/oxcaml/issues/3265"&gt;oxcaml/oxcaml#3265&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3309" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Peek and poke operations&lt;/strong&gt;&lt;/a&gt; added for low-level memory access in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3309"&gt;oxcaml/oxcaml#3309&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3477" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Specific atomic instructions&lt;/strong&gt;&lt;/a&gt; generation for immediate values improving atomic operations performance via &lt;a href="https://github.com/oxcaml/oxcaml/issues/3477"&gt;oxcaml/oxcaml#3477&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3456" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Comprehensive vectorizer tests&lt;/strong&gt;&lt;/a&gt; added covering arrays, floats, integers, and SIMD operations in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3456"&gt;oxcaml/oxcaml#3456&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with major vectorization improvements and compiler optimization discussions&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Substantial integration work&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with flambda merge for 5.2.0minus-5 affecting 207 files&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories&lt;/strong&gt; (oxcaml/opam-repository, oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml, janestreet/opam-repository) showed no activity during this week&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Focus on backend optimizations&lt;/strong&gt; with vectorization infrastructure expansion and runtime memory management enhancements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Compiler evolution coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; backend optimizations and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; flambda integration for upstream compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system consistency&lt;/strong&gt; maintained across repositories as &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; adapts to new language features like unboxed types from compiler development&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Architecture alignment&lt;/strong&gt; in typed holes implementation resolving conflicts between compiler's native hole support and Merlin's existing functionality&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CI test reliability&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; regarding flaky tests and deterministic type-checking behavior expectations in &lt;a href="https://github.com/oxcaml/merlin/issues/124"&gt;oxcaml/merlin#124&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/124" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Typed holes implementation&lt;/strong&gt;&lt;/a&gt; technical review by &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; questioning design decisions around &lt;code&gt;Texp_hole&lt;/code&gt; usage and suggesting improvements for label handling functions in &lt;a href="https://github.com/oxcaml/merlin/issues/124"&gt;oxcaml/merlin#124&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Code architecture&lt;/strong&gt; feedback on function organization and potential refactoring to reduce likelihood of missing flavor handling in label descriptions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Vectorization infrastructure&lt;/strong&gt; expansion with comprehensive test coverage for multiple data types and SIMD operations across the compiler backend&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Low-level memory operations&lt;/strong&gt; development through peek/poke primitives and improved object manipulation functions for runtime efficiency&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler optimization analysis&lt;/strong&gt; with detailed technical discussions on IR design and selection logic improvements for better code generation&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream compiler integration&lt;/strong&gt; pattern continues with complex merges requiring careful handling of conflicting features between compiler evolution and tool compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime reliability&lt;/strong&gt; improvements through better GC pacing, stack alignment, and memory management enhancements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler backend improvements with vectorization expansion, flambda integration, and optimization discussions</summary><published>2025-01-19T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-2</id><title>Week 2, 2025: Single PR opened in oxcaml/merlin for stale occurrence detection improvements with upstream collaboration</title><updated>2025-01-12T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Single repository activity&lt;/strong&gt;: Only &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; showed development activity during week 2 of 2025&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/123" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Focused improvement effort&lt;/strong&gt;&lt;/a&gt;: One PR opened addressing stale occurrence detection in project-wide searches (&lt;a href="https://github.com/oxcaml/merlin/issues/123"&gt;oxcaml/merlin#123&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml/merlin/issues/1885" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Cross-project collaboration&lt;/strong&gt;&lt;/a&gt;: Work coordinated with upstream &lt;a href="https://github.com/ocaml/merlin"&gt;ocaml/merlin&lt;/a&gt; repository via &lt;a href="https://github.com/ocaml/merlin/issues/1885"&gt;ocaml/merlin#1885&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Community engagement&lt;/strong&gt;: Active review coordination facilitated proper domain expert connections&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/123" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Upstream collaboration&lt;/strong&gt;&lt;/a&gt;: &lt;a href="https://github.com/oxcaml/merlin/issues/123"&gt;oxcaml/merlin#123&lt;/a&gt; work coordinated with &lt;a href="https://github.com/ocaml/merlin/issues/1885"&gt;ocaml/merlin#1885&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Fork synchronization&lt;/strong&gt;: Development effort maintains alignment between oxcaml fork and upstream ocaml/merlin repository&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Quality focus&lt;/strong&gt;: Development activity concentrated on improving existing functionality rather than adding new features&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream coordination&lt;/strong&gt;: Active collaboration patterns between fork and upstream repository for feature alignment&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Single PR opened in oxcaml/merlin for stale occurrence detection improvements with upstream collaboration</summary><published>2025-01-12T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2025/week-1</id><title>Week 1, 2025: None</title><updated>2025-01-05T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for oxcaml - Week 1, 2025</summary><published>2025-01-05T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-52</id><title>Week 52, 2024: None</title><updated>2024-12-29T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for oxcaml - Week 52, 2024</summary><published>2024-12-29T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-51</id><title>Week 51, 2024: None</title><updated>2024-12-22T00:00:00+00:00</updated><content type="html"/><link href="https://thicket.dev/"/><summary>Activity report for oxcaml - Week 51, 2024</summary><published>2024-12-22T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-50</id><title>Week 50, 2024: Limited activity across oxcaml group with Merlin receiving automation improvements and flambda parameter maintenance</title><updated>2024-12-15T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Most repositories in the oxcaml group remained inactive during week 50 of 2024&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; was the only repository with meaningful activity, receiving automation tooling and maintenance updates&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; had no recorded activity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler merge automation workflow&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt; with mention of &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; regarding the bot's integration with compiler development processes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/121" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Flambda parameter review process&lt;/strong&gt;&lt;/a&gt; completed in &lt;a href="https://github.com/oxcaml/merlin/issues/121"&gt;oxcaml/merlin#121&lt;/a&gt; with &lt;a href="https://github.com/dkalinichenko-js"&gt;@dkalinichenko-js&lt;/a&gt; providing approval for the parameter updates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Automation focus&lt;/strong&gt;&lt;/a&gt; evident in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with the introduction of compiler merge detection bot (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/121" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Maintenance-driven activity&lt;/strong&gt;&lt;/a&gt; with systematic updates to flambda parameters to keep pace with compiler development (&lt;a href="https://github.com/oxcaml/merlin/issues/121"&gt;oxcaml/merlin#121&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Limited activity across oxcaml group with Merlin receiving automation improvements and flambda parameter maintenance</summary><published>2024-12-15T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-49</id><title>Week 49, 2024: Major unboxed records implementation in oxcaml/oxcaml and compiler integration updates in oxcaml/merlin</title><updated>2024-12-08T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3229" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed records syntax&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;code&gt;#{field = value}&lt;/code&gt; notation for record creation, &lt;code&gt;#{}&lt;/code&gt; pattern matching, and &lt;code&gt;E.#l&lt;/code&gt; field access (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3229"&gt;oxcaml/oxcaml#3229&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3310" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Overwrite expressions&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;code&gt;overwrite_ exp with exp&lt;/code&gt; syntax for safely updating unique values (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3310"&gt;oxcaml/oxcaml#3310&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3337" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ARM64 unboxed product returns&lt;/strong&gt;&lt;/a&gt; from C externals in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, extending zero-cost abstraction support to ARM64 architecture (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3337"&gt;oxcaml/oxcaml#3337&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3343"&gt;oxcaml/oxcaml#3343&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml compiler integration&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; updated to version 5.2.0minus-4 with improved jkind annotation printing and magic number updates (&lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3285" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced nullability annotations&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; pretty-printing and Chamelon inplace minimization options (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3285"&gt;oxcaml/oxcaml#3285&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3326"&gt;oxcaml/oxcaml#3326&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/strong&gt; delivered major unboxed records implementation alongside GC improvements and backend optimizations across 15+ merged PRs&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/strong&gt; completed comprehensive OCaml 5.2.0minus-4 compiler integration with 23,205 additions and 21,060 deletions across 143 files (&lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/strong&gt;, &lt;strong class="achievement"&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/strong&gt;, and &lt;strong class="achievement"&gt;&lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/strong&gt; had no recorded activity this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler integration alignment&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with Merlin's OCaml 5.2.0minus-4 integration supporting oxcaml's jkind and unboxed types development (&lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3229" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Jkind annotation consistency&lt;/strong&gt;&lt;/a&gt; between repositories with Merlin's improved jkind printing behavior complementing oxcaml's unboxed records implementation and type system changes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3229"&gt;oxcaml/oxcaml#3229&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Jane Street contributor collaboration&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; and &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; working across both oxcaml and Merlin repositories on type system improvements (&lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Zero-cost abstractions focus&lt;/strong&gt; with unboxed records joining existing unboxed products and pairs, indicating systematic expansion of compile-time optimization features across the oxcaml ecosystem&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3331" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance-oriented development&lt;/strong&gt;&lt;/a&gt; with multiple GC improvements, ARM64 backend optimizations, and memory management enhancements prioritizing runtime efficiency (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3331"&gt;oxcaml/oxcaml#3331&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3343"&gt;oxcaml/oxcaml#3343&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3319" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Type system safety improvements&lt;/strong&gt;&lt;/a&gt; through uniqueness analysis refinements and enhanced nullability handling, strengthening compile-time guarantees (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3319"&gt;oxcaml/oxcaml#3319&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/3285"&gt;oxcaml/oxcaml#3285&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Tooling synchronization&lt;/strong&gt;&lt;/a&gt; with Merlin staying current with oxcaml compiler changes, ensuring IDE support keeps pace with language evolution (&lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major unboxed records implementation in oxcaml/oxcaml and compiler integration updates in oxcaml/merlin</summary><published>2024-12-08T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-48</id><title>Week 48, 2024: Major week with template instantiation features, capsule API enhancements, CFG backend refactoring, and OCaml 5.2.0minus-4 integration</title><updated>2024-12-01T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/1905" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Template instantiation&lt;/strong&gt;&lt;/a&gt; via new &lt;code&gt;-instantiate&lt;/code&gt; command line flag in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; allowing template compilation with arguments from remaining files (&lt;a href="https://github.com/oxcaml/oxcaml/issues/1905"&gt;oxcaml/oxcaml#1905&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3161" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced capsule API&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with new &lt;code&gt;Access.t&lt;/code&gt; module providing wrapping and unwrapping of &lt;code&gt;Data.t&lt;/code&gt; values, replacing password-based access patterns (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3161"&gt;oxcaml/oxcaml#3161&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3161" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Shared password support&lt;/strong&gt;&lt;/a&gt; in capsule API through &lt;code&gt;Password.Shared.t&lt;/code&gt; for shared access to capsules with new &lt;code&gt;access&lt;/code&gt; and &lt;code&gt;access_shared&lt;/code&gt; functions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3161"&gt;oxcaml/oxcaml#3161&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Modal module syntax&lt;/strong&gt;&lt;/a&gt; support in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with functor parameter mode annotations and module type constraints (&lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Jkind printing logic&lt;/strong&gt; improvements in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with cleaner user-written annotation handling in type declarations (&lt;a href="https://github.com/oxcaml/merlin/commit/30323e198474d2068e4714977513f6ddb0713476"&gt;oxcaml/merlin&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3325" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Version bump to 5.2.0minus-4&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with updated magic numbers for bytecode and native code compilation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3325"&gt;oxcaml/oxcaml#3325&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with template instantiation features, capsule API enhancements, and extensive CFG backend refactoring work&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler integration&lt;/strong&gt; work in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with OCaml 5.2.0minus-4 integration including modal module syntax and jkind printing improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Single issue&lt;/strong&gt; reported in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; regarding odoc compilation failure with OCaml compiler variants&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3325" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 5.2.0minus-4 coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with synchronized version bumps and magic number updates (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3325"&gt;oxcaml/oxcaml#3325&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/35" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compilation compatibility&lt;/strong&gt;&lt;/a&gt; issue affecting &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; where odoc package fails with OCaml variants.5.2.0+flambda2 compiler (&lt;a href="https://github.com/janestreet/opam-repository/issues/35"&gt;janestreet/opam-repository#35&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system integration&lt;/strong&gt; work spanning both repositories with jkind handling and modal programming features reflecting coordinated OCaml development efforts&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Imperative loop allocation optimization&lt;/strong&gt;&lt;/a&gt; discussion by &lt;a href="https://github.com/patrick-nicodemus"&gt;Patrick Nicodemus&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; regarding local allocation in loops using Flambda2 bleeding edge compiler (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293"&gt;oxcaml/oxcaml#3293&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Floating point dependency optimization&lt;/strong&gt;&lt;/a&gt; technical discussion between &lt;a href="https://github.com/chambart"&gt;Pierre Chambart&lt;/a&gt; and &lt;a href="https://github.com/stedolan"&gt;Stephen Dolan&lt;/a&gt; about breaking false dependencies in x86 SSE instructions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293"&gt;oxcaml/oxcaml#3293&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/120" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Modal module semantics&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; regarding empty mode list handling, confirming syntax-only implementation without typedtree semantics (&lt;a href="https://github.com/oxcaml/merlin/issues/120"&gt;oxcaml/merlin#120&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Modularization focus&lt;/strong&gt; with systematic extraction of common functionality into dedicated utility modules across the CFG backend in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system modernization&lt;/strong&gt; emphasis on jkind and modal programming features reflecting OCaml's advanced type system development direction across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Compiler synchronization&lt;/strong&gt; pattern with systematic import of upstream OCaml flambda-backend changes showing regular integration workflow between repositories&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance-focused development&lt;/strong&gt; with targeted optimizations for large expression handling and memory allocation patterns in compiler backends&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major week with template instantiation features, capsule API enhancements, CFG backend refactoring, and OCaml 5.2.0minus-4 integration</summary><published>2024-12-01T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-47</id><title>Week 47, 2024: Backend refactoring and Flambda2 performance optimization focus in oxcaml/oxcaml with new profiling capabilities</title><updated>2024-11-24T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;New &lt;strong class="achievement"&gt;operation modules&lt;/strong&gt; added to backend with comprehensive operation handling and printing capabilities in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c159648b552591de5b53fda05209039c7ed967fb"&gt;c159648b5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 join profiling&lt;/strong&gt; instrumentation in &lt;code&gt;-dprofile&lt;/code&gt; for performance tracking in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/7cdbd6c86d9c657d901775a6269f5973d54e7e4c"&gt;7cdbd6c86&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Jkind refactoring&lt;/strong&gt; with improved type system handling in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c159648b552591de5b53fda05209039c7ed967fb"&gt;c159648b5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Linear independence&lt;/strong&gt; from Mach module for improved architecture in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c2be0bfb6252c97eadf1156f8e3129b93fcd2b99"&gt;c2be0bfb6&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;CSE fixes&lt;/strong&gt; in Flambda2 for better common subexpression elimination in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/70be81c51429268f6d83cc51a1ba6b54df7d11b2"&gt;70be81c51&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Poison constant fixes&lt;/strong&gt; for unboxed value slots in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/a6337c2a0f45d0cf321bff571eb437a6027b0e8a"&gt;a6337c2a0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Label function renaming&lt;/strong&gt; from &lt;code&gt;of_int_for_testing&lt;/code&gt; to &lt;code&gt;of_int_unsafe&lt;/code&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c1fd79640573845158f9a202df7f7e4103c0a966"&gt;c1fd79640&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;Activity concentrated entirely in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with extensive backend refactoring and Flambda2 optimization work&lt;/li&gt;
&lt;li&gt;Other repositories (&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;) showed no activity during week 47&lt;/li&gt;
&lt;li&gt;Focus on performance measurement infrastructure and compiler optimization with research collaboration between academic and industry contributors&lt;/li&gt;
&lt;li&gt;Significant technical discussions involving CPU-level optimization analysis and database-inspired type environment design proposals&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CPU optimization analysis&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/chambart"&gt;Pierre Chambart&lt;/a&gt; discovering processor dependency tracking issues with floating point conversions and division operations requiring &lt;code&gt;pxor&lt;/code&gt; instruction insertion in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3293"&gt;oxcaml/oxcaml#3293&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3219" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Database-inspired type environment&lt;/strong&gt;&lt;/a&gt; design discussion by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; proposing egglog-inspired approach with deductive databases and leapfrog triejoin algorithms in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3219"&gt;oxcaml/oxcaml#3219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3219" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance trade-off analysis&lt;/strong&gt;&lt;/a&gt; between relational information tracking and compilation costs discussed by &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt;, &lt;a href="https://github.com/lthls"&gt;Vincent Laviron&lt;/a&gt;, and &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3219"&gt;oxcaml/oxcaml#3219&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3299" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Performance measurement emphasis&lt;/strong&gt;&lt;/a&gt; with infrastructure development for tracking compilation times and join operation costs in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3299"&gt;oxcaml/oxcaml#3299&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/oxcaml/issues/3300"&gt;oxcaml/oxcaml#3300&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3219" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Academic rigor in optimization&lt;/strong&gt;&lt;/a&gt; with formal approaches to type environment design using database theory and equality saturation techniques in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3219"&gt;oxcaml/oxcaml#3219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Low-level performance analysis&lt;/strong&gt;&lt;/a&gt; examining CPU microarchitecture effects on compilation optimization decisions in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3293"&gt;oxcaml/oxcaml#3293&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Backend refactoring and Flambda2 performance optimization focus in oxcaml/oxcaml with new profiling capabilities</summary><published>2024-11-24T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-46</id><title>Week 46, 2024: Major compiler advances with unboxed arrays, Merlin 5.2.0minus-3 sync, and macOS compatibility fixes across the oxcaml ecosystem</title><updated>2024-11-17T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3139" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed product arrays&lt;/strong&gt;&lt;/a&gt; frontend implementation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; enabling array operations on unboxed tuples with comprehensive test coverage (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3139"&gt;oxcaml/oxcaml#3139&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Or&lt;em&gt;null primitive&lt;/strong&gt; support in Flambda2 middle-end with null constant and is&lt;/em&gt;null operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3112"&gt;oxcaml/oxcaml#3112&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3223" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Modal module syntax&lt;/strong&gt;&lt;/a&gt; support allowing new syntactic constructs for modal types (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3223"&gt;oxcaml/oxcaml#3223&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/119" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced import scripts&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; now support both old and new compiler directory structures, allowing seamless migration between flambda-backend versions (&lt;a href="https://github.com/oxcaml/merlin/issues/119"&gt;oxcaml/merlin#119&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/119" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Language extension module&lt;/strong&gt;&lt;/a&gt; relocated from utils/ to parsing/ directory to resolve dependency cycles while maintaining full extension functionality (&lt;a href="https://github.com/oxcaml/merlin/issues/119"&gt;oxcaml/merlin#119&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3246" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Unboxed tuples&lt;/strong&gt;&lt;/a&gt; moved to stable status indicating production readiness (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3246"&gt;oxcaml/oxcaml#3246&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Compiler development&lt;/strong&gt; dominated by &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 26 merged PRs focusing on unboxed types maturation and uniqueness analysis improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development environment&lt;/strong&gt; enhanced through &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; synchronization to 5.2.0minus-3 with directory restructuring and language extension refinements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility&lt;/strong&gt; strengthened across &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with macOS M2 fixes and OCaml 5.2 preparation efforts&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Repository activity&lt;/strong&gt; concentrated in core compiler and tooling repositories while &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; remained inactive&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/119" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compiler version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with 5.2.0minus-3 magic number updates and language extension module relocation (&lt;a href="https://github.com/oxcaml/merlin/issues/119"&gt;oxcaml/merlin#119&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/34" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;macOS compatibility coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; and flambda-backend with sigwait patches addressing Thread.wait_signal errors on M2 chips (&lt;a href="https://github.com/janestreet/opam-repository/pull/34"&gt;janestreet/opam-repository#34&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/31" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;OCaml 5.2 preparation&lt;/strong&gt;&lt;/a&gt; efforts by &lt;a href="https://github.com/ncik-roberts"&gt;Nick Roberts&lt;/a&gt; creating package updates for merlin, lsp, and development tools pending upstream stabilization (&lt;a href="https://github.com/janestreet/opam-repository/pull/31"&gt;janestreet/opam-repository#31&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/pull/32"&gt;janestreet/opam-repository#32&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3223" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Language extension consistency&lt;/strong&gt;&lt;/a&gt; maintained across repositories with modal module syntax support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3223"&gt;oxcaml/oxcaml#3223&lt;/a&gt;) and corresponding Merlin parser updates (&lt;a href="https://github.com/oxcaml/merlin/issues/119"&gt;oxcaml/merlin#119&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Unboxed types ecosystem&lt;/strong&gt; reaching production maturity with comprehensive frontend support and stability promotion across compiler infrastructure&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific compatibility&lt;/strong&gt; focus ensuring consistent behavior across ARM64 and AMD64 architectures with dedicated macOS M2 support&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development tooling synchronization&lt;/strong&gt; maintaining tight integration between compiler versions and editor support through coordinated releases&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type safety strengthening&lt;/strong&gt; through uniqueness analysis improvements, layout bug fixes, and stricter mode checking across the compiler stack&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major compiler advances with unboxed arrays, Merlin 5.2.0minus-3 sync, and macOS compatibility fixes across the oxcaml ecosystem</summary><published>2024-11-17T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-45</id><title>Week 45, 2024: Major backend refactoring across oxcaml/oxcaml with LSP improvements in merlin and critical macOS compatibility fixes</title><updated>2024-11-10T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;New &lt;code&gt;-no-mach-ir&lt;/code&gt; command-line flag&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3215"&gt;oxcaml/oxcaml#3215&lt;/a&gt; enabling CFG-based compilation pipeline&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3097" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Reader-writer lock API&lt;/strong&gt;&lt;/a&gt; introduced in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3097"&gt;oxcaml/oxcaml#3097&lt;/a&gt; with shared access support in stdlib_alpha&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/1324" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Variant extensions support&lt;/strong&gt;&lt;/a&gt; added in &lt;a href="https://github.com/oxcaml/oxcaml/issues/1324"&gt;oxcaml/oxcaml#1324&lt;/a&gt; for extensible variant types&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3233" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced hugepage support&lt;/strong&gt;&lt;/a&gt; improved in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3233"&gt;oxcaml/oxcaml#3233&lt;/a&gt; with better memory allocation&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;LSP &lt;code&gt;-lsp-compat&lt;/code&gt; flag&lt;/strong&gt; added in &lt;a href="https://github.com/oxcaml/merlin/issues/116"&gt;oxcaml/merlin#116&lt;/a&gt; for improved hover interaction&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/34" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;macOS sigwait patch&lt;/strong&gt;&lt;/a&gt; implemented in &lt;a href="https://github.com/janestreet/opam-repository/pull/34"&gt;janestreet/opam-repository#34&lt;/a&gt; fixing dune crashes on M2 systems&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Core compiler development&lt;/strong&gt; focused on &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with extensive backend refactoring and new compilation features led by &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Editor integration improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; targeting LSP compatibility and opam ecosystem integration&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform compatibility work&lt;/strong&gt; addressing critical macOS development environment issues in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Package ecosystem maintenance&lt;/strong&gt; with coordinated version updates across Jane Street libraries and toolchain components&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3215" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Compilation pipeline evolution&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; CFG improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3215"&gt;oxcaml/oxcaml#3215&lt;/a&gt;) complementing &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; LSP compatibility enhancements (&lt;a href="https://github.com/oxcaml/merlin/issues/116"&gt;oxcaml/merlin#116&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/114" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Package ecosystem coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; opam compatibility fixes (&lt;a href="https://github.com/oxcaml/merlin/issues/114"&gt;oxcaml/merlin#114&lt;/a&gt;) and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; toolchain updates (&lt;a href="https://github.com/janestreet/opam-repository/pull/33"&gt;janestreet/opam-repository#33&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/34" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development environment stability&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; macOS fixes (&lt;a href="https://github.com/janestreet/opam-repository/pull/34"&gt;janestreet/opam-repository#34&lt;/a&gt;) supporting broader oxcaml ecosystem development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/29" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;macOS compatibility issue&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/kayceesrk"&gt;KC Sivaramakrishnan&lt;/a&gt; (&lt;a href="https://github.com/janestreet/opam-repository/issues/29"&gt;janestreet/opam-repository#29&lt;/a&gt;) regarding dune crashes on M2 MacBook Pro systems, resolved through sigwait patch implementation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Backend architecture modernization&lt;/strong&gt; with systematic migration from traditional Mach IR toward CFG-based compilation pipeline in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Editor integration focus&lt;/strong&gt; emphasizing LSP compatibility and developer experience improvements across &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Platform-specific compatibility&lt;/strong&gt; prioritizing macOS development environment stability in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Type system robustness&lt;/strong&gt; enhancements targeting edge cases in Flambda 2's advanced type inference and nullable optimizations&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major backend refactoring across oxcaml/oxcaml with LSP improvements in merlin and critical macOS compatibility fixes</summary><published>2024-11-10T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-44</id><title>Week 44, 2024: Major Flambda2 optimization advances in oxcaml with reaper implementation and developer tooling enhancements in Merlin</title><updated>2024-11-03T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Reaper global optimization pass&lt;/strong&gt; implementing advanced dead code elimination and flow analysis for Flambda2 (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e921aafb1c79a6c607b4a98b24c722d529537207"&gt;oxcaml/oxcaml@e921aafb&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;AMD64 CLDEMOTE intrinsic&lt;/strong&gt; support for cache line demotion instruction improving memory performance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/9b68ee7aa603b35584798291c532f512088a390d"&gt;oxcaml/oxcaml@9b68ee7a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced polling system&lt;/strong&gt; with improved CFG insertion and available registers analysis for better interrupt handling (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3025d5e9e95cdb0d49fb4ecc87501c3c5115b15f"&gt;oxcaml/oxcaml@3025d5e9&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/7287ddb380401e0b34eb697f0b74e57ab7c5e5cd"&gt;oxcaml/oxcaml@7287ddb3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Improved terminator simplification&lt;/strong&gt; eliminating dead code created by optimization passes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c29edac203097a3e94dfa742a87ee13c4de17006"&gt;oxcaml/oxcaml@c29edac2&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/7525bd4ad256950b171eb68be52a1f52a279c28b"&gt;oxcaml/oxcaml@7525bd4a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced closure approximations&lt;/strong&gt; for better function optimization in Flambda2 (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d5044593c9679891efe7fbe9946f8dcf2d534533"&gt;oxcaml/oxcaml@d5044593&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Comprehensive uniqueness documentation&lt;/strong&gt; with introduction, reference guide, and pitfalls documentation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/978695c5130680d31292fcebb4f03abcffc18c00"&gt;oxcaml/oxcaml@978695c5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/115" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New dump-file-stats command&lt;/strong&gt;&lt;/a&gt; for ocaml-index prints metadata from index files including mtime, size, and source digest (&lt;a href="https://github.com/oxcaml/merlin/issues/115"&gt;oxcaml/merlin#115&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/117" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;New magic-numbers command&lt;/strong&gt;&lt;/a&gt; outputs all magic numbers as JSON for compatibility verification (&lt;a href="https://github.com/oxcaml/merlin/issues/117"&gt;oxcaml/merlin#117&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/116" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Improved LSP hover interaction&lt;/strong&gt;&lt;/a&gt; in stack-or-heap with new &lt;code&gt;-lsp-compat&lt;/code&gt; flag for better location reporting alignment with type-enclosing queries (&lt;a href="https://github.com/oxcaml/merlin/issues/116"&gt;oxcaml/merlin#116&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Primary activity concentrated in oxcaml/oxcaml&lt;/strong&gt; with extensive Flambda2 optimization work including sophisticated global optimization passes and infrastructure improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer tooling enhancements in oxcaml/merlin&lt;/strong&gt; with new diagnostic commands and LSP compatibility improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure consolidation&lt;/strong&gt; through removal of Jane Syntax system and backend compilation fixes across the main compiler&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance focus&lt;/strong&gt; with AMD64 intrinsics support, enhanced polling systems, and improved register analysis&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation improvements&lt;/strong&gt; with comprehensive uniqueness feature documentation indicating preparation for broader adoption&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Complementary tooling development&lt;/strong&gt; with oxcaml/oxcaml advancing core compiler optimization capabilities while oxcaml/merlin enhances developer experience through improved diagnostic commands and LSP compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Shared focus on developer productivity&lt;/strong&gt; with oxcaml/oxcaml's comprehensive uniqueness documentation and oxcaml/merlin's compatibility improvements both aimed at improving the development experience&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;No direct dependencies&lt;/strong&gt; identified between the active repositories this week, with each repository advancing independent but complementary aspects of the OCaml ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Flambda2 optimization maturity&lt;/strong&gt; with implementation of sophisticated global optimization passes like the reaper demonstrating the compiler's advancement toward production readiness in oxcaml/oxcaml&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Infrastructure consolidation&lt;/strong&gt; through removal of Jane Syntax and simplification of language extension systems, indicating a move toward cleaner, more maintainable codebase in oxcaml/oxcaml&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Developer tooling expansion&lt;/strong&gt; with new diagnostic commands for index file inspection and magic number verification in oxcaml/merlin, plus enhanced LSP integration capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Performance optimization focus&lt;/strong&gt; with enhanced polling systems, improved register analysis, and better instruction selection showing emphasis on runtime performance across the compiler stack&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Documentation emphasis&lt;/strong&gt; with comprehensive uniqueness feature documentation in oxcaml/oxcaml suggesting preparation for broader adoption of advanced type system features&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major Flambda2 optimization advances in oxcaml with reaper implementation and developer tooling enhancements in Merlin</summary><published>2024-11-03T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-43</id><title>Week 43, 2024: Major oxcaml repository restructuring alongside coordinated OCaml 5.2 compatibility work across merlin and opam-repository</title><updated>2024-10-27T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major repository restructuring&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; through pivot_root operation moving OCaml upstream content to repository root (&lt;a href="https://github.com/oxcaml/oxcaml/commit/35956239d41868b4d210dc96709a3c886b22e72b"&gt;35956239d&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/020a03770b944b1d46247144fc2975b37b708ada"&gt;020a03770&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3185" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Domain.spawn alert&lt;/strong&gt;&lt;/a&gt; added to warn about spawn function usage in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3185"&gt;oxcaml/oxcaml#3185&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/110" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Enhanced let punning occurrence handling&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; switching from ghost location filtering to Location.none filtering (&lt;a href="https://github.com/oxcaml/merlin/issues/110"&gt;oxcaml/merlin#110&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/113" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Promoted Sherlodoc type parser&lt;/strong&gt;&lt;/a&gt; from dependency to core sources in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; by &lt;a href="https://github.com/ncik-roberts"&gt;Nick Roberts&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/113"&gt;oxcaml/merlin#113&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3049" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Default modalities support&lt;/strong&gt;&lt;/a&gt; for signatures in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3049"&gt;oxcaml/oxcaml#3049&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3073" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;CFG pipeline selection improvements&lt;/strong&gt;&lt;/a&gt; for better compiler optimization in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3073"&gt;oxcaml/oxcaml#3073&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3169" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Linear scan register allocation enhancement&lt;/strong&gt;&lt;/a&gt; using DLL.t instead of List.t for ranges in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3169"&gt;oxcaml/oxcaml#3169&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major infrastructure changes&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; repository restructuring affecting project organization&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Active OCaml 5.2 compatibility work&lt;/strong&gt; spanning &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Three repositories showed activity&lt;/strong&gt; with oxcaml/oxcaml leading major changes, merlin delivering feature improvements, and janestreet/opam-repository addressing compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Two repositories inactive&lt;/strong&gt; with oxcaml/opam-repository and oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml showing no commits during this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/112" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Coordinated OCaml 5.2 compatibility&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/ncik-roberts"&gt;Nick Roberts&lt;/a&gt; across &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;, including OCaml base revision updates (&lt;a href="https://github.com/oxcaml/merlin/issues/112"&gt;oxcaml/merlin#112&lt;/a&gt;) and comprehensive package compatibility fixes (&lt;a href="https://github.com/janestreet/opam-repository/issues/31"&gt;janestreet/opam-repository#31&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/32"&gt;janestreet/opam-repository#32&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/111" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;merlin-jst integration work&lt;/strong&gt;&lt;/a&gt; spanning both repositories with draft compatibility PR in &lt;a href="https://github.com/oxcaml/merlin/issues/111"&gt;oxcaml/merlin#111&lt;/a&gt; and tooling packages exploration in &lt;a href="https://github.com/janestreet/opam-repository/issues/30"&gt;janestreet/opam-repository#30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Upstream OCaml synchronization&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; repository restructuring and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; base revision updates maintaining compatibility with flambda-backend changes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/32" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Development tooling coordination&lt;/strong&gt;&lt;/a&gt; with patched versions of merlin, lsp, utop, and ocamlformat being prepared in &lt;a href="https://github.com/janestreet/opam-repository/issues/32"&gt;janestreet/opam-repository#32&lt;/a&gt; to support bleeding-edge OCaml development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Repository architecture modernization&lt;/strong&gt; through &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; pivot_root restructuring representing fundamental shift from nested to flatter project organization&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Ecosystem-wide OCaml 5.2 preparation&lt;/strong&gt; with compatibility work spanning multiple repositories indicating coordinated effort toward major release&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Self-contained architecture movement&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; promoting external dependencies like Sherlodoc parser to core sources&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Enhanced development tooling focus&lt;/strong&gt; with improved let punning support and comprehensive opam package compatibility improvements across the ecosystem&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml repository restructuring alongside coordinated OCaml 5.2 compatibility work across merlin and opam-repository</summary><published>2024-10-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev/groups/oxcaml/2024/week-42</id><title>Week 42, 2024: Major oxcaml compiler restructuring and merlin enhancements with OCaml 5.2.0minus-1 integration</title><updated>2024-10-20T00:00:00+00:00</updated><content type="html">
&lt;style&gt;
    /* Base styles */
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; }
    h1, h2, h3 { margin-top: 1.5em; margin-bottom: 0.5em; color: #1a1a1a; }
    h1 { font-size: 1.8em; border-bottom: 2px solid #f0f0f0; padding-bottom: 0.3em; }
    h2 { font-size: 1.4em; }
    h3 { font-size: 1.2em; color: #444; }
    p { margin: 0.8em 0; }

    /* Links */
    a { color: #0366d6; text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* Code blocks */
    code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: 'SF Mono', Consolas, monospace; font-size: 0.9em; }
    pre { background: #f6f8fa; padding: 12px; border-radius: 6px; overflow-x: auto; }
    pre code { background: none; padding: 0; }

    /* Lists */
    ul, ol { padding-left: 1.5em; margin: 0.8em 0; }
    li { margin: 0.3em 0; }

    /* Achievement highlights */
    .achievement { color: #cc6600; font-weight: 600; }

    /* RUMINANT group links */
    .ruminant-group-link {
        color: #6b46c1;
        font-weight: 500;
        padding: 2px 6px;
        background: rgba(107, 70, 193, 0.1);
        border-radius: 3px;
        text-decoration: none;
    }
    .ruminant-group-link:hover {
        background: rgba(107, 70, 193, 0.2);
        text-decoration: none;
    }

    /* Repository links */
    .repo-inline { color: #0366d6; font-weight: 500; }

    /* Sections */
    section { margin: 2em 0; }

    /* Tables */
    table { border-collapse: collapse; width: 100%; margin: 1em 0; }
    th, td { padding: 8px 12px; border: 1px solid #ddd; text-align: left; }
    th { background: #f6f8fa; font-weight: 600; }
    tr:nth-child(even) { background: #f9f9f9; }
&lt;/style&gt;
&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;Added &lt;code&gt;get_header_masked&lt;/code&gt; function in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; cmm_helpers module for clearing reserved bits from block headers (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d063df2969bf9a318f4112d292824e918b14180f"&gt;d063df2969bf&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Implemented &lt;strong class="achievement"&gt;continuation lifting&lt;/strong&gt; optimization in Flambda2 compiler in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d835ee41806639fce3e915c9cef51921f98710ba"&gt;d835ee41806639&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Integrated &lt;strong class="achievement"&gt;5.2 multicore markdelay&lt;/strong&gt; functionality for improved garbage collection in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/f937ddd5f5970b308e051fef16374cc2f4a2b4f5"&gt;f937ddd5f5970&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enhanced &lt;a href="https://github.com/oxcaml/merlin/issues/91" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;locate command&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with new &lt;code&gt;-context&lt;/code&gt; flag allowing explicit namespace specification via values like &lt;code&gt;expr&lt;/code&gt;, &lt;code&gt;module_path&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;constructor&lt;/code&gt;, &lt;code&gt;label&lt;/code&gt;, etc. (&lt;a href="https://github.com/oxcaml/merlin/issues/91"&gt;oxcaml/merlin#91&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;New &lt;a href="https://github.com/oxcaml/merlin/issues/108" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;magic numbers update script&lt;/strong&gt;&lt;/a&gt; (&lt;code&gt;update-magic-numbers.sh&lt;/code&gt;) in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; for automated OCaml version compatibility maintenance (&lt;a href="https://github.com/oxcaml/merlin/issues/108"&gt;oxcaml/merlin#108&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed &lt;strong class="achievement"&gt;unsoundness issue&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; where locks beyond &lt;code&gt;open&lt;/code&gt; statements were incorrectly ignored (&lt;a href="https://github.com/oxcaml/oxcaml/commit/2a894ebf4b84f6e193136c1c639512f32662bc89"&gt;2a894ebf4b84f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved &lt;a href="https://github.com/oxcaml/merlin/issues/110" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;ghost location handling&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; occurrences query by switching from ghost location filtering to &lt;code&gt;Location.none&lt;/code&gt; filtering (&lt;a href="https://github.com/oxcaml/merlin/issues/110"&gt;oxcaml/merlin#110&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Major infrastructure overhaul&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with complete backend directory restructuring and advanced compiler optimizations including continuation lifting and multicore garbage collection improvements&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development tooling advancement&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with enhanced locate functionality, OCaml 5.2.0minus-1 integration, and automated maintenance scripts&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-project coordination&lt;/strong&gt; evident between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/ocaml-flambda/flambda-backend"&gt;ocaml-flambda/flambda-backend&lt;/a&gt; for synchronized changes and upstream integration planning&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Active development&lt;/strong&gt; limited to 2 of 5 repositories during this period, with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showing no activity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/110" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Synchronized development&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/ocaml-flambda/flambda-backend"&gt;ocaml-flambda/flambda-backend&lt;/a&gt; for occurrences query improvements, with &lt;a href="https://github.com/oxcaml/merlin/issues/110"&gt;oxcaml/merlin#110&lt;/a&gt; coordinated with &lt;a href="https://github.com/ocaml-flambda/flambda-backend/issues/3137"&gt;ocaml-flambda/flambda-backend#3137&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/104" style="text-decoration: none;"&gt;&lt;strong class="achievement"&gt;Upstream integration planning&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with intention to upstream EXCLUDE&lt;em&gt;QUERY&lt;/em&gt;DIR bug fix to main OCaml merlin project (&lt;a href="https://github.com/oxcaml/merlin/issues/104"&gt;oxcaml/merlin#104&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Shared reviewer involvement&lt;/strong&gt; with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; participating in reviews across both &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; changes and coordinating with flambda-backend dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong class="achievement"&gt;Compiler architecture consolidation&lt;/strong&gt; with major directory restructuring in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; moving backend functionality into asmcomp for better organization and maintenance&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Development automation emphasis&lt;/strong&gt; with creation of tooling in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; for automated magic numbers maintenance, reducing manual overhead for OCaml version updates&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Cross-repository coordination maturity&lt;/strong&gt; evident through systematic synchronization between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/ocaml-flambda/flambda-backend"&gt;ocaml-flambda/flambda-backend&lt;/a&gt; projects for feature development and integration&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;Runtime system refinement&lt;/strong&gt; addressing compatibility issues in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; between custom extensions and upstream OCaml changes&lt;/li&gt;
&lt;li&gt;&lt;strong class="achievement"&gt;User experience improvements&lt;/strong&gt; through enhanced locate command functionality in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; providing more precise control over identifier resolution&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev/"/><summary>Major oxcaml compiler restructuring and merlin enhancements with OCaml 5.2.0minus-1 integration</summary><published>2024-10-20T00:00:00+00:00</published></entry></feed>
<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>https://thicket.dev//feeds/oxcaml.xml</id><title>OxCaml - Weekly Activity</title><updated>2025-09-14T00:00:00+00:00</updated><author><name>Anil Madhavapeddy</name><email>anil@recoil.org</email></author><link href="https://thicket.dev//feeds/oxcaml.xml" rel="self"/><link href="https://thicket.dev//groups/oxcaml" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Oxidised OCaml</subtitle><entry><id>https://thicket.dev//groups/oxcaml/2025/week-5</id><title>Week 5, 2025: Major stdlib portability work in oxcaml with mode annotations, Merlin parameterized module support, and js_of_ocaml runtime fixes</title><updated>2025-02-02T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New compaction algorithm&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with switchable runtime configuration for improved garbage collection performance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/bcbcb92c0fe2ed5cab4b41496fd3bc2e3e8637bf"&gt;bcbcb92c0fe2ed5cab4b41496fd3bc2e3e8637bf&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/128" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Parameterized module support&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; through new &lt;code&gt;-parameter&lt;/code&gt; flag implementation by &lt;a href="https://github.com/lukemaurer"&gt;Luke Maurer&lt;/a&gt;, enabling proper editing without typechecking errors (&lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript stacktrace support&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with automatic Error attachment when &lt;code&gt;Printexc.backtrace_status() = true&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/b64a46c9e182d8b959ea9fa42bb69f43892dbb7f"&gt;b64a46c9e182d8b959ea9fa42bb69f43892dbb7f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Implicit source position&lt;/strong&gt; support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with new &lt;code&gt;[%call_pos]&lt;/code&gt; syntax for better debugging (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3b87b0ebc5feb752640563ac4f7dc267d818b78f"&gt;3b87b0ebc5feb752640563ac4f7dc267d818b78f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Fixed hexadecimal float parsing&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with very large exponents (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/def6a78e48e31284a21240b4dbca5bfc4a5a18e4"&gt;def6a78e48e31284a21240b4dbca5bfc4a5a18e4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/129" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Typed hole module&lt;/strong&gt;&lt;/a&gt; migration in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; from ocaml-lsp by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/129"&gt;oxcaml/merlin#129&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Comprehensive stdlib modernization&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with mode annotations across virtually all modules establishing foundation for multi-domain programming&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced development tooling&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with parameterized module support and upstream synchronization efforts&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime stability improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with 20 commits addressing float parsing, Unix operations, and debugging capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity&lt;/strong&gt; recorded in package repositories &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Multi-domain safety alignment&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; stdlib mode annotations and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; parameterized module support for enhanced type safety&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Testing infrastructure coordination&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; importing OCaml compiler tests while &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; updates its own test suite for mode annotations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/129" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Upstream synchronization efforts&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; reducing diff with upstream merlin through typed_hole module migration (&lt;a href="https://github.com/oxcaml/merlin/issues/129"&gt;oxcaml/merlin#129&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street contributor involvement&lt;/strong&gt; with &lt;a href="https://github.com/lukemaurer"&gt;Luke Maurer&lt;/a&gt; working on &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; parameterized modules while being affiliated with Jane Street&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Mode-driven API design&lt;/strong&gt; becoming central to OCaml's multi-domain strategy across the oxcaml ecosystem, with Safe submodules providing thread-safe alternatives&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Comprehensive testing modernization&lt;/strong&gt; with both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; expanding test coverage for improved reliability&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience improvements&lt;/strong&gt; through enhanced debugging capabilities in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; stacktraces and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; parameterized module support&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime performance focus&lt;/strong&gt; with switchable algorithms in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compaction and systematic bug fixes in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; JavaScript runtime&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-5"/><summary>Major stdlib portability work in oxcaml with mode annotations, Merlin parameterized module support, and js_of_ocaml runtime fixes</summary><published>2025-02-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-6</id><title>Week 6, 2025: Active development week across the ecosystem with zero allocation enhancements, editor integration improvements, and release activity.</title><updated>2025-02-09T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3143" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Zero allocation ecosystem expansion&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with custom error messages (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3143"&gt;oxcaml/oxcaml#3143&lt;/a&gt;), conditional assumptions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3140"&gt;oxcaml/oxcaml#3140&lt;/a&gt;), signature-level support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3134"&gt;oxcaml/oxcaml#3134&lt;/a&gt;), and improved error reporting (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3228"&gt;oxcaml/oxcaml#3228&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Layout system advancement&lt;/strong&gt;&lt;/a&gt; with non-value types now supported in &lt;code&gt;[@@unboxed]&lt;/code&gt; annotations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558"&gt;oxcaml/oxcaml#3558&lt;/a&gt;) and unboxed shift operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3523"&gt;oxcaml/oxcaml#3523&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3118" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced debugging capabilities&lt;/strong&gt;&lt;/a&gt; with directory field added to Debuginfo for better source location tracking (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3118"&gt;oxcaml/oxcaml#3118&lt;/a&gt;) and improved variable printing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3546"&gt;oxcaml/oxcaml#3546&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Browser compatibility improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with optional keyboard event properties and storage API properties for better non-Web environment support&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Comprehensive manual documentation&lt;/strong&gt; improvements with proper markup for code snippets and technical terms across all sections&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler development&lt;/strong&gt; dominated by &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with substantial zero allocation ecosystem expansion and type system enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Editor integration focus&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with two critical backport PRs for type querying and definition jumping improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Release activity&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with version 6.0.1 publication featuring compatibility fixes and documentation enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Platform compatibility&lt;/strong&gt; work in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; addressing ARM64 build issues&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository coordination&lt;/strong&gt; evident across multiple projects with cross-references and dependency management&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3533" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 compatibility coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with cross-references to upstream compiler fixes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3533"&gt;oxcaml/oxcaml#3533&lt;/a&gt;) and async&lt;em&gt;ssl improvements (&lt;a href="https://github.com/janestreet/async_ssl/issues/39"&gt;janestreet/async&lt;/em&gt;ssl#39&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml/merlin/issues/1864" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Upstream synchronization&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; backporting improvements from &lt;a href="https://github.com/ocaml/merlin"&gt;ocaml/merlin&lt;/a&gt; including type-enclosing query fixes (&lt;a href="https://github.com/ocaml/merlin/issues/1864"&gt;ocaml/merlin#1864&lt;/a&gt;) and file distinction enhancements (&lt;a href="https://github.com/ocaml/merlin/issues/1882"&gt;ocaml/merlin#1882&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Zero allocation ecosystem development&lt;/strong&gt; spanning multiple components in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with coordinated implementation of custom errors, conditional assumptions, and signature-level support&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Zero allocation optimization maturity&lt;/strong&gt; with comprehensive feature set development including custom error messages, conditional assumptions, signature-level attributes, and improved error reporting across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Layout system evolution&lt;/strong&gt;&lt;/a&gt; advancing towards more sophisticated memory representations with non-value type support in unboxed annotations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3558"&gt;oxcaml/oxcaml#3558&lt;/a&gt;) and performance-oriented unboxed operations&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compatibility focus&lt;/strong&gt; with dedicated ARM64 support initiatives in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; and browser environment compatibility improvements in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3118" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience enhancement&lt;/strong&gt;&lt;/a&gt; through improved debugging capabilities (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3118"&gt;oxcaml/oxcaml#3118&lt;/a&gt;), editor integration reliability (&lt;a href="https://github.com/oxcaml/merlin/issues/131"&gt;oxcaml/merlin#131&lt;/a&gt;), and comprehensive documentation improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Upstream integration strategy&lt;/strong&gt; with systematic backporting of critical improvements from mainstream repositories to maintain feature parity and stability&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-6"/><summary>Active development week across the ecosystem with zero allocation enhancements, editor integration improvements, and release activity.</summary><published>2025-02-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-7</id><title>Week 7, 2025: Major infrastructure advances across oxcaml/oxcaml, oxcaml/merlin, and oxcaml/js_of_ocaml with AddressSanitizer support, WASM improvements, and tooling enhancements</title><updated>2025-02-16T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3560" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;AddressSanitizer support&lt;/strong&gt;&lt;/a&gt; for memory debugging and error detection in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3560"&gt;oxcaml/oxcaml#3560&lt;/a&gt; with comprehensive test infrastructure&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3476" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Datalog engine implementation&lt;/strong&gt;&lt;/a&gt; for Flambda2 reaper optimization in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3476"&gt;oxcaml/oxcaml#3476&lt;/a&gt; with virtual machine, tables, and query scheduling&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3305" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 intrinsics support&lt;/strong&gt;&lt;/a&gt; for clz and ctz operations in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3305"&gt;oxcaml/oxcaml#3305&lt;/a&gt; improving performance&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3565" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Or_null API stabilization&lt;/strong&gt;&lt;/a&gt; moved from alpha to stable stdlib in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3565"&gt;oxcaml/oxcaml#3565&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3500" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Runtime5 automatic compaction&lt;/strong&gt;&lt;/a&gt; feature in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3500"&gt;oxcaml/oxcaml#3500&lt;/a&gt; for improved memory management&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WASM Node wrapper&lt;/strong&gt; support for alternative engines in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; enabling broader runtime compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WASM Unix operations&lt;/strong&gt; implementation of &lt;code&gt;ocaml_unix_findfirst&lt;/code&gt; and &lt;code&gt;ocaml_unix_findnext&lt;/code&gt; for file operations&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WASI separate compilation&lt;/strong&gt; support allowing modular WASM builds in oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/128" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Parameter flag processing&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt; enabling parameterized module support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/130" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced file disambiguation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/130"&gt;oxcaml/merlin#130&lt;/a&gt; using directory path heuristics&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler advances&lt;/strong&gt; in oxcaml/oxcaml with AddressSanitizer integration, datalog engine implementation, and extensive type system restructuring affecting jkind subsumption and mode system refinements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WASM ecosystem maturity&lt;/strong&gt; in oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml with 477 files changed including Unix operations, Node wrapper support, separate compilation, and performance optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Development tooling improvements&lt;/strong&gt; in oxcaml/merlin with OCaml 5.2.0minus-6 integration, parameterized module support, and enhanced file navigation capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure focus&lt;/strong&gt; across repositories emphasizing memory safety, performance optimization, and type system robustness with comprehensive testing frameworks&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;OCaml compiler version alignment&lt;/strong&gt; with both oxcaml/oxcaml and oxcaml/merlin integrating OCaml 5.2.0minus-6 changes, ensuring tooling compatibility with core compiler updates&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3511" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Parameterized module ecosystem&lt;/strong&gt;&lt;/a&gt; development spanning oxcaml/oxcaml's module system improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3511"&gt;oxcaml/oxcaml#3511&lt;/a&gt; and oxcaml/merlin's parameter flag support in &lt;a href="https://github.com/oxcaml/merlin/issues/128"&gt;oxcaml/merlin#128&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system consistency&lt;/strong&gt; with jkind and mode system work in oxcaml/oxcaml providing foundation for enhanced editor support in oxcaml/merlin&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WASM compilation pipeline&lt;/strong&gt; in oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml benefiting from oxcaml/oxcaml's core optimizations and runtime improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Memory safety emphasis&lt;/strong&gt; with AddressSanitizer integration in oxcaml/oxcaml and comprehensive debugging infrastructure across both runtime4 and runtime5&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Advanced optimization techniques&lt;/strong&gt; including datalog-based dead code elimination in oxcaml/oxcaml and vectorization improvements in oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system sophistication&lt;/strong&gt; with jkind subsumption, modal bounds, and quality tracking in oxcaml/oxcaml enabling more precise type checking&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WASM platform maturation&lt;/strong&gt; in oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml with production-ready Unix operations, alternative engine support, and performance optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience improvements&lt;/strong&gt; across oxcaml/merlin with parameterized module support and file disambiguation enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compatibility&lt;/strong&gt; with ARM64 intrinsics in oxcaml/oxcaml and alternative WASM engine support in oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-7"/><summary>Major infrastructure advances across oxcaml/oxcaml, oxcaml/merlin, and oxcaml/js_of_ocaml with AddressSanitizer support, WASM improvements, and tooling enhancements</summary><published>2025-02-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-8</id><title>Week 8, 2025: Major compiler integration work across oxcaml with new Capsule API, Merlin OCaml 5.2.0 update, and WebAssembly improvements</title><updated>2025-02-23T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Capsule Key API&lt;/strong&gt; implementation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing exclusive ownership model for capsules with new functions like &lt;code&gt;with_password&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;, and &lt;code&gt;destroy&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c38d82229060922e4fca1f276316d6dc1a7e37b0"&gt;c38d822&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Updated OCaml compiler support&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; to 5.2.0minus-6 with comprehensive typing system and parser updates by &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Magic number updates&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; from I555/N555/M555/T555/S555 series to I556/N556/M556/T556/S556 series affecting CMI, AST interface, AST implementation, CMT, and CMS file formats (&lt;a href="https://github.com/oxcaml/merlin/commit/78c883a82b0791fd320b1da2459795a1c1012cd8"&gt;78c883a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1835" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly runtime type system cleanup&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with &lt;code&gt;$string&lt;/code&gt; type renamed to &lt;code&gt;$bytes&lt;/code&gt; for consistency across runtime modules (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1835"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1835&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1838" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compilation process improvements&lt;/strong&gt;&lt;/a&gt; for wasm&lt;em&gt;of&lt;/em&gt;ocaml including optimized temporary file handling and enhanced runtime linking (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1838"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1838&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime events reliability&lt;/strong&gt; improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with fixes for inactive ring handling and participant set management (&lt;a href="https://github.com/oxcaml/oxcaml/commit/5a3ff8f1a4e146525d36484dff4b98883fe71dbf"&gt;5a3ff8f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jkind bounds&lt;/strong&gt; remembering in unboxed products without &lt;code&gt;-infer-with-bounds&lt;/code&gt; flag in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6afde76b24250dde2f9d35f48df0c64ebbc99e0b"&gt;6afde76&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Primary development focus&lt;/strong&gt; centered on &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 19 merged commits covering runtime improvements, Capsule API expansion, and Flambda2 optimizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Major compiler integration&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with comprehensive update to OCaml 5.2.0minus-6 affecting 167 files and magic number changes (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1835" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly backend refinements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with systematic type system cleanup and compilation improvements (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1835"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1835&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1838"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1838&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository activity limited&lt;/strong&gt; to three active projects with no commits recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; or &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with both repositories working on OCaml 5.2.0minus-6 integration and magic number compatibility (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Flambda backend coordination&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with upstream synchronization from base revision df4a6e0ba4f74dc790e0ad79f15ea73be1225c4b to db3778f932fc0a2f9d71ba5f9dcf7c76fcc74a63 (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system evolution&lt;/strong&gt; consistency across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; jkind improvements and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; WebAssembly type naming cleanup for unified type handling approaches&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime reliability&lt;/strong&gt; becoming a major focus across multiple repositories with systematic fixes to runtime events in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, memory management improvements, and threading components&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/132" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler integration complexity&lt;/strong&gt;&lt;/a&gt; increasing as evidenced by the comprehensive &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; update involving 167 files with 17,417 additions and 15,442 deletions (&lt;a href="https://github.com/oxcaml/merlin/issues/132"&gt;oxcaml/merlin#132&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1835" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly backend maturation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with systematic cleanup and naming consistency improvements across the entire runtime system (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1835"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1835&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system refinements&lt;/strong&gt; occurring simultaneously across repositories with jkind handling in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and WebAssembly type naming in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/134" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Development infrastructure&lt;/strong&gt;&lt;/a&gt; improvements with test reliability focus in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/134"&gt;oxcaml/merlin#134&lt;/a&gt;) and build system optimization in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-8"/><summary>Major compiler integration work across oxcaml with new Capsule API, Merlin OCaml 5.2.0 update, and WebAssembly improvements</summary><published>2025-02-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-9</id><title>Week 9, 2025: Major infrastructure improvements across oxcaml/oxcaml and oxcaml/js_of_ocaml with backend optimizations and Wasm toolchain development</title><updated>2025-03-02T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Abstract instruction identifiers&lt;/strong&gt; introduced in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; backend with new &lt;code&gt;InstructionId&lt;/code&gt; module preventing accidental ID reuse (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c40a1239f432dab5add9ff632ffd6b808b7d3859"&gt;c40a123&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Or_null module moved to beta stdlib&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; enabling nullable value types with &lt;code&gt;value_or_null&lt;/code&gt; layout and comprehensive API (&lt;a href="https://github.com/oxcaml/oxcaml/commit/bff2e7d67f96bee38c31c5bc8dbfc88412f3f016"&gt;bff2e7d&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WAT file preprocessor&lt;/strong&gt; implemented in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; for managing runtime changes between OCaml versions with syntactic sugar (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/146f65466d82fabc8bd5351a90132d2286191a76"&gt;146f654&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;OCaml 4.14.3+trunk compiler support&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with updated primitive handling (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/285b2409685ea37c8412690e3537cac57d409854"&gt;285b240&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced Unix runtime functionality&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; including &lt;code&gt;caml_unix_times&lt;/code&gt; with process CPU usage tracking (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/f21eef0cb9ce0e9dae0697a210c5df2512814836"&gt;f21eef0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/135" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Magic number updates&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; to version 5.2.0minus-7 for compatibility (&lt;a href="https://github.com/oxcaml/merlin/issues/135"&gt;oxcaml/merlin#135&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler development&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 16 merged commits focusing on backend improvements, type system enhancements, and runtime optimizations&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Wasm compilation pipeline maturation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with sophisticated preprocessor tooling and expanded runtime functionality across JS and Wasm targets&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Version synchronization&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; maintaining compatibility with upstream OCaml 5.2.0minus-7 through automated import scripts&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository maintenance&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showing no activity during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Version alignment&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with both repositories updating magic numbers to 5.2.0minus-7 for toolchain compatibility (&lt;a href="https://github.com/oxcaml/oxcaml/commit/8cd78a6ff48933aa3628d861b6532695db9227d7"&gt;8cd78a6&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/commit/5b315ce617e73e143764ca6ff3676a2245b84875"&gt;5b315ce&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Layout extension coordination&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; moving or_null to beta stdlib while &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; changed Layouts extension status from Stable to Beta (&lt;a href="https://github.com/oxcaml/oxcaml/commit/bff2e7d67f96bee38c31c5bc8dbfc88412f3f016"&gt;bff2e7d&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/commit/5b315ce617e73e143764ca6ff3676a2245b84875"&gt;5b315ce&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/123" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Upstream collaboration&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and upstream maintainers with stale occurrence improvements reviewed before backporting (&lt;a href="https://github.com/oxcaml/merlin/issues/123"&gt;oxcaml/merlin#123&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3617" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Type-directed disambiguation&lt;/strong&gt;&lt;/a&gt; for integer literals ongoing in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3617"&gt;oxcaml/oxcaml#3617&lt;/a&gt; with community consensus needed before implementation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Runtime quotations implementation&lt;/strong&gt;&lt;/a&gt; receiving feedback in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;oxcaml/oxcaml#4395&lt;/a&gt; with parser change checklist and syntax test update requests&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/123" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Expert review coordination&lt;/strong&gt;&lt;/a&gt; for stale occurrence handling improvements in &lt;a href="https://github.com/oxcaml/merlin/issues/123"&gt;oxcaml/merlin#123&lt;/a&gt; with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; providing guidance&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system reliability focus&lt;/strong&gt; with extensive nullability support and improved bounds checking becoming central to compiler development across multiple repositories&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Wasm compilation toolchain maturation&lt;/strong&gt; showing sophisticated preprocessor development and cross-platform runtime standardization efforts in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Automated synchronization workflows&lt;/strong&gt; improving between repositories with streamlined import scripts reducing manual merge work in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Language feature experimentation&lt;/strong&gt; through type-directed disambiguation and runtime quotations showing active exploration of advanced compiler features in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-9"/><summary>Major infrastructure improvements across oxcaml/oxcaml and oxcaml/js_of_ocaml with backend optimizations and Wasm toolchain development</summary><published>2025-03-02T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-10</id><title>Week 10, 2025: Major compiler optimization release with automatic record reordering, alternative effects API, and synchronized toolchain updates</title><updated>2025-03-09T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Automatic record field reordering&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; to satisfy mixed block restrictions through new &lt;code&gt;Mixed_block_shape&lt;/code&gt; module (&lt;a href="https://github.com/oxcaml/oxcaml/commit/0c7e618ede64a624c550f8ad3f74d9c7ac5655b1"&gt;oxcaml/oxcaml@0c7e618&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Alternative effects API&lt;/strong&gt; introduced in &lt;code&gt;stdlib_alpha&lt;/code&gt; with typed effect handlers, continuations, and composable effect systems (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c00f9028b3fbdd690fce7f5f6ad02ad82b7fa158"&gt;oxcaml/oxcaml@c00f902&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/136" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced jkind type system&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with new &lt;code&gt;modalities&lt;/code&gt; parameter in &lt;code&gt;With&lt;/code&gt; annotations, enabling more precise type constraints (&lt;a href="https://github.com/oxcaml/merlin/issues/136"&gt;oxcaml/merlin#136&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1857" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly benchmark support&lt;/strong&gt;&lt;/a&gt; added to &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, allowing performance testing of wasm&lt;em&gt;of&lt;/em&gt;ocaml output alongside JavaScript compilation (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1857"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1857&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1855" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Double translation effects&lt;/strong&gt;&lt;/a&gt; support added to benchmarks with new compilation options for effects using both CPS and double-translation approaches (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1855"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1855&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Experimental GC pacing policy&lt;/strong&gt; for improved memory management performance (&lt;a href="https://github.com/oxcaml/oxcaml/commit/aa62a19eae2737ed94a5519cd02ae88dbe6c1f3d"&gt;oxcaml/oxcaml@aa62a19&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1850" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Node.js compatibility&lt;/strong&gt;&lt;/a&gt; improvements updating constant imports to use &lt;code&gt;node:fs&lt;/code&gt; module instead of deprecated APIs (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1850"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1850&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Primary focus&lt;/strong&gt; on &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 24 merged commits delivering major compiler optimizations, runtime improvements, and new effects API&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/136" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated toolchain updates&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; synchronizing to OCaml 5.2.0minus-8 compatibility through comprehensive upstream merge (&lt;a href="https://github.com/oxcaml/merlin/issues/136"&gt;oxcaml/merlin#136&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly development acceleration&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with enhanced benchmark infrastructure and Node.js ecosystem alignment&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository maintenance&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showing no activity this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/136" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;OCaml 5.2.0minus-8 synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, with Merlin updating magic numbers from 557 to 558 and integrating upstream compiler changes (&lt;a href="https://github.com/oxcaml/merlin/issues/136"&gt;oxcaml/merlin#136&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1855" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Effects system development&lt;/strong&gt;&lt;/a&gt; spanning &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with new &lt;code&gt;stdlib_alpha&lt;/code&gt; effects API and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with benchmark support for both CPS and double-translation compilation approaches (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1855"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1855&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system evolution&lt;/strong&gt; coordinated between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler improvements and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; enhanced jkind system with modalities support&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly integration&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; complementing compiler backend optimizations in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for multi-target code generation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/926" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Match-in-match compilation improvements&lt;/strong&gt;&lt;/a&gt; discussion by &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with detailed implementation roadmap including continuation specialization, heuristics, and partitioning algorithm extensions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/926"&gt;oxcaml/oxcaml#926&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2188" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Peephole optimization engine&lt;/strong&gt;&lt;/a&gt; proposal by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for systematic pattern matching and rewrite rules in Flambda2, including Boolean optimizations and comparison transformations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/2188"&gt;oxcaml/oxcaml#2188&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler backend sophistication&lt;/strong&gt; with systematic removal of polymorphic comparisons and advanced optimization pipeline development in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Effects system maturation&lt;/strong&gt; with alternative APIs providing more structured and composable effect handling across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and compilation target support in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Multi-target development&lt;/strong&gt; acceleration with WebAssembly becoming first-class alongside JavaScript in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; benchmark infrastructure&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Toolchain synchronization&lt;/strong&gt; patterns showing mature upstream integration processes between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; through automated conflict resolution&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-10"/><summary>Major compiler optimization release with automatic record reordering, alternative effects API, and synchronized toolchain updates</summary><published>2025-03-09T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-11</id><title>Week 11, 2025: Active development focused on type system improvements and WebAssembly runtime enhancements across core oxcaml repositories.</title><updated>2025-03-16T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Shared modality support&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; type system enabling new mode crossing capabilities (&lt;a href="https://github.com/oxcaml/oxcaml/commit/cc06112a8e5c2d761bf9d6ddd65960289c301ee4"&gt;cc06112&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Kind annotations on existential type variables&lt;/strong&gt; now supported in pattern matches for enhanced type safety (&lt;a href="https://github.com/oxcaml/oxcaml/commit/8eb1c21b9423eff3e33b6ea2cb8f80ea1dab6e9b"&gt;8eb1c21&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;BLAKE2b cryptographic primitives&lt;/strong&gt; implementation for &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; WebAssembly runtime with complete native support (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/3d8e70da7c560920857c8e487d966f55b98f2fda"&gt;3d8e70da&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced Obj.dup functionality&lt;/strong&gt; to support floats and boxed integers in the runtime (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/255e68da6653594bc9fef30c2b7ae5c9bcbef809"&gt;255e68da&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Restored &lt;code&gt;-no-mach-ir&lt;/code&gt; command-line switch&lt;/strong&gt; for backward compatibility (&lt;a href="https://github.com/oxcaml/oxcaml/commit/73ed135fdf8bec8d76aeac39b38cd5ee029babfb"&gt;73ed135&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Current-bench benchmarking support&lt;/strong&gt; with refactored infrastructure and structured measurement metadata (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/d8faae318d651ce487a1ce981001b8f102ef9e95"&gt;d8faae31&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler development&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 13 commits focused on type system safety and mode infrastructure enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly runtime expansion&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with cryptographic primitives implementation and compiler stability improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository inactivity&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with no commits during the week&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Concentrated contributor effort&lt;/strong&gt; from three core maintainers driving development across active repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system consistency&lt;/strong&gt; work between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; core compiler and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; runtime to ensure mode safety across compilation targets&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime compatibility improvements&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; type system enhancements supporting the WebAssembly runtime development in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated development&lt;/strong&gt; by &lt;a href="https://github.com/vouillon"&gt;Jérôme Vouillon&lt;/a&gt; across both active repositories, ensuring consistency in type system changes and runtime implementations&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure alignment&lt;/strong&gt; with benchmarking support added to &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; that could benefit from type system improvements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type safety emphasis&lt;/strong&gt; with systematic removal of unsafe mode crossing annotations throughout the stdlib API in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly runtime maturation&lt;/strong&gt; through implementation of cryptographic primitives and filesystem operations in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; indicating move toward feature parity with JavaScript runtime&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler reliability focus&lt;/strong&gt; with multiple fixes addressing edge cases in double translation, minification, and source map generation across &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance-focused optimizations&lt;/strong&gt; in bounds checking and code generation components spanning both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure modernization&lt;/strong&gt; through integration with current-bench tooling for continuous performance monitoring in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-11"/><summary>Active development focused on type system improvements and WebAssembly runtime enhancements across core oxcaml repositories.</summary><published>2025-03-16T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-12</id><title>Week 12, 2025: Major oxcaml compiler modernization with ARM64 SIMD, atomic interfaces, and js_of_ocaml benchmarking improvements</title><updated>2025-03-23T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3691" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Atomic module interface redesign&lt;/strong&gt;&lt;/a&gt; with new mode system replacing portable/contended annotations in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3691"&gt;oxcaml/oxcaml#3691&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3707" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 Float32 SIMD support&lt;/strong&gt;&lt;/a&gt; added with complete instruction set and runtime intrinsics in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3707"&gt;oxcaml/oxcaml#3707&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3705" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 SIMD runtime intrinsics&lt;/strong&gt;&lt;/a&gt; implementation for vector operations in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3705"&gt;oxcaml/oxcaml#3705&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3706" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 SIMD DSL&lt;/strong&gt;&lt;/a&gt; for instruction generation and selection in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3706"&gt;oxcaml/oxcaml#3706&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3587" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced GC logging system&lt;/strong&gt;&lt;/a&gt; with expanded verbose flags for detailed runtime analysis in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3587"&gt;oxcaml/oxcaml#3587&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Restored GC major&lt;em&gt;heap&lt;/em&gt;increment parameter&lt;/strong&gt; for controlling heap growth behavior in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3672"&gt;oxcaml/oxcaml#3672&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3543" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Reduced default GC space overhead&lt;/strong&gt;&lt;/a&gt; from 160% to 80% for improved memory efficiency in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3543"&gt;oxcaml/oxcaml#3543&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3681" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Extended GC pacing policy&lt;/strong&gt;&lt;/a&gt; with new "full 2025" option for advanced heap management in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3681"&gt;oxcaml/oxcaml#3681&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3640" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Mode crossing for mutable data&lt;/strong&gt;&lt;/a&gt; enabling better type safety across domain boundaries in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3640"&gt;oxcaml/oxcaml#3640&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3697" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;AddressSanitizer build compatibility&lt;/strong&gt;&lt;/a&gt; restored for debugging and testing environments in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3697"&gt;oxcaml/oxcaml#3697&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Benchmarking suite&lt;/strong&gt; targeting current-bench with dedicated Makefile targets and configuration files in &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/55c622862c506a2d403d3f1d5d5c6bfda6bf45d7"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Source map extraction&lt;/strong&gt; utility &lt;code&gt;find_in_js_file&lt;/code&gt; function to locate and parse source maps from JavaScript files in &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/7b511d35e6eb2586ff0116644e5add66fdba468a"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced file I/O functions&lt;/strong&gt; including &lt;code&gt;file_lines_text&lt;/code&gt;, &lt;code&gt;file_lines_bin&lt;/code&gt;, and optimized line reading utilities in &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/7b511d35e6eb2586ff0116644e5add66fdba468a"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/oxcaml&lt;/strong&gt; led activity with major atomic interface modernization, comprehensive ARM64 SIMD support, and GC parameter improvements across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;10+ merged PRs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/strong&gt; focused on benchmarking infrastructure with current-bench integration and code cleanup across &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;multiple commits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/opam-repository&lt;/strong&gt;, &lt;strong style="color: #cc6600;"&gt;oxcaml/merlin&lt;/strong&gt;, and &lt;strong style="color: #cc6600;"&gt;janestreet/opam-repository&lt;/strong&gt; showed no recorded activity during this period&lt;/li&gt;
&lt;li&gt;Combined effort demonstrates continued platform modernization and performance optimization focus across the oxcaml ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3677" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance monitoring alignment&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; GC runtime events in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3677"&gt;oxcaml/oxcaml#3677&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; current-bench integration demonstrating coordinated performance infrastructure development&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Code quality improvements&lt;/strong&gt; spanning both repositories with backend cleanup in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and compiler utility consolidation in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 platform focus&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; SIMD development potentially supporting future &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; ARM64 compilation targets&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3718" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Code generation optimization discussion&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; regarding bind function usage with array indexing functions and peephole optimizations in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3718"&gt;oxcaml/oxcaml#3718&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3719" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Register allocation strategy&lt;/strong&gt;&lt;/a&gt; discussion by &lt;a href="https://github.com/gretay-js"&gt;Greta Yorsh&lt;/a&gt; on implementing register rotation optimization for CFG backend similar to upstream compiler in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3719"&gt;oxcaml/oxcaml#3719&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 platform development acceleration&lt;/strong&gt; with comprehensive SIMD support, Float32 operations, and architecture-specific optimizations showing commitment to ARM64 as a first-class platform across the oxcaml ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime performance instrumentation expansion&lt;/strong&gt; through enhanced GC logging in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, runtime events, and current-bench integration in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; for production debugging&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler backend modernization&lt;/strong&gt; with code cleanup, removal of obsolete components, and improved type system integration spanning multiple repositories&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Memory management optimization focus&lt;/strong&gt; with reduced space overhead defaults, restored heap increment controls, and atomic counter consolidation demonstrating performance-first approach&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform build system improvements&lt;/strong&gt; including AddressSanitizer compatibility restoration and enhanced benchmarking infrastructure for continuous performance monitoring&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-12"/><summary>Major oxcaml compiler modernization with ARM64 SIMD, atomic interfaces, and js_of_ocaml benchmarking improvements</summary><published>2025-03-23T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-13</id><title>Week 13, 2025: Major compiler development week with portable continuations, ARM64 optimizations, backend updates, and PPX/Wasm improvements</title><updated>2025-03-30T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3541" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Portable continuations&lt;/strong&gt;&lt;/a&gt; implementation in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3541"&gt;oxcaml/oxcaml#3541&lt;/a&gt; enabling cross-domain effect handlers with new test framework&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3699" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;External extraction tool&lt;/strong&gt;&lt;/a&gt; &lt;code&gt;extract_externals.opt&lt;/code&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3699"&gt;oxcaml/oxcaml#3699&lt;/a&gt; for extracting type information from &lt;code&gt;.cmt&lt;/code&gt; files with comprehensive shape analysis&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3704" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 SIMD enhancements&lt;/strong&gt;&lt;/a&gt; with new float32 intrinsics in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3704"&gt;oxcaml/oxcaml#3704&lt;/a&gt; and additional SIMD instructions in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3747"&gt;oxcaml/oxcaml#3747&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced modes system&lt;/strong&gt; with new &lt;code&gt;Aliased&lt;/code&gt; and &lt;code&gt;Shared&lt;/code&gt; modules in &lt;code&gt;stdlib/modes.mli&lt;/code&gt; for better mode management&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;PPX function expression handling&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/fa0fc368a6a336a73d7f9b4b31eb3efca8f1352c"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; enabling &lt;code&gt;function&lt;/code&gt; syntax within JavaScript object definitions&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Wasm float array bounds fix&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/44d2050f73da3870039c453f0518526b54103c10"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; correcting bound checking for empty float arrays&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/137" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced pattern matching&lt;/strong&gt;&lt;/a&gt; with jkind annotations support in &lt;a href="https://github.com/oxcaml/merlin/issues/137"&gt;oxcaml/merlin#137&lt;/a&gt; allowing type annotations like &lt;code&gt;C (type (a : k) b) P&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3730" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;GC pacing policy&lt;/strong&gt;&lt;/a&gt; updates with dynamic space overhead adjustment in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3730"&gt;oxcaml/oxcaml#3730&lt;/a&gt; and new default pacing in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3748"&gt;oxcaml/oxcaml#3748&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler development&lt;/strong&gt; dominated by &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 34 merged PRs focusing on portable continuations, ARM64 SIMD optimizations, and type system refinements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/137" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Backend synchronization&lt;/strong&gt;&lt;/a&gt; across tools with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; updating to OCaml 5.2.0minus-9 backend in &lt;a href="https://github.com/oxcaml/merlin/issues/137"&gt;oxcaml/merlin#137&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript/Wasm improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with enhanced PPX functionality and critical Wasm bounds checking fixes&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository maintenance&lt;/strong&gt; with two opam repositories showing no activity during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/137" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Backend version synchronization&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; updating to OCaml 5.2.0minus-9 in &lt;a href="https://github.com/oxcaml/merlin/issues/137"&gt;oxcaml/merlin#137&lt;/a&gt; to align with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler changes&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Magic number coordination&lt;/strong&gt; across toolchain with updated magic numbers from 558 to 559 series affecting CMI, AST, CMT, CMS, and index files&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system consistency&lt;/strong&gt; with jkind annotations and mode crossing capabilities implemented across both core compiler and Merlin for unified type checking&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Shared infrastructure&lt;/strong&gt; improvements with enhanced parser recovery and AST handling supporting new language features across the toolchain&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3541" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Multi-domain parallelism&lt;/strong&gt;&lt;/a&gt; development with portable continuations and cross-domain effect handlers becoming production-ready in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3541"&gt;oxcaml/oxcaml#3541&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3704" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 performance optimization&lt;/strong&gt;&lt;/a&gt; focus with continuous SIMD instruction set expansion and float32 optimizations in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3704"&gt;oxcaml/oxcaml#3704&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/oxcaml/issues/3747"&gt;oxcaml/oxcaml#3747&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system safety evolution&lt;/strong&gt; through jkind annotations and enhanced mode system for better memory safety guarantees&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Direct commit workflow&lt;/strong&gt; adoption in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with commits pushed directly to main branch rather than through PR review&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Toolchain synchronization&lt;/strong&gt; emphasis with coordinated backend updates ensuring compatibility across compiler, IDE support, and compilation targets&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WebAssembly backend maturation&lt;/strong&gt; with focus on runtime correctness, bounds checking, and performance optimizations&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-13"/><summary>Major compiler development week with portable continuations, ARM64 optimizations, backend updates, and PPX/Wasm improvements</summary><published>2025-03-30T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-14</id><title>Week 14, 2025: Heavy compiler backend development and PPX infrastructure improvements across oxcaml repositories</title><updated>2025-04-06T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler comparison script&lt;/strong&gt; added for comparing two compiler versions in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b031c8f10550cafb226e23cd4d9db7296df846ec"&gt;b031c8f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 backend improvements&lt;/strong&gt; with conversion from &lt;code&gt;.mlp&lt;/code&gt; to &lt;code&gt;.ml&lt;/code&gt; format and extended DSL for instruction emission in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/7837ba159844ecb5329ca662723e097d7dcb93fe"&gt;7837ba1&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/cf170a5a4073a4693c1a64445840b373f43ce70c"&gt;cf170a5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;CFG invariants pass&lt;/strong&gt; introduced for compiler correctness validation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4d7a6a9acd283c5cfdc5cb75d9f09e3576afba77"&gt;4d7a6a9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Implicit unboxed records&lt;/strong&gt; feature implementation with extensive type system support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b6c8826b75787cc91f4442a01c30a55cdd5a4699"&gt;b6c8826&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Atomic reference counting&lt;/strong&gt; infrastructure with new header file and improved synchronization in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/a3cd51626dcae5ded4fe0f3e0d734abecde52e1c"&gt;a3cd516&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;PPX compatibility&lt;/strong&gt; improvements for ppxlib 0.36 support including new AST handling for function expressions in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/cbc9044aae647a578ae0b75abd12b5bfe8fe8c23"&gt;cbc9044&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;AST version detection&lt;/strong&gt; added to PPX preprocessor with &lt;code&gt;ast_version&lt;/code&gt; identifier for conditional compilation in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/cbc9044aae647a578ae0b75abd12b5bfe8fe8c23"&gt;cbc9044&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Local mode crossing&lt;/strong&gt; enhancements with &lt;code&gt;mod everything&lt;/code&gt; support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4e3fe417a7ac1b5b2fe979c7f9ddcbdf436c8eb7"&gt;4e3fe41&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Primary activity&lt;/strong&gt; focused on &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 32 commits implementing compiler backend modernization and advanced type system features&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Secondary activity&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; concentrated on PPX infrastructure improvements for modern OCaml toolchain compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository status&lt;/strong&gt;: Three repositories (&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;) showed no development activity during this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;PPX toolchain coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; ensuring compatibility with modern OCaml AST patterns and ppxlib version management&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Build system consistency&lt;/strong&gt; with dependency constraint normalization across &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; packages supporting unified toolchain development&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler infrastructure&lt;/strong&gt; developments in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing foundation for enhanced JavaScript compilation capabilities in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3293" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler performance optimization&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3293"&gt;oxcaml/oxcaml#3293&lt;/a&gt; led by &lt;a href="https://github.com/patrick-nicodemus"&gt;Patrick Nicodemus&lt;/a&gt; regarding imperative loop allocation issues with Flambda2 compiler&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;CPU dependency analysis&lt;/strong&gt; provided by &lt;a href="https://github.com/stedolan"&gt;Stephen Dolan&lt;/a&gt; on &lt;code&gt;cvtsi2sdq&lt;/code&gt; instruction false dependencies affecting floating-point conversion performance&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Processor optimization insights&lt;/strong&gt; shared by &lt;a href="https://github.com/chambart"&gt;Pierre Chambart&lt;/a&gt; explaining dependency tracking issues and suggesting &lt;code&gt;pxor&lt;/code&gt; instruction optimization strategies&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance benchmarking&lt;/strong&gt; analysis by &lt;a href="https://github.com/lthls"&gt;Vincent Laviron&lt;/a&gt; addressing unboxing failures in loops with detailed &lt;code&gt;perf&lt;/code&gt; statistics and micro-benchmark behavior explanations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Backend architecture modernization&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with removal of legacy code patterns and introduction of more modular design patterns&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance-focused optimizations&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; including register allocation improvements and instruction selection enhancements for better code generation&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system extensions&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with implicit unboxed records and modal kinds improvements supporting advanced OCaml language features&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer tooling improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with new comparison scripts and better debugging infrastructure for compiler development&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;PPX ecosystem modernization&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; ensuring compatibility with latest ppxlib versions and AST patterns for sustainable JavaScript compilation&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-14"/><summary>Heavy compiler backend development and PPX infrastructure improvements across oxcaml repositories</summary><published>2025-04-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-15</id><title>Week 15, 2025: Major compiler advances with Flambda2 optimization breakthroughs and enhanced mode system capabilities across oxcaml infrastructure</title><updated>2025-04-13T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Flambda2 n-way join algorithm&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing 30x performance improvement on pathological cases and 3.5x faster compilation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/a29501027d5be434ebb6752346b43700b2eb3059"&gt;a295010&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Mode system statefulness and visibility axes&lt;/strong&gt; extending the type system with new axes for stateful and visibility semantics (&lt;a href="https://github.com/oxcaml/oxcaml/commit/cb54980f013f958427184e9d34da74b126e99d73"&gt;cb54980&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/141" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Mode crossing functions&lt;/strong&gt;&lt;/a&gt; added to Merlin's Ctype module for type-based mode analysis including &lt;code&gt;crossing_of_jkind&lt;/code&gt;, &lt;code&gt;crossing_of_ty&lt;/code&gt;, and various cross operations (&lt;a href="https://github.com/oxcaml/merlin/issues/141"&gt;oxcaml/merlin#141&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;OCAMLRUNPARAM=H=1 hugepage support&lt;/strong&gt; reintroduced for forced hugepage allocation in runtime (&lt;a href="https://github.com/oxcaml/oxcaml/commit/00efa7cc0cdc1d919cce8449f243866c60493349"&gt;00efa7c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1921" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Switch compilation optimizations&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; improving generated code quality and performance (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1921"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1921&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1920" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CPS-based effects runtime&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;caml_cps_trampoline&lt;/code&gt; primitive for improved effects handling (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1920"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1920&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;CFG simplify optimization pass&lt;/strong&gt; consolidating dead code elimination and block merging optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3398e1e9a47039b600bfc164dd92d17263b7dbc3"&gt;3398e1e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 DSL extensions&lt;/strong&gt; for more instruction emission using domain-specific language approach (&lt;a href="https://github.com/oxcaml/oxcaml/commit/14e6d4d4d5ad6f56a784471e6f13ce77e4fd6fc4"&gt;14e6d4d&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1916" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;WASM AST extensions&lt;/strong&gt;&lt;/a&gt; for more comprehensive WebAssembly support (&lt;a href="https://github.com/oxcaml/js_of_ocaml/issues/1916"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1916&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Major compiler performance breakthroughs&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; delivering the Flambda2 n-way join algorithm showing 30x speedup on pathological cases and 3.5x compilation improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system evolution&lt;/strong&gt; through mode system extensions adding statefulness and visibility axes to enhance OCaml's capability for describing program semantics&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform optimization focus&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; advancing both JavaScript and WebAssembly compilation paths through 20 commits from 3 contributors&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Tooling infrastructure updates&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; integrating latest compiler changes and enhancing IDE capabilities with mode crossing support&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Modernization efforts&lt;/strong&gt; including dropped OCaml &lt; 4.13 support and comprehensive backend refactoring across multiple repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/141" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Mode system coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with compiler implementing new statefulness/visibility axes (&lt;a href="https://github.com/oxcaml/oxcaml/commit/cb54980f013f958427184e9d34da74b126e99d73"&gt;cb54980&lt;/a&gt;) and Merlin adding corresponding mode crossing APIs (&lt;a href="https://github.com/oxcaml/merlin/issues/141"&gt;oxcaml/merlin#141&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;OCaml compiler integration&lt;/strong&gt; with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; updating &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; to match the latest minus9 OCaml changes from &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; ensuring tooling compatibility&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/138" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Shared build system improvements&lt;/strong&gt;&lt;/a&gt; with Menhir version standardization affecting both &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/138"&gt;oxcaml/merlin#138&lt;/a&gt;) and broader ecosystem compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 optimization alignment&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; advancing DSL-based instruction generation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/14e6d4d4d5ad6f56a784471e6f13ce77e4fd6fc4"&gt;14e6d4d&lt;/a&gt;) while &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; maintains WebAssembly backend improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Algorithmic performance optimization&lt;/strong&gt; with dramatic improvements like the Flambda2 n-way join showing 30x speedup demonstrating focus on fundamental algorithmic advances rather than incremental improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system capability expansion&lt;/strong&gt; through mode system extensions in both compiler and tooling, indicating strategic investment in OCaml's ability to express program properties and constraints&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compilation maturation&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; advancing both JavaScript and WebAssembly targets through effects improvements and static evaluation enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure consolidation&lt;/strong&gt; with systematic removal of deprecated features, module merging, and modernization efforts across the entire toolchain&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Architecture-specific optimization&lt;/strong&gt; with continued investment in ARM64 support across both native compilation and register allocation improvements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-15"/><summary>Major compiler advances with Flambda2 optimization breakthroughs and enhanced mode system capabilities across oxcaml infrastructure</summary><published>2025-04-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-16</id><title>Week 16, 2025: Major compiler infrastructure improvements across OCaml toolchain with SIMD auto-generation, performance optimizations, and tooling fixes.</title><updated>2025-04-20T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;SIMD instruction auto-generation framework&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; &lt;code&gt;tools/simdgen/&lt;/code&gt; that automatically generates AMD64 SIMD instruction definitions and implementations from CSV data (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3f9a57ec13f6efe8a44f7d2e9aacdcc9655952ea"&gt;oxcaml/oxcaml#3f9a57e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler optimization termination&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; that stops compilation sooner when optimizations become unproductive, improving build performance (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/1fa0eca63bbf3befb245efc106d5bc041e972295"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1fa0eca&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Modality system improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for contention handling, including updates to &lt;code&gt;Obj&lt;/code&gt; module functions to properly handle &lt;code&gt;@ contended&lt;/code&gt; mode annotations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/90f6c2b81acc12f13e5b41c2890e61e436599929"&gt;oxcaml/oxcaml#90f6c2b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/142" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Fixed jump-to-definition&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; resolution bug when files have matching compilation unit names (&lt;a href="https://github.com/oxcaml/merlin/issues/142"&gt;oxcaml/merlin#142&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced first-class module implementation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for both x86 and ARM64 architectures with performance improvements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/568bc31eec7ffae5465dbe12818e3de63f922b75"&gt;oxcaml/oxcaml#568bc31&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Float representation improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; switching to bit-level representation for better precision handling (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/1fa0eca63bbf3befb245efc106d5bc041e972295"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml#1fa0eca&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Critical edge handling for CFG&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; implementation that improves control flow graph analysis and optimization (&lt;a href="https://github.com/oxcaml/oxcaml/commit/3f9a57ec13f6efe8a44f7d2e9aacdcc9655952ea"&gt;oxcaml/oxcaml#3f9a57e&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Major compiler infrastructure week&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; leading activity through 35 commits focused on SIMD auto-generation framework and backend refactoring&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization initiatives&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with compilation termination improvements and float precision handling&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/142" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Developer tooling fixes&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; addressing jump-to-definition issues with compilation unit name conflicts (&lt;a href="https://github.com/oxcaml/merlin/issues/142"&gt;oxcaml/merlin#142&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Code quality focus&lt;/strong&gt; with extensive warning system cleanup and polymorphic operation reduction across multiple repositories&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository activity concentrated&lt;/strong&gt; in three main repositories with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showing no activity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler toolchain coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; backend infrastructure improvements and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; compilation optimizations targeting OCaml compiler performance&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Development tooling ecosystem&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; editor integration fixes complementing compiler infrastructure work in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Code quality initiatives&lt;/strong&gt; spanning both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with warning system cleanup and polymorphic operation reduction&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization focus&lt;/strong&gt; coordinated across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; register allocation and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; compilation termination improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3888" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance analysis&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; reporting unboxed int64 conversion issues (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3888"&gt;oxcaml/oxcaml#3888&lt;/a&gt;) and unsafe indexing behavior (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3889"&gt;oxcaml/oxcaml#3889&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/926" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler optimization strategy&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; providing insights on match-in-match compilation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/926"&gt;oxcaml/oxcaml#926&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3718" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CMM infrastructure audit&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; creating audit issue for &lt;code&gt;bind&lt;/code&gt; usage with array functions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3718"&gt;oxcaml/oxcaml#3718&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3841" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Build system compatibility&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with &lt;a href="https://github.com/NickBarnes"&gt;Nick Barnes&lt;/a&gt; helping resolve Clang 18 build failure (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3841"&gt;oxcaml/oxcaml#3841&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler backend modernization&lt;/strong&gt; with systematic refactoring of register allocation infrastructure and code generation components across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization focus&lt;/strong&gt; spanning compilation speed improvements in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; and register allocation efficiency in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Code quality initiatives&lt;/strong&gt; with warning system cleanup in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and polymorphic operation reduction in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure tooling development&lt;/strong&gt; with automated SIMD instruction generation framework in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; improving maintainability&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type safety improvements&lt;/strong&gt; through modality system enhancements in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and float precision handling in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience focus&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; tooling fixes addressing practical development workflow issues&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-16"/><summary>Major compiler infrastructure improvements across OCaml toolchain with SIMD auto-generation, performance optimizations, and tooling fixes.</summary><published>2025-04-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-17</id><title>Week 17, 2025: Intensive compiler infrastructure development with Flambda optimizations, package ecosystem updates, and cross-repository tooling improvements.</title><updated>2025-04-27T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New register allocator command-line option&lt;/strong&gt; &lt;code&gt;-regalloc-linscan-threshold&lt;/code&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for fine-tuned control over linear scan register allocation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/db8aba1dff1a87a1c75d6ca5a1f63e680f93597b"&gt;oxcaml/oxcaml@db8aba1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced DLS.access function&lt;/strong&gt; with &lt;code&gt;unyielding once&lt;/code&gt; mode annotations for safer domain-local storage access in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b768626b951cd3a8769dd014b3e1d3c6d19ef865"&gt;oxcaml/oxcaml@b768626&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New &lt;code&gt;--empty-sourcemap&lt;/code&gt; flag&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; for generating empty source maps with comprehensive testing coverage (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/3a8e777be4c042dfa3424edefd2b4fa891df500d"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml@3a8e777&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/4bafb2ee6cb2aff099f1e859cb66fc0c513bf53e"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml@4bafb2e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New &lt;code&gt;--debug stats&lt;/code&gt; option&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; for compiler debugging with detailed inlining statistics (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/8cf2a4c905aab11e1a5a7ec575460ab710bf9a7a"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml@8cf2a4c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street ecosystem v0.18~preview.130.26+1192&lt;/strong&gt; comprehensive release across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with js&lt;em&gt;of&lt;/em&gt;ocaml 6.0.1+jst toolchain upgrade (&lt;a href="https://github.com/oxcaml/opam-repository/commit/29ae8c316f52fa2d2675077e496ca549ea156510"&gt;oxcaml/opam-repository@29ae8c3&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/commit/d0e9f8a484ffbdb3017ec61ad8ae3f000c398b8b"&gt;janestreet/opam-repository@d0e9f8a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Comprehensive kinds system documentation&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; covering syntax, types, and non-modal kinds with extensive examples (&lt;a href="https://github.com/oxcaml/oxcaml/commit/689b66ce5466c88a68d3298673e2f5df82dd98ab"&gt;oxcaml/oxcaml@689b66c&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler infrastructure&lt;/strong&gt; improvements across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with Flambda2 continuation specialization work by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; and register allocation enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package ecosystem&lt;/strong&gt; major updates with Jane Street v0.18 preview release coordinated between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml toolchain&lt;/strong&gt; development with source map enhancements, compiler optimizations, and debugging improvements in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Editor tooling&lt;/strong&gt; progress in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with marshal optimizations and occurrence detection improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-repository coordination&lt;/strong&gt; evident in js&lt;em&gt;of&lt;/em&gt;ocaml upgrades synchronized across package repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml toolchain synchronization&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; development and package repository updates in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with version 6.0.1+jst upgrades&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street ecosystem release coordination&lt;/strong&gt; with identical v0.18~preview.130.26+1192 releases published simultaneously across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/opam-repository/commit/29ae8c316f52fa2d2675077e496ca549ea156510"&gt;oxcaml/opam-repository@29ae8c3&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/commit/d0e9f8a484ffbdb3017ec61ad8ae3f000c398b8b"&gt;janestreet/opam-repository@d0e9f8a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml/merlin/issues/1885" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Upstream merlin coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; changes being reviewed against &lt;a href="https://github.com/ocaml/merlin"&gt;ocaml/merlin&lt;/a&gt; through &lt;a href="https://github.com/ocaml/merlin/issues/1885"&gt;ocaml/merlin#1885&lt;/a&gt; for stale occurrences improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler-tooling integration&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; register allocation improvements potentially benefiting &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; compilation performance&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package dependency updates&lt;/strong&gt; ensuring OCaml &gt;= 5.1.0 and dune &gt;= 3.17.0 compatibility across all Jane Street packages in both repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Pattern-matching compilation inefficiency&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3914"&gt;oxcaml/oxcaml#3914&lt;/a&gt; showing poor code generation for equality functions using exhaustive pattern matching&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/123" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Stale occurrences improvement review&lt;/strong&gt;&lt;/a&gt; coordinated by &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; to connect &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; with expert reviewers for &lt;a href="https://github.com/oxcaml/merlin/issues/123"&gt;oxcaml/merlin#123&lt;/a&gt; and upstream &lt;a href="https://github.com/ocaml/merlin/issues/1885"&gt;ocaml/merlin#1885&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Continuation specialization infrastructure&lt;/strong&gt; development in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; progressing systematically with multiple foundational PRs merged as preparation for advanced match-in-match optimization features&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Source map tooling expansion&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with empty source map generation capabilities and enhanced debugging support for development workflows&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-repository synchronization&lt;/strong&gt; patterns emerging with coordinated releases between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; ensuring consistent toolchain versions&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Upstream collaboration focus&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; changes being systematically reviewed against &lt;a href="https://github.com/ocaml/merlin"&gt;ocaml/merlin&lt;/a&gt; for integration potential&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler performance optimization&lt;/strong&gt; initiatives across both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; register allocation and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; optimization passes for improved compilation efficiency&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Documentation completeness&lt;/strong&gt; initiative in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with extensive kinds system documentation indicating focus on developer experience improvements&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-17"/><summary>Intensive compiler infrastructure development with Flambda optimizations, package ecosystem updates, and cross-repository tooling improvements.</summary><published>2025-04-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-18</id><title>Week 18, 2025: Core compiler development and package maintenance dominated the week with SIMD documentation, CFG improvements, and compatibility fixes</title><updated>2025-05-04T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;SIMD documentation&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with comprehensive guide covering 128-bit vector types and SSE4.2 intrinsics (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d95e9c9650b2f8dfa9f7ce6f934bcf28e74d3439"&gt;d95e9c9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Small-numbers documentation&lt;/strong&gt; added covering float32 types with literal syntax (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d95e9c9650b2f8dfa9f7ce6f934bcf28e74d3439"&gt;d95e9c9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;CFG instruction tracking&lt;/strong&gt; enhanced with &lt;code&gt;next_instruction_id&lt;/code&gt; field for better instruction sequence management (&lt;a href="https://github.com/oxcaml/oxcaml/commit/b04e920eefd029647e127fb66dddccb38b5bd7c8"&gt;b04e920&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Flambda2 replay history&lt;/strong&gt; system added for improved downward pass name matching in match-in-match scenarios (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e8058d535d598c67e20caeb5c5ea80a5cda454d7"&gt;e8058d5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Parameter name refactoring&lt;/strong&gt; introduced &lt;code&gt;Parameter_name.t&lt;/code&gt; type to reduce unnecessary .cmi dependencies (&lt;a href="https://github.com/oxcaml/oxcaml/commit/de413fd409f255bea15dcea441ce4bc6ed79cdd9"&gt;de413fd&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package compatibility fixes&lt;/strong&gt; implemented across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; including topkg.1.0.8+jst string handling patch (&lt;a href="https://github.com/oxcaml/opam-repository/commit/7dba31283190448b97ab371819831ce301ff0c71"&gt;7dba312&lt;/a&gt;) and LSP server version corrections (&lt;a href="https://github.com/oxcaml/opam-repository/commit/7e7a9ebd780ed851195bb77144fbcc731f480a58"&gt;7e7a9eb&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler development&lt;/strong&gt; concentrated on &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with backend improvements, SIMD documentation, and CFG instruction tracking enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package maintenance&lt;/strong&gt; activities across both &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; addressing compatibility issues with OCaml 5.2.0+flambda2&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity&lt;/strong&gt; reported from &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Technical discussions&lt;/strong&gt; focused on runtime timing hooks, pattern-matching optimization, and build system integration issues&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/38" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Package synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with &lt;a href="https://github.com/dkalinichenko"&gt;@dkalinichenko&lt;/a&gt; implementing fixes in oxcaml repo (&lt;a href="https://github.com/oxcaml/opam-repository/commit/7dba31283190448b97ab371819831ce301ff0c71"&gt;7dba312&lt;/a&gt;) while &lt;a href="https://github.com/dkalinichenko-js"&gt;@dkalinichenko-js&lt;/a&gt; addressed corresponding issues in janestreet repo (&lt;a href="https://github.com/janestreet/opam-repository/issues/38"&gt;janestreet/opam-repository#38&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/40" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;OCaml 5.2.0+flambda2 compatibility&lt;/strong&gt;&lt;/a&gt; work spanning both repositories with shared focus on resolving intrinsics kernel, topkg, and LSP server package issues (&lt;a href="https://github.com/janestreet/opam-repository/issues/40"&gt;janestreet/opam-repository#40&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/41"&gt;janestreet/opam-repository#41&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Flambda2 compiler development&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; directly supporting package compatibility efforts in both opam repositories with replay history improvements (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e8058d535d598c67e20caeb5c5ea80a5cda454d7"&gt;e8058d5&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3956" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Runtime timing hooks problematic in multi-core&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/NickBarnes"&gt;Nick Barnes&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3956"&gt;oxcaml/oxcaml#3956&lt;/a&gt; highlighting thread safety issues with timing hooks in multi-domain programs and suggesting runtime events as alternative&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3914" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Pattern-matching equality optimization&lt;/strong&gt;&lt;/a&gt; discussion by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3914"&gt;oxcaml/oxcaml#3914&lt;/a&gt; about inefficient code generation for equality functions via pattern matching, with detailed technical responses from &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; and &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; discussing flambda2 optimizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/42" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Dune project root detection&lt;/strong&gt;&lt;/a&gt; limitations discussed in &lt;a href="https://github.com/janestreet/opam-repository/issues/42"&gt;janestreet/opam-repository#42&lt;/a&gt; regarding sandboxing directory trees and preventing upward search for dune-project files during local switch creation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/40" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 architecture compatibility&lt;/strong&gt;&lt;/a&gt; discussed in &lt;a href="https://github.com/janestreet/opam-repository/issues/40"&gt;janestreet/opam-repository#40&lt;/a&gt; for ocaml-intrinsics-kernel with temporary fixes implemented until next compiler upgrade&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/40" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Flambda2 compatibility&lt;/strong&gt;&lt;/a&gt; issues emerging as a recurring theme across multiple packages requiring compiler-specific fixes in both &lt;a href="https://github.com/janestreet/opam-repository/issues/40"&gt;janestreet/opam-repository#40&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository/issues/41"&gt;janestreet/opam-repository#41&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/42" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Build system integration&lt;/strong&gt;&lt;/a&gt; problems between opam and dune when working with local switches and project files, highlighting toolchain integration challenges (&lt;a href="https://github.com/janestreet/opam-repository/issues/42"&gt;janestreet/opam-repository#42&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/40" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Cross-architecture support&lt;/strong&gt;&lt;/a&gt; focus with ARM64-specific build failures requiring architecture-aware package maintenance (&lt;a href="https://github.com/janestreet/opam-repository/issues/40"&gt;janestreet/opam-repository#40&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Documentation investment&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with comprehensive SIMD and small-numbers documentation suggesting increased focus on developer experience (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d95e9c9650b2f8dfa9f7ce6f934bcf28e74d3439"&gt;d95e9c9&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-18"/><summary>Core compiler development and package maintenance dominated the week with SIMD documentation, CFG improvements, and compatibility fixes</summary><published>2025-05-04T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-19</id><title>Week 19, 2025: Major compiler backend modernization with new Blambda IR, extensive js_of_ocaml optimizations, and coordinated Jane Street ecosystem release</title><updated>2025-05-11T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3590" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Blambda IR for bytecode compilation&lt;/strong&gt;&lt;/a&gt; - new intermediate representation separating lambda-to-bytecode translation into two stages for better maintainability (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3590"&gt;oxcaml/oxcaml#3590&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3746" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 CSSC instruction support&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;-fcssc&lt;/code&gt; compiler flag enabling Common Short Sequence Compression instructions for optimized &lt;code&gt;popcnt&lt;/code&gt; and &lt;code&gt;ctz&lt;/code&gt; operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3746"&gt;oxcaml/oxcaml#3746&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3773" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Configurable fiber stack sizes&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;-Xfiber_stack_size=&lt;/code&gt; runtime parameter allowing custom stack sizes for Effect-based fibers (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3773"&gt;oxcaml/oxcaml#3773&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3986" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced signal stack computation&lt;/strong&gt;&lt;/a&gt; using dynamic &lt;code&gt;AT_MINSIGSTKSZ&lt;/code&gt; values on Linux to handle systems with larger signal stack requirements, particularly for AMX-enabled glibc (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3986"&gt;oxcaml/oxcaml#3986&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New &lt;code&gt;-dblambda&lt;/code&gt; debugging flag&lt;/strong&gt; for dumping Blambda terms before bytecode generation to aid compiler development&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Deadcode elimination improvements&lt;/strong&gt; with empty block removal and unused block cleanup across multiple commits (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/a4d25311f402ed6cab1d403e6929d3d83c9bc04a"&gt;a4d25311f4&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/c278376eb8a685dec982a34f75baa3c2d039cf6e"&gt;c278376eb8&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/e2c3e9d25b7e7f26e800dfb3b24335b050b5c741"&gt;e2c3e9d25b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Coloring optimization speedup&lt;/strong&gt; for faster compilation (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/4ed01240ec54041acb62b1cfa935c20f2d9b58d2"&gt;4ed01240ec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Static evaluation of integer operations&lt;/strong&gt; including modulo and division operations (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/c9ac0cf00d34c875024acfb342cc4b369ede626f"&gt;c9ac0cf00d&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New Jane Street packages&lt;/strong&gt; including &lt;code&gt;float_array&lt;/code&gt; for mutable float vectors, &lt;code&gt;oklab&lt;/code&gt; for color space operations, &lt;code&gt;simple_xml&lt;/code&gt; for XML processing, and &lt;code&gt;toplayer&lt;/code&gt; for top-level functionality (&lt;a href="https://github.com/oxcaml/opam-repository/commit/55a5d4c5e35a7365ddd6ffb3b87274a77f77deb5"&gt;55a5d4c&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced js&lt;em&gt;of&lt;/em&gt;ocaml compatibility&lt;/strong&gt; with OCaml 5.2.0 through updated compiler patches and internal object handling (&lt;a href="https://github.com/oxcaml/opam-repository/commit/3dc83d849d8acac8b2846a8e6a104dc68e021bb1"&gt;3dc83d8&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler infrastructure modernization&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; receiving the new Blambda IR system, ARM64 CSSC instruction support, and configurable fiber stack sizes&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compilation toolchain optimization&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; implementing extensive deadcode elimination, coloring speedup, and static evaluation improvements across 23 commits&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated ecosystem release&lt;/strong&gt; with both &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; updating 200+ Jane Street packages from v0.18~preview.130.26+1192 to v0.18~preview.130.31+242&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Maintenance and compatibility work&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and package repositories to support OCaml 5.2.0minus-10 compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Active community engagement&lt;/strong&gt; with uniqueness mode testing, build environment troubleshooting, and ARM64 platform support improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated Jane Street package releases&lt;/strong&gt; with synchronized updates across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;, both updating to v0.18~preview.130.31+242 with identical new packages: float&lt;em&gt;array, oklab, simple&lt;/em&gt;xml, and toplayer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;OCaml 5.2.0minus-10 compatibility maintenance&lt;/strong&gt;&lt;/a&gt; coordinated across &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt;) and package repositories, ensuring toolchain compatibility with bugfix releases&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript compilation ecosystem work&lt;/strong&gt; by &lt;a href="https://github.com/dkalinichenko"&gt;Diana Kalinichenko&lt;/a&gt; spanning &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; js&lt;em&gt;of&lt;/em&gt;ocaml package updates and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; compiler optimizations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3574" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 platform support coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; closing ARM64+greedy compilation bugs in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3574"&gt;oxcaml/oxcaml#3574&lt;/a&gt;) while &lt;a href="https://github.com/matthewelse"&gt;Matthew Else&lt;/a&gt; worked on ARM64 runtime fixes in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/janestreet/opam-repository/pull/45"&gt;janestreet/opam-repository#45&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/44" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Uniqueness mode behavior investigation&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository/issues/44"&gt;janestreet/opam-repository#44&lt;/a&gt; where &lt;a href="https://github.com/onsah"&gt;Onur Şahin&lt;/a&gt; reported compiler output differences between LSP and dune build, with &lt;a href="https://github.com/matthewelse"&gt;Matthew Else&lt;/a&gt; providing troubleshooting guidance and example repositories&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Commit management coordination&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt; where &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; made decisions about reverting commits c8640ad and 689aabf during team absence, ensuring alignment with internal codebase version 333038c&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/42" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Local switch creation troubleshooting&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository/issues/42"&gt;janestreet/opam-repository#42&lt;/a&gt; where &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; reported dune-project interference with switch creation, leading to technical analysis by &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; and &lt;a href="https://github.com/smuenzel"&gt;Stefan Muenzel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/43" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Borrowing implementation roadmap discussion&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository/issues/43"&gt;janestreet/opam-repository#43&lt;/a&gt; where &lt;a href="https://github.com/onsah"&gt;Onur Şahin&lt;/a&gt; inquired about Rust-style borrowing support, receiving roadmap information from &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt; about current development priorities&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Backend modernization acceleration&lt;/strong&gt; with the introduction of Blambda IR in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; representing a shift toward more modular compiler architecture that separates concerns between high-level transformations and bytecode generation&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Architecture-specific optimization focus&lt;/strong&gt; continuing with ARM64 CSSC support in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, following the pattern of leveraging newer CPU instruction sets for performance improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compilation performance prioritization&lt;/strong&gt; evident in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with multiple optimization passes being refined, deadcode elimination improvements, and coloring speedup implementation&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated release automation maturity&lt;/strong&gt; demonstrated by synchronized Jane Street package updates across multiple repositories, indicating sophisticated CI/CD infrastructure for ecosystem management&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3959" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced debugging and developer tooling&lt;/strong&gt;&lt;/a&gt; with new dump flags, improved CI integration including AddressSanitizer (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3959"&gt;oxcaml/oxcaml#3959&lt;/a&gt;), and debug statistics for compiler analysis&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime configurability expansion&lt;/strong&gt; with fiber stack size options in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, indicating ongoing work to make the runtime more adaptable to different use cases and deployment environments&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-19"/><summary>Major compiler backend modernization with new Blambda IR, extensive js_of_ocaml optimizations, and coordinated Jane Street ecosystem release</summary><published>2025-05-11T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-20</id><title>Week 20, 2025: Major development week with 16 merged PRs in oxcaml/oxcaml, extensive js_of_ocaml optimizations, and repository restructuring</title><updated>2025-05-18T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4000" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;New compiler debugging flags&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4000"&gt;oxcaml/oxcaml#4000&lt;/a&gt; including &lt;code&gt;-save-ir-before&lt;/code&gt; for intermediate representation debugging and register allocation tools&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;WASM binary module output&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with sourcemap support for improved debugging (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/eb009fd929f1fccd7b2be0fa19f2f0f7e2b8a1c9"&gt;eb009fd&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/b8b7df4f032495850aac1124f58feb7d10f69054"&gt;b8b7df4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3854" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Type system separability axis improvements&lt;/strong&gt;&lt;/a&gt; for or-null types with enhanced bounds checking in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3854"&gt;oxcaml/oxcaml#3854&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/54" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Dune package management compatibility&lt;/strong&gt;&lt;/a&gt; through repository layout reorganization in &lt;a href="https://github.com/janestreet/opam-repository/pull/54"&gt;janestreet/opam-repository#54&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler upgrade to OCaml 4.14.2&lt;/strong&gt; addressing platform-specific compilation issues in &lt;a href="https://github.com/oxcaml/opam-repository/commit/28cdd2a7703f3e840f7ae33f4624f0acf0f8c2e6"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Profile system refactoring&lt;/strong&gt; in js&lt;em&gt;of&lt;/em&gt;ocaml with new debug option &lt;code&gt;--debug var&lt;/code&gt; for unique variable names (&lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/c599c2c37ce8ad5bfb00027fc05645089808f0ee"&gt;c599c2c&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml/commit/6b8fac6fa54df6b35428012e8e7a38e0534f5c4a"&gt;6b8fac6&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Active compiler development&lt;/strong&gt; with 16 merged PRs in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; focusing on type system enhancements, backend improvements, and developer tooling&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Major js&lt;em&gt;of&lt;/em&gt;ocaml optimization cycle&lt;/strong&gt; with 47 commits implementing WASM binary output, performance improvements, and compilation speed enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository infrastructure modernization&lt;/strong&gt; across both opam repositories with package restructuring, compiler upgrades, and dependency management improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compatibility focus&lt;/strong&gt; addressing compilation issues on different architectures and operating systems&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience improvements&lt;/strong&gt; through enhanced debugging tools, better error reporting, and streamlined installation procedures&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/pull/145" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; addressing 5.2.0minus-9 magic number compatibility and runtime float32 support in &lt;a href="https://github.com/oxcaml/merlin/pull/145"&gt;oxcaml/merlin#145&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package management coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; for layout migration and compiler upgrades, both reaching identical end commits &lt;a href="https://github.com/oxcaml/opam-repository/commit/28cdd2a7703f3e840f7ae33f4624f0acf0f8c2e6"&gt;28cdd2a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml ecosystem integration&lt;/strong&gt; with &lt;a href="https://github.com/patricoferris"&gt;Patrick Ferris&lt;/a&gt; working on toplevel JS extensions support in &lt;a href="https://github.com/janestreet/opam-repository/pull/55"&gt;janestreet/opam-repository#55&lt;/a&gt; complementing the WASM improvements in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/51" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street package dependency coordination&lt;/strong&gt;&lt;/a&gt; ensuring compatible preview versions across both opam repositories with base dependency management (&lt;a href="https://github.com/janestreet/opam-repository/pull/51"&gt;janestreet/opam-repository#51&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/pull/52" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Documentation consistency&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; improving README files in both opam repositories to remove hardcoded version strings (&lt;a href="https://github.com/oxcaml/opam-repository/commit/078589549b6f3ae106a7df9625a767357ecffad6"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/pull/52"&gt;janestreet/opam-repository#52&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Documentation quality improvement initiative&lt;/strong&gt;&lt;/a&gt; led by &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;oxcaml/oxcaml#4016&lt;/a&gt; focusing on making code examples copy-paste ready, with &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; supporting the effort&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/44" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Uniqueness mode compiler behavior investigation&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/onsah"&gt;Onur Şahin&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository/issues/44"&gt;janestreet/opam-repository#44&lt;/a&gt; regarding unexpected aliased value errors with &lt;code&gt;@unique&lt;/code&gt; annotations, with troubleshooting support from &lt;a href="https://github.com/matthewelse"&gt;Matthew Else&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compatibility discussions&lt;/strong&gt; addressing compilation challenges on NixOS and Arch Linux systems with newer GCC versions, leading to the compiler upgrade to 4.14.2&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Switch setup debugging&lt;/strong&gt; discussions around local vs global switch creation and dune version compatibility issues affecting OxCaml installations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization focus&lt;/strong&gt; across the group with compilation speed improvements in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, type system optimizations in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;, and package management efficiency improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package management modernization&lt;/strong&gt; trend toward supporting multiple package managers (opam and dune pkg) for broader ecosystem compatibility across both opam repositories&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4000" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience prioritization&lt;/strong&gt;&lt;/a&gt; through enhanced debugging tools (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4000"&gt;oxcaml/oxcaml#4000&lt;/a&gt;), better error reporting, WASM sourcemap support, and documentation improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform robustness emphasis&lt;/strong&gt; addressing platform-specific compilation issues and runtime compatibility to improve OxCaml accessibility across different operating systems&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system maturation&lt;/strong&gt; with concentrated effort on advanced features like jkinds, separability axis, and modal types indicating evolution toward production-ready advanced type system concepts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3989" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Code quality infrastructure&lt;/strong&gt;&lt;/a&gt; improvements including automated formatting checks (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3989"&gt;oxcaml/oxcaml#3989&lt;/a&gt;), warning cleanup, and documentation standardization efforts&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-20"/><summary>Major development week with 16 merged PRs in oxcaml/oxcaml, extensive js_of_ocaml optimizations, and repository restructuring</summary><published>2025-05-18T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-21</id><title>Week 21, 2025: Major infrastructure modernization across repositories with API cleanup, package reorganization, and comprehensive documentation updates</title><updated>2025-05-25T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Experimental API removal&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with complete deletion of capsule and effects APIs from stdlib_alpha (&lt;a href="https://github.com/oxcaml/oxcaml/commit/44086793f3aaf477c200707ffef9554202a21a22"&gt;44086793&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced atomics support&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with value&lt;em&gt;or&lt;/em&gt;null operations and proper result kind inference (&lt;a href="https://github.com/oxcaml/oxcaml/commit/55f0a271ec731d6c9fc3e89d89d5a2016c79df1c"&gt;55f0a271&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Nested unboxed records support&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; inside boxed records with comprehensive test coverage (&lt;a href="https://github.com/oxcaml/oxcaml/commit/687c12e9c4ebfd025f9644f285dd8f907d264716"&gt;687c12e9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/54" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Repository structure reorganization&lt;/strong&gt;&lt;/a&gt; in both &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; for dune pkg compatibility (&lt;a href="https://github.com/oxcaml/opam-repository/issues/54"&gt;oxcaml/opam-repository#54&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/54"&gt;janestreet/opam-repository#54&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 ThreadSanitizer support&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 128-bit register save/restore functionality (&lt;a href="https://github.com/oxcaml/oxcaml/commit/6fa55a12af901242301eafceb958d6eecf5119c3"&gt;6fa55a12&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced x86 assembly directives&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with new v2 implementation (&lt;a href="https://github.com/oxcaml/oxcaml/commit/8263ffec91557529e3fcec739e0711117f86139f"&gt;8263ffec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/56" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;mdx 2.5.0 package addition&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with oxcaml compiler support (&lt;a href="https://github.com/janestreet/opam-repository/issues/56"&gt;janestreet/opam-repository#56&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/strong&gt; delivered major compiler improvements with API cleanup, enhanced type system features, and comprehensive documentation updates&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/strong&gt; underwent parallel infrastructure modernization for improved package management compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;&lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;&lt;/strong&gt; had no activity during this period&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Combined effort&lt;/strong&gt; focused on ecosystem maturation, developer experience improvements, and tooling compatibility across the Jane Street OCaml ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/54" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Synchronized package structure modernization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; implementing identical dune pkg compatibility changes (&lt;a href="https://github.com/oxcaml/opam-repository/issues/54"&gt;oxcaml/opam-repository#54&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/54"&gt;janestreet/opam-repository#54&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/52" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated documentation improvements&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; addressing installation instructions across both repository forks (&lt;a href="https://github.com/oxcaml/opam-repository/issues/52"&gt;oxcaml/opam-repository#52&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/52"&gt;janestreet/opam-repository#52&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Shared infrastructure maintenance&lt;/strong&gt; with &lt;a href="https://github.com/art-w"&gt;@art-w&lt;/a&gt; leading comprehensive restructuring efforts affecting over 930 files in both opam repositories&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/57" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compatibility work&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/glittershark"&gt;Aspen Smith&lt;/a&gt; improving script portability for NixOS in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/janestreet/opam-repository/issues/57"&gt;janestreet/opam-repository#57&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4033" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler compatibility issues&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; regarding runtime4 compilation failures with recent GCC versions in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4033"&gt;oxcaml/oxcaml#4033&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4026" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Documentation enhancement discussions&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; addressing missing unique allocation keywords and domain terminology in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4026"&gt;oxcaml/oxcaml#4026&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4031"&gt;oxcaml/oxcaml#4031&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/42" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Local switch creation challenges&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with dune-project conflicts affecting developer workflows (&lt;a href="https://github.com/janestreet/opam-repository/issues/42"&gt;janestreet/opam-repository#42&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/44" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Uniqueness mode debugging&lt;/strong&gt;&lt;/a&gt; assistance provided in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; for users experiencing unexpected compiler behavior (&lt;a href="https://github.com/janestreet/opam-repository/issues/44"&gt;janestreet/opam-repository#44&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Ecosystem maturation&lt;/strong&gt; through API consolidation with removal of experimental features and deprecated attributes across the compiler stack&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure standardization&lt;/strong&gt; movement toward opam-repository compatibility improving ecosystem integration and reducing maintenance overhead&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience focus&lt;/strong&gt; with enhanced error messages, simplified installation workflows, and comprehensive documentation updates&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compatibility&lt;/strong&gt; emphasis with ARM64 ThreadSanitizer support, NixOS script fixes, and runtime stability improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Build system modernization&lt;/strong&gt; trend of consolidating complex multi-package dependencies into unified solutions for easier management&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-21"/><summary>Major infrastructure modernization across repositories with API cleanup, package reorganization, and comprehensive documentation updates</summary><published>2025-05-25T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-22</id><title>Week 22, 2025: Jane Street preview release v0.18~preview.130.33+516 with mode system documentation, compiler optimizations, and ecosystem compatibility fixes</title><updated>2025-06-01T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Comprehensive mode system documentation&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; covering all modal axes including locality, portability, contention, uniqueness, linearity, yielding, visibility, and statefulness with detailed syntax reference (&lt;a href="https://github.com/oxcaml/oxcaml/commit/8224b2c17d8c76ba28164c1962015efb0139ad36"&gt;8224b2c1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;CSV output option&lt;/strong&gt; for the standalone regalloc tool via &lt;code&gt;-csv-output&lt;/code&gt; flag for performance analysis in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/59e8704f9cb26e2120a485d70070986798ba7af9"&gt;59e8704f&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;MDX package 2.5.0+jst&lt;/strong&gt; added to &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; for executable code blocks in markdown documentation (&lt;a href="https://github.com/oxcaml/opam-repository/commit/1f56e059da769e834229e3e9321fcb8d9fa20a94"&gt;1f56e059&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Extension universe beta flag&lt;/strong&gt; updated from alpha in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; for unstable features like comprehensions (&lt;a href="https://github.com/oxcaml/opam-repository/commit/b2ecd090dff1b2fdac6fc2a3d800645bb927e61a"&gt;b2ecd090&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;macOS compatibility improvements&lt;/strong&gt; across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; including ARM debugging patches and HAS&lt;em&gt;HUGE&lt;/em&gt;PAGES compilation fixes (&lt;a href="https://github.com/oxcaml/opam-repository/commit/8aafec1c"&gt;8aafec1c&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/commit/b59c117c"&gt;b59c117c&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Major ecosystem release&lt;/strong&gt; with Jane Street preview version v0.18~preview.130.33+516 coordinated across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; updating 200+ packages&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Documentation-driven development&lt;/strong&gt; with extensive mode system documentation added to &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing comprehensive coverage of modal programming features&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform stability focus&lt;/strong&gt; addressing macOS ARM and x86 compatibility issues in compiler and runtime systems&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Active maintenance&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with version synchronization and compatibility updates for 5.2.0minus-9 branch&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated version synchronization&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; for Jane Street preview release v0.18~preview.130.33+516 affecting 200+ packages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/145" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Merlin tooling alignment&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; version bumps to 5.2.1-502+jst matching compiler release cycle (&lt;a href="https://github.com/oxcaml/merlin/issues/145"&gt;oxcaml/merlin#145&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler tooling updates&lt;/strong&gt; across repositories including merlin 5.2.1-502+jst and ocaml-lsp-server 1.19.0+jst distributed through &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/56" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Shared dependency management&lt;/strong&gt;&lt;/a&gt; with MDX 2.5.0+jst support spanning both &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/janestreet/opam-repository/issues/56"&gt;janestreet/opam-repository#56&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Documentation quality improvements&lt;/strong&gt;&lt;/a&gt; discussion initiated by &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; about making code examples copy-paste ready in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;oxcaml/oxcaml#4016&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/49" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Package compatibility concerns&lt;/strong&gt;&lt;/a&gt; raised by &lt;a href="https://github.com/dkalinichenko-js"&gt;@dkalinichenko-js&lt;/a&gt; regarding ppx_deriving version compatibility with ppxlib.0.33.0 in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/janestreet/opam-repository/issues/49"&gt;janestreet/opam-repository#49&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/60" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Base library compilation issues&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/nathanfarlow"&gt;Nathan Farlow&lt;/a&gt; where base.v0.17.2 failed due to syntax errors requiring preview version workaround (&lt;a href="https://github.com/janestreet/opam-repository/issues/60"&gt;janestreet/opam-repository#60&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/56" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Import coordination&lt;/strong&gt;&lt;/a&gt; discussion about merging MDX support after internal version control system integration (&lt;a href="https://github.com/janestreet/opam-repository/issues/56"&gt;janestreet/opam-repository#56&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Documentation-first development approach&lt;/strong&gt; with extensive mode system documentation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; providing comprehensive coverage before feature completion&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform compatibility focus&lt;/strong&gt; addressing macOS ARM and x86 specific issues across multiple repositories with systematic testing and fixes&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Community-driven quality assurance&lt;/strong&gt; with external contributors like &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; and &lt;a href="https://github.com/nathanfarlow"&gt;Nathan Farlow&lt;/a&gt; identifying issues and providing feedback&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated ecosystem releases&lt;/strong&gt; showing mature release management across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; with synchronized version updates&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance tooling enhancement&lt;/strong&gt; with CSV output capabilities and runtime optimization focus improving developer experience for performance analysis&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-22"/><summary>Jane Street preview release v0.18~preview.130.33+516 with mode system documentation, compiler optimizations, and ecosystem compatibility fixes</summary><published>2025-06-01T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-23</id><title>Week 23, 2025: Active OCaml development with compiler optimizations, tooling updates, and package compilation fixes</title><updated>2025-06-08T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;Added &lt;strong style="color: #cc6600;"&gt;&lt;code&gt;-o&lt;/code&gt; output flag&lt;/strong&gt; to ocamldep for writing dependencies to a file instead of stdout (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4045"&gt;oxcaml/oxcaml#4045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Introduced &lt;strong style="color: #cc6600;"&gt;&lt;code&gt;-I-paths&lt;/code&gt; and &lt;code&gt;-H-paths&lt;/code&gt; flags&lt;/strong&gt; to replace the &lt;code&gt;-libloc&lt;/code&gt; mechanism, allowing direct specification of available files via path files (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3974"&gt;oxcaml/oxcaml#3974&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Implemented &lt;a href="https://github.com/oxcaml/oxcaml/issues/3545" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;flambda2 continuation shortcuts&lt;/strong&gt;&lt;/a&gt; optimization for better performance in apply_cont operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3545"&gt;oxcaml/oxcaml#3545&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enhanced &lt;a href="https://github.com/oxcaml/oxcaml/issues/4105" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;product array error messages&lt;/strong&gt;&lt;/a&gt; to be more informative for mixed product arrays (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4105"&gt;oxcaml/oxcaml#4105&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Added &lt;strong style="color: #cc6600;"&gt;&lt;code&gt;parameterised_modules: true&lt;/code&gt; to &lt;code&gt;-config&lt;/code&gt;&lt;/strong&gt; output for feature detection (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4021"&gt;oxcaml/oxcaml#4021&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed &lt;a href="https://github.com/oxcaml/oxcaml/issues/4091" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;genprintval layout bug&lt;/strong&gt;&lt;/a&gt; preventing calls to &lt;code&gt;is_null&lt;/code&gt; on &lt;code&gt;value&lt;/code&gt; layout (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4091"&gt;oxcaml/oxcaml#4091&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed &lt;a href="https://github.com/oxcaml/oxcaml/issues/4069" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;binary emitter VEX encoding bug&lt;/strong&gt;&lt;/a&gt; in x86 code generation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4069"&gt;oxcaml/oxcaml#4069&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved &lt;a href="https://github.com/oxcaml/oxcaml/issues/4084" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;AST version mismatch error messages&lt;/strong&gt;&lt;/a&gt; for better user experience (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4084"&gt;oxcaml/oxcaml#4084&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Added comprehensive &lt;a href="https://github.com/oxcaml/oxcaml/issues/4106" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;OxCaml template documentation&lt;/strong&gt;&lt;/a&gt; including introduction, reference, and examples (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4106"&gt;oxcaml/oxcaml#4106&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Updated &lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;OCaml compiler compatibility&lt;/strong&gt;&lt;/a&gt; to support version 5.2.0minus-10 with updated magic numbers for CMI, AST, CMT, CMS, and index files (&lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Primary development activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 35 commits covering compiler optimizations, new CLI features, and documentation improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Tooling maintenance&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with compatibility updates for OCaml 5.2.0minus-10 release (&lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/60" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Package stability issues&lt;/strong&gt;&lt;/a&gt; reported in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; affecting compilation of ocaml-index and base packages (&lt;a href="https://github.com/janestreet/opam-repository/issues/60"&gt;janestreet/opam-repository#60&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/61"&gt;janestreet/opam-repository#61&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity recorded&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; repositories during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler-tooling coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with magic number updates to maintain compatibility with OCaml 5.2.0minus-10 release (&lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/60" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Package ecosystem maintenance&lt;/strong&gt;&lt;/a&gt; with compilation issues in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; potentially affecting users of Jane Street extensions who depend on ocaml-lsp-server integration (&lt;a href="https://github.com/janestreet/opam-repository/issues/60"&gt;janestreet/opam-repository#60&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Development workflow synchronization&lt;/strong&gt;&lt;/a&gt; between internal Jane Street processes and public OxCaml releases, with selective commit inclusion for public distribution (&lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/144" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Internal codebase alignment&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; regarding which commits are necessary for OxCaml versus internal usage, with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; managing commit reversion decisions (&lt;a href="https://github.com/oxcaml/merlin/issues/144"&gt;oxcaml/merlin#144&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Documentation quality collaboration&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/cuihtlauac"&gt;Cuihtlauac Alvarado&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; on copy-paste ready examples in jane/doc/extensions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4016"&gt;oxcaml/oxcaml#4016&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3545" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance-focused development&lt;/strong&gt;&lt;/a&gt; with multiple optimization efforts in flambda2 continuation shortcuts (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3545"&gt;oxcaml/oxcaml#3545&lt;/a&gt;), register allocation improvements (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4079"&gt;oxcaml/oxcaml#4079&lt;/a&gt;), and runtime components&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4105" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience improvements&lt;/strong&gt;&lt;/a&gt; through enhanced error messages (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4105"&gt;oxcaml/oxcaml#4105&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4084"&gt;oxcaml/oxcaml#4084&lt;/a&gt;), comprehensive documentation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4106"&gt;oxcaml/oxcaml#4106&lt;/a&gt;), and enhanced CLI tools (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4045"&gt;oxcaml/oxcaml#4045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4082" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Runtime modernization&lt;/strong&gt;&lt;/a&gt; including fiber stack management (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4082"&gt;oxcaml/oxcaml#4082&lt;/a&gt;), memory handling optimizations, and threading system reorganization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4099"&gt;oxcaml/oxcaml#4099&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4077" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Type system advancement&lt;/strong&gt;&lt;/a&gt; with continued work on modes (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4077"&gt;oxcaml/oxcaml#4077&lt;/a&gt;), layouts, and domain annotations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3829"&gt;oxcaml/oxcaml#3829&lt;/a&gt;) for better safety and performance&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Collaborative maintenance model&lt;/strong&gt; with coordinated releases between compiler development and tooling updates, ensuring ecosystem compatibility across multiple repositories&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-23"/><summary>Active OCaml development with compiler optimizations, tooling updates, and package compilation fixes</summary><published>2025-06-08T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-24</id><title>Week 24, 2025: Major OxCaml rebranding week with SIMD improvements, Merlin 5.2.0minus-11 update, and extensive CI automation across repositories</title><updated>2025-06-15T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3966" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;SIMD vectorization&lt;/strong&gt;&lt;/a&gt; implementation in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3966"&gt;oxcaml/oxcaml#3966&lt;/a&gt; with support for vec256 and vec512 operations, improving performance for numerical computations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/3" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;GitHub Actions CI workflow&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt; for automated testing across Ubuntu (x64, ARM64) and macOS (Intel, ARM64) architectures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/148" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Locate-type-multi command&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/148"&gt;oxcaml/merlin#148&lt;/a&gt; enabling VSCode tree-structured type navigation for complex types like &lt;code&gt;a -&gt; (b * c)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Zero allocation checker&lt;/strong&gt; enhancements in oxcaml/oxcaml with new &lt;code&gt;-zero-alloc-check&lt;/code&gt; and &lt;code&gt;-zero-alloc-assert&lt;/code&gt; options for stricter memory management validation&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Command-line options&lt;/strong&gt; for register allocation control including &lt;code&gt;-regalloc-linscan-threshold&lt;/code&gt; and &lt;code&gt;-regalloc-param&lt;/code&gt; in oxcaml/oxcaml&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Numbers module&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin/commit/75908877c1361391bacb61834f485cf989fff4b3"&gt;oxcaml/merlin&lt;/a&gt; providing typed integer and float utilities including Int8, Uint8, Int16, Uint16, Uint32, Uint64, and Float types&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/3" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Package installation verification&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt; for core development tools: ocamlformat, merlin, ocaml-lsp-server, utop&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4123" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Complete rebranding&lt;/strong&gt;&lt;/a&gt; from flambda-backend to OxCaml across all repositories with updated build systems, documentation, and package naming (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4123"&gt;oxcaml/oxcaml#4123&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/commit/26715a3b5f0eae6f40352e5ea0e42ffb4b4ecc21"&gt;oxcaml/opam-repository&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3966" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization&lt;/strong&gt;&lt;/a&gt; focus with significant SIMD vectorization improvements in the main compiler (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3966"&gt;oxcaml/oxcaml#3966&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3886" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience&lt;/strong&gt;&lt;/a&gt; enhancements through comprehensive parallelism documentation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3886"&gt;oxcaml/oxcaml#3886&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4007"&gt;oxcaml/oxcaml#4007&lt;/a&gt;) and improved IDE support via Merlin updates (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/3" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CI automation&lt;/strong&gt;&lt;/a&gt; infrastructure development with GitHub Actions workflows for multi-platform testing (&lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/62" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Platform compatibility&lt;/strong&gt;&lt;/a&gt; improvements addressing macOS build issues across Jane Street libraries (&lt;a href="https://github.com/janestreet/opam-repository/issues/62"&gt;janestreet/opam-repository#62&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/65"&gt;janestreet/opam-repository#65&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/67"&gt;janestreet/opam-repository#67&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4123" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Coordinated rebranding&lt;/strong&gt;&lt;/a&gt; effort spanning &lt;a href="https://github.com/oxcaml/oxcaml/issues/4123"&gt;oxcaml/oxcaml#4123&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/opam-repository/commit/26715a3b5f0eae6f40352e5ea0e42ffb4b4ecc21"&gt;oxcaml/opam-repository&lt;/a&gt; with synchronized package suffix migration from &lt;code&gt;+jst&lt;/code&gt; to &lt;code&gt;+ox&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/68" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CI workflow development&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/punchagan"&gt;Puneeth Chaganti&lt;/a&gt; initially targeting &lt;a href="https://github.com/janestreet/opam-repository/issues/68"&gt;janestreet/opam-repository#68&lt;/a&gt; but redirected to &lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt; for proper integration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml/merlin/issues/1951" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Merlin upstream coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/ocaml/merlin/issues/1951"&gt;ocaml/merlin#1951&lt;/a&gt; for &lt;code&gt;locate-type-multi&lt;/code&gt; feature ensuring proper integration path for VSCode functionality (&lt;a href="https://github.com/oxcaml/merlin/issues/148"&gt;oxcaml/merlin#148&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package dependency alignment&lt;/strong&gt; between repositories with Jane Street library updates to v0.18~preview.130.36+326 versions affecting both oxcaml and janestreet repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Unit_info usage patterns&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; regarding future-proofing compilation unit creation in &lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/68" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Repository workflow clarification&lt;/strong&gt;&lt;/a&gt; where &lt;a href="https://github.com/punchagan"&gt;Puneeth Chaganti&lt;/a&gt;'s CI automation contributions were redirected from &lt;a href="https://github.com/janestreet/opam-repository/issues/68"&gt;janestreet/opam-repository#68&lt;/a&gt; to &lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt; for proper integration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/147" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Review capacity constraints&lt;/strong&gt;&lt;/a&gt; noted by &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; regarding paternity leave affecting review timeline for record punning fixes in &lt;a href="https://github.com/oxcaml/merlin/issues/147"&gt;oxcaml/merlin#147&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Branch targeting strategy&lt;/strong&gt; discussion about whether CI workflows should target master branch for scheduled actions versus with-extensions branch for package testing integration in janestreet/opam-repository&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3966" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance-focused development&lt;/strong&gt;&lt;/a&gt; with significant emphasis on SIMD vectorization (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3966"&gt;oxcaml/oxcaml#3966&lt;/a&gt;) and zero-allocation optimizations indicating a push toward high-performance computing applications&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/3" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CI/CD automation&lt;/strong&gt;&lt;/a&gt; expansion across repositories with comprehensive multi-platform testing infrastructure development (&lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/62" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Platform compatibility&lt;/strong&gt;&lt;/a&gt; focus addressing macOS build issues across multiple libraries (&lt;a href="https://github.com/janestreet/opam-repository/issues/62"&gt;janestreet/opam-repository#62&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/65"&gt;janestreet/opam-repository#65&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/67"&gt;janestreet/opam-repository#67&lt;/a&gt;, &lt;a href="https://github.com/janestreet/opam-repository/issues/71"&gt;janestreet/opam-repository#71&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3886" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience enhancement&lt;/strong&gt;&lt;/a&gt; through comprehensive documentation efforts (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3886"&gt;oxcaml/oxcaml#3886&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4007"&gt;oxcaml/oxcaml#4007&lt;/a&gt;) and advanced IDE features like tree-structured type navigation (&lt;a href="https://github.com/oxcaml/merlin/issues/148"&gt;oxcaml/merlin#148&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure modernization&lt;/strong&gt; with complete rebranding representing project maturation and clearer identity separate from upstream OCaml&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-24"/><summary>Major OxCaml rebranding week with SIMD improvements, Merlin 5.2.0minus-11 update, and extensive CI automation across repositories</summary><published>2025-06-15T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-25</id><title>Week 25, 2025: Major compiler development with new stdlib modules, extensive Merlin upstream sync, and packaging infrastructure improvements</title><updated>2025-06-22T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New Backoff module&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; stdlib providing randomized exponential backoff for lock-free algorithms (&lt;a href="https://github.com/oxcaml/oxcaml/commit/75ab9dc03cb7c0c0492ca55f137628df3b99d643"&gt;75ab9dc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New Multicore module&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; systhreads library for spawning preemptively scheduled threads across parallel domains (&lt;a href="https://github.com/oxcaml/oxcaml/commit/75ab9dc03cb7c0c0492ca55f137628df3b99d643"&gt;75ab9dc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Include paths functionality&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with new &lt;code&gt;-I-paths&lt;/code&gt; and &lt;code&gt;-H-paths&lt;/code&gt; command-line flags for managing include directories from file lists (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Numbers utility module&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with comprehensive type-safe integer types (Int8, Uint8, Int16, Uint16, Uint32, Uint64) and conversion functions (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/3" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;GitHub Actions CI&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with automated package testing across Ubuntu (x64, arm64) and macOS (Intel, arm64) platforms (&lt;a href="https://github.com/oxcaml/opam-repository/issues/3"&gt;oxcaml/opam-repository#3&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler advancement&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; releasing new stdlib modules for parallelism support including Backoff and Multicore functionality&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Development tooling synchronization&lt;/strong&gt;&lt;/a&gt; through &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;'s comprehensive integration of oxcaml 5.2.0minus-11 with 37,047 additions across 206 files (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Packaging infrastructure maturation&lt;/strong&gt; via &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; implementing automated CI testing and cross-platform build dependency improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4162" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Community feedback integration&lt;/strong&gt;&lt;/a&gt; with users reporting installation issues and tutorial improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4162"&gt;oxcaml/oxcaml#4162&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4156"&gt;oxcaml/oxcaml#4156&lt;/a&gt;, and &lt;a href="https://github.com/oxcaml/oxcaml/issues/4149"&gt;oxcaml/oxcaml#4149&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler-tooling synchronization&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; integrating oxcaml 5.2.0minus-11 compiler changes through &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt;'s comprehensive upstream merge (&lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package ecosystem coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler releases and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; package management with updated OCaml variant 5.2.0+ox checksums (&lt;a href="https://github.com/oxcaml/opam-repository/commit/50ae6c8d27ebd591289d599995008124b554b829"&gt;50ae6c8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Development workflow alignment&lt;/strong&gt; through shared build system improvements and CI infrastructure supporting the growing oxcaml ecosystem requirements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/146" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Unit_info API design&lt;/strong&gt;&lt;/a&gt; discussion in &lt;a href="https://github.com/oxcaml/merlin/issues/146"&gt;oxcaml/merlin#146&lt;/a&gt; between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and other maintainers regarding &lt;code&gt;Unit_info.make_with_known_compilation_unit&lt;/code&gt; function usage and potential future compatibility concerns&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4156" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Parallel programming tutorial feedback&lt;/strong&gt;&lt;/a&gt; from &lt;a href="https://github.com/shwestrick"&gt;Sam Westrick&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4156"&gt;oxcaml/oxcaml#4156&lt;/a&gt; requesting clearer documentation and dune configuration examples for multicore setup&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4155" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Type system edge case&lt;/strong&gt;&lt;/a&gt; identification by &lt;a href="https://github.com/samsa1"&gt;Samuel Vivien&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4155"&gt;oxcaml/oxcaml#4155&lt;/a&gt; regarding polymorphic parameters and letop interactions requiring future attention&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Parallelism infrastructure development&lt;/strong&gt; with focus on lock-free synchronization primitives and multicore threading capabilities across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; stdlib expansion&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience prioritization&lt;/strong&gt; through improved documentation, tutorial corrections, and community feedback integration in response to user-reported issues&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Ecosystem maturity indicators&lt;/strong&gt; with third-party package compatibility challenges emerging as oxcaml adoption grows and ppx libraries adapt to new compiler features&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Automated quality assurance&lt;/strong&gt; implementation via comprehensive CI testing infrastructure in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; ensuring cross-platform package reliability&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-25"/><summary>Major compiler development with new stdlib modules, extensive Merlin upstream sync, and packaging infrastructure improvements</summary><published>2025-06-22T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-26</id><title>Week 26, 2025: Major language features added including let mutable syntax, ARM64 SIMD support, and enhanced CI infrastructure</title><updated>2025-06-29T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;&lt;code&gt;let mutable&lt;/code&gt; syntax&lt;/strong&gt; for creating mutable variables that avoid ref allocation when used locally in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c6ca48e9087b1a29302fba102298b1838da9da2a"&gt;c6ca48e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 SIMD intrinsics implementation&lt;/strong&gt; enabling SIMD operations on ARM64 platforms with comprehensive test coverage in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/ca15cde9aaa58c8e86d7dd498a9f1f0f85ec8b9d"&gt;ca15cde&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Void function arguments and returns&lt;/strong&gt; support allowing functions to accept and return void types in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/9c1f699920c72bfe197cd75c12c5ad661821f978"&gt;9c1f699&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/5" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Multi-distribution CI testing&lt;/strong&gt;&lt;/a&gt; expanded to include Ubuntu, Debian, and Arch Linux with ARM64 architecture support in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/131" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced type-enclosing query&lt;/strong&gt;&lt;/a&gt; with improved deduplication strategy that maintains result stability in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/131"&gt;oxcaml/merlin#131&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler merge bot workflow&lt;/strong&gt;&lt;/a&gt; that automatically detects compiler merge PRs and provides maintenance checklists in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler development&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; delivered major language features including &lt;code&gt;let mutable&lt;/code&gt; syntax, ARM64 SIMD support, and void function parameters with 17 commits&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/4" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Infrastructure improvements&lt;/strong&gt;&lt;/a&gt; across &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; expanded CI testing to multiple Linux distributions and ARM64 architecture (&lt;a href="https://github.com/oxcaml/opam-repository/issues/4"&gt;oxcaml/opam-repository#4&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Editor tooling enhancements&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; improved type query stability and added automated workflow management (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/131"&gt;oxcaml/merlin#131&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/72" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Cross-repository collaboration&lt;/strong&gt;&lt;/a&gt; evident in SIMD-related work spanning compiler implementation and package management (&lt;a href="https://github.com/janestreet/opam-repository/issues/72"&gt;janestreet/opam-repository#72&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/72" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;SIMD implementation coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; ARM64 SIMD intrinsics development (&lt;a href="https://github.com/oxcaml/oxcaml/commit/ca15cde9aaa58c8e86d7dd498a9f1f0f85ec8b9d"&gt;ca15cde&lt;/a&gt;) and &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt;'s ocaml_simd package fixes that moved from &lt;a href="https://github.com/janestreet/opam-repository/issues/72"&gt;janestreet/opam-repository#72&lt;/a&gt; to oxcaml/opam-repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/151" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler version synchronization&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; tracking &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler updates through automated merge workflow (&lt;a href="https://github.com/oxcaml/merlin/issues/151"&gt;oxcaml/merlin#151&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/153"&gt;oxcaml/merlin#153&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/5" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;ARM64 architecture focus&lt;/strong&gt;&lt;/a&gt; spanning both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; SIMD support and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; CI infrastructure (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Development workflow improvements&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;'s automated compiler merge bot (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;) supporting ongoing &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; development cycles&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4177" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Floating-point NaN optimization inconsistencies&lt;/strong&gt;&lt;/a&gt; reported by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4177"&gt;oxcaml/oxcaml#4177&lt;/a&gt; highlighting potential compiler behavior discrepancies in mathematical expression simplification&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4162" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CPU instruction compatibility issues&lt;/strong&gt;&lt;/a&gt; resolved by &lt;a href="https://github.com/gipec"&gt;Gilson Costa&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4162"&gt;oxcaml/oxcaml#4162&lt;/a&gt; after compilation segfault during opam installation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4186" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;VSCode workflow integration&lt;/strong&gt;&lt;/a&gt; proposed by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4186"&gt;oxcaml/oxcaml#4186&lt;/a&gt; to ignore &lt;code&gt;.vscode&lt;/code&gt; directory in version control for improved developer experience&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform SIMD standardization&lt;/strong&gt; with ARM64 joining AMD64 in comprehensive SIMD intrinsics support, indicating focus on portable high-performance computing across architectures&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Memory allocation optimization&lt;/strong&gt; through features like &lt;code&gt;let mutable&lt;/code&gt; syntax and &lt;code&gt;@ local&lt;/code&gt; annotations showing systematic approach to reducing unnecessary allocations and improving runtime performance&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/122" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Development workflow automation&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;'s compiler merge bot (&lt;a href="https://github.com/oxcaml/merlin/issues/122"&gt;oxcaml/merlin#122&lt;/a&gt;) and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;'s multi-distribution CI (&lt;a href="https://github.com/oxcaml/opam-repository/issues/5"&gt;oxcaml/opam-repository#5&lt;/a&gt;) reducing manual maintenance overhead&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Platform compatibility expansion&lt;/strong&gt; with ARM64 architecture support in both runtime (&lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;) and CI infrastructure (&lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;), reflecting industry shift toward ARM-based computing&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-26"/><summary>Major language features added including let mutable syntax, ARM64 SIMD support, and enhanced CI infrastructure</summary><published>2025-06-29T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-27</id><title>Week 27, 2025: Compiler improvements with new multicore primitives, IDE enhancements, and package repository consolidation across oxcaml projects</title><updated>2025-07-06T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New &lt;code&gt;%cpu_relax&lt;/code&gt; primitive&lt;/strong&gt; for improved busy-waiting performance in domain operations in &lt;a href="https://github.com/oxcaml/oxcaml/commit/4ba2ad473f89d12a552090c5abd6cad6d6f12bb2"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced Atomic module&lt;/strong&gt; with comprehensive contended operations API including improved mode constraints for thread safety in &lt;a href="https://github.com/oxcaml/oxcaml/commit/70dc44292d541bda30cc8b893910754745f8f424"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Support for &lt;code&gt;or_null&lt;/code&gt; in &lt;code&gt;[@@unboxed]&lt;/code&gt; types&lt;/strong&gt; enabling better memory layout optimization in &lt;a href="https://github.com/oxcaml/oxcaml/commit/59e1d3aa9bdbf326f73b419135a03c71a7d8b199"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Runtime macros for &lt;code&gt;or_null&lt;/code&gt; values&lt;/strong&gt; similar to option type handling for improved C interoperability in &lt;a href="https://github.com/oxcaml/oxcaml/commit/727888d87d43040da5e21644e17c542e2b913acb"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;CLAUDE.md development guide&lt;/strong&gt; for compiler contributors with build commands and style guidelines in &lt;a href="https://github.com/oxcaml/oxcaml/commit/34d4d2827b73dad1a5022ee6ec469cb537c992ce"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/156" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Simplified jkind system&lt;/strong&gt;&lt;/a&gt; in Merlin with reduced API surface and streamlined functionality via &lt;a href="https://github.com/oxcaml/merlin/issues/156"&gt;oxcaml/merlin#156&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/6" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Fixed ocaml_simd package installation&lt;/strong&gt;&lt;/a&gt; by updating source archive and resolving dune sandboxing issues in &lt;a href="https://github.com/oxcaml/opam-repository/issues/6"&gt;oxcaml/opam-repository#6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler development momentum&lt;/strong&gt; with 17 commits in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; focusing on multicore primitives, type system improvements, and ARM64 backend fixes&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;IDE tooling advances&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with compiler version updates and downstream integration for renaming functionality&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package repository consolidation&lt;/strong&gt; with work migrating from &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; to &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; for better maintenance&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/72" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Package repository migration&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt;'s work on &lt;a href="https://github.com/janestreet/opam-repository/issues/72"&gt;janestreet/opam-repository#72&lt;/a&gt; being moved to &lt;a href="https://github.com/oxcaml/opam-repository/issues/6"&gt;oxcaml/opam-repository#6&lt;/a&gt; for ocaml_simd fixes and compiler updates&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/156" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with 5.2.0minus-14 integration via &lt;a href="https://github.com/oxcaml/merlin/issues/156"&gt;oxcaml/merlin#156&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Shared contributor activity&lt;/strong&gt; with &lt;a href="https://github.com/TheNumbat"&gt;Max Slater&lt;/a&gt; working across both opam repositories and &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; leading Merlin compiler integration work&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4267" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;BMI instruction detection issues&lt;/strong&gt;&lt;/a&gt; resolved by &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; for segmentation faults reported by &lt;a href="https://github.com/tmcgilchrist"&gt;Tim McGilchrist&lt;/a&gt; on Ubuntu Linux via &lt;a href="https://github.com/oxcaml/oxcaml/issues/4267"&gt;oxcaml/oxcaml#4267&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/2123" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Mutable unboxing optimization&lt;/strong&gt;&lt;/a&gt; discussion between &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; and &lt;a href="https://github.com/Gbury"&gt;Guillaume Bury&lt;/a&gt; regarding flow analysis requirements for proper optimization via &lt;a href="https://github.com/oxcaml/oxcaml/issues/2123"&gt;oxcaml/oxcaml#2123&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/155" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CI troubleshooting&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; regarding missing .merlin test files needed for repository tests via &lt;a href="https://github.com/oxcaml/merlin/issues/155"&gt;oxcaml/merlin#155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/155" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Review coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/voodoos"&gt;Ulysse&lt;/a&gt; with commit-by-commit analysis of renaming integration work via &lt;a href="https://github.com/oxcaml/merlin/issues/155"&gt;oxcaml/merlin#155&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Multicore runtime evolution&lt;/strong&gt; with new primitives like &lt;code&gt;%cpu_relax&lt;/code&gt; and enhanced atomic operations indicating focus on high-performance concurrent programming in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system maturation&lt;/strong&gt; through multiple recursive module fixes and better error reporting showing advancement of complex type features via &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Platform-specific optimization&lt;/strong&gt; with deterministic CSE parameters and ARM64-specific improvements demonstrating targeted performance tuning across architectures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/147" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;IDE tooling integration&lt;/strong&gt;&lt;/a&gt; focus with locate and renaming features improving developer experience in OCaml editors via &lt;a href="https://github.com/oxcaml/merlin/issues/147"&gt;oxcaml/merlin#147&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin/issues/155"&gt;oxcaml/merlin#155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository consolidation pattern&lt;/strong&gt; with package maintenance work migrating toward the oxcaml organization for better coordination&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-27"/><summary>Compiler improvements with new multicore primitives, IDE enhancements, and package repository consolidation across oxcaml projects</summary><published>2025-07-06T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-28</id><title>Week 28, 2025: Compiler type system advances and language server improvements across oxcaml/oxcaml and oxcaml/merlin repositories</title><updated>2025-07-13T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4280" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;BMI instruction set detection&lt;/strong&gt;&lt;/a&gt; implemented in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; to prevent SIMD segfaults (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4280"&gt;oxcaml/oxcaml#4280&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Non-float &lt;code&gt;or_null&lt;/code&gt; types&lt;/strong&gt; support added in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; after fixing regression issues (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4298"&gt;oxcaml/oxcaml#4298&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4288"&gt;oxcaml/oxcaml#4288&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4158"&gt;oxcaml/oxcaml#4158&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3759" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced module mode system&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; supporting non-legacy mode modules (&lt;a href="https://github.com/oxcaml/oxcaml/issues/3759"&gt;oxcaml/oxcaml#3759&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Project-wide renaming infrastructure&lt;/strong&gt; delivered in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;code&gt;scope:Renaming&lt;/code&gt; API option and granular marshalling (&lt;a href="https://github.com/oxcaml/merlin/commit/b0e7c80f740a16e53a439c1f7767130dcc66bdd1"&gt;b0e7c80&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Autocompletion order improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; prioritizing modules over types in expressions (&lt;a href="https://github.com/oxcaml/merlin/commit/417538aefff3915aaf3e71b5cb212253e489d36a"&gt;417538a&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4287" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Runtime metaprogramming syntax reservations&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for &lt;code&gt;$&lt;/code&gt; operator and &lt;code&gt;&lt;[&lt;/code&gt; &lt;code&gt;]&gt;&lt;/code&gt; delimiters (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4287"&gt;oxcaml/oxcaml#4287&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4284" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;32-bit architecture support&lt;/strong&gt;&lt;/a&gt; added to Flambda2's &lt;code&gt;Targetint_31_63&lt;/code&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4284"&gt;oxcaml/oxcaml#4284&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Primary activity&lt;/strong&gt; concentrated in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; compiler with 13 merged features and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; language server with project-wide tooling enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system advancement&lt;/strong&gt; through mode system improvements, implicit kinds implementation, and non-float &lt;code&gt;or_null&lt;/code&gt; type support&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Language server capabilities&lt;/strong&gt; expanded with project-wide renaming infrastructure and improved autocompletion behavior&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Build system robustness&lt;/strong&gt; improvements addressing cross-platform development scenarios in both repositories&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, or &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; during this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Build system consistency&lt;/strong&gt;&lt;/a&gt; improvements in both &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with cross-device symlink handling by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4292"&gt;oxcaml/oxcaml#4292&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/155" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Upstream alignment&lt;/strong&gt;&lt;/a&gt; work in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; maintaining compatibility with upstream Merlin while preserving oxcaml-specific functionality (&lt;a href="https://github.com/oxcaml/merlin/issues/155"&gt;oxcaml/merlin#155&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type system coordination&lt;/strong&gt; between compiler implementation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and language server support development in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street contributor overlap&lt;/strong&gt; with &lt;a href="https://github.com/riaqn"&gt;Zesen Qian&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; contributing across the oxcaml ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4285" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Implicit kinds design debate&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4285"&gt;oxcaml/oxcaml#4285&lt;/a&gt; between &lt;a href="https://github.com/dkalinichenko-js"&gt;@dkalinichenko-js&lt;/a&gt; and reviewers about error handling versus intersection creation for type annotations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/157" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Autocompletion behavior discussion&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/157"&gt;oxcaml/merlin#157&lt;/a&gt; between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt;, &lt;a href="https://github.com/JimmyZJX"&gt;@JimmyZJX&lt;/a&gt;, and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; about LSP fuzzy search improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3181" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CSE optimization analysis&lt;/strong&gt;&lt;/a&gt; continuation in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3181"&gt;oxcaml/oxcaml#3181&lt;/a&gt; by &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; with technical investigation into canonicalization strategies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Advanced type system features&lt;/strong&gt; development with complex mode systems and implicit kind declarations showing sophisticated type-level programming capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Language server enhancement focus&lt;/strong&gt; emphasizing developer experience improvements through better autocompletion and project-wide navigation tools&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Multi-backend compilation&lt;/strong&gt; continued development with JSIR improvements for JavaScript targeting alongside native compilation paths&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization&lt;/strong&gt; emphasis in compiler middle-end with Flambda2 enhancements and symbol management improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform robustness&lt;/strong&gt; attention to build system reliability across different development environments and architectures&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-28"/><summary>Compiler type system advances and language server improvements across oxcaml/oxcaml and oxcaml/merlin repositories</summary><published>2025-07-13T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-29</id><title>Week 29, 2025: oxcaml/oxcaml advanced SIMD capabilities while oxcaml/merlin gained project-wide renaming support</title><updated>2025-07-20T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Vec256 SIMD operations&lt;/strong&gt; including array load/store primitives, constants, and casts for enhanced vectorization performance in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/5b8eb0f32e6ed7e27f0d36385c1bfcdd1273fcea"&gt;5b8eb0f3&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/6db2b3bdd19daf98eb513ffbaede63fd9f6dd615"&gt;6db2b3bd&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/c57086b49d5104dc0cd1f3de90b328b170260f40"&gt;c57086b4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New &lt;code&gt;-keep-llvmir&lt;/code&gt; command-line flag&lt;/strong&gt; for retaining LLVM IR files when using the experimental LLVM backend in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/57f14a8ee232d86f73b700b5338c26468c648e00"&gt;57f14a8e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;SSE intrinsics additions&lt;/strong&gt; and &lt;strong style="color: #cc6600;"&gt;VEX encoding support&lt;/strong&gt; for enhanced x86_64 SIMD capabilities in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/bf7c1fca25e4315f37d6b68d01b177238dcd28af"&gt;bf7c1fca&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/1d196d787a41080b2ac06bc58024a85df5fec611"&gt;1d196d78&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Type Shapes and Type Declaration Shapes&lt;/strong&gt; for debugger support enabling better runtime debugging capabilities in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/587099ce93911e038041b77a1fa821dc0ed90b01"&gt;587099ce&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/157" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Completion order improvement&lt;/strong&gt;&lt;/a&gt; for expressions - modules now prioritized over types when completing in expression contexts in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/157"&gt;oxcaml/merlin#157&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Project-wide renaming&lt;/strong&gt; initial support - occurrences can now return all usages of all related definitions with improved index file format in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/commit/f800beb8b7040141003c31ffd969277857cbf47e"&gt;f800beb&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Locate behavior improvements&lt;/strong&gt; using new OCaml 5.3 features - Merlin no longer confuses uids from interfaces and implementations in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/commit/f800beb8b7040141003c31ffd969277857cbf47e"&gt;f800beb&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Active development week&lt;/strong&gt; with concentrated activity in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;, while &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt;, and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; showed no activity&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler modernization focus&lt;/strong&gt; with significant SIMD vectorization enhancements and LLVM backend improvements in the main compiler&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer tooling advances&lt;/strong&gt; in Merlin with completion behavior improvements and major project-wide renaming functionality&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance emphasis&lt;/strong&gt; across both repositories with vectorization optimizations in oxcaml and completion prioritization in Merlin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;24 commits&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; covering SIMD, backend, and tooling improvements with a performance regression report (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323"&gt;oxcaml/oxcaml#4323&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Multiple PRs and enhancements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; including CI improvements and substantial internal refactoring&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/157" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Completion prioritization debate&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin/issues/157"&gt;oxcaml/merlin#157&lt;/a&gt; where &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and contributors discussed whether to prioritize modules over types in expression contexts, addressing concerns about fuzzy search behavior and PPX compatibility&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4323" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance regression analysis&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4323"&gt;oxcaml/oxcaml#4323&lt;/a&gt; where &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; reported a typer performance regression with detailed benchmark data and analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Vectorization improvements&lt;/strong&gt; as a key focus area with extensive Vec256 support and enhanced SIMD instruction selection across multiple architectures in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;LLVM backend maturation&lt;/strong&gt; with better debugging support, IR management, and integration into the build system in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience enhancements&lt;/strong&gt; including completion behavior improvements in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; and better debugging capabilities in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Project-wide tooling evolution&lt;/strong&gt; with major renaming functionality and CI infrastructure improvements in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-29"/><summary>oxcaml/oxcaml advanced SIMD capabilities while oxcaml/merlin gained project-wide renaming support</summary><published>2025-07-20T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-30</id><title>Week 30, 2025: Major SIMD and unboxed integer implementation in oxcaml compiler with js_of_ocaml toplevel support and merlin PPX enhancements</title><updated>2025-07-27T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New unboxed 8-bit and 16-bit integer types&lt;/strong&gt; (&lt;code&gt;int8_u&lt;/code&gt;, &lt;code&gt;int16_u&lt;/code&gt;) with comprehensive APIs in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; stdlib_beta (&lt;a href="https://github.com/oxcaml/oxcaml/commit/4823b9eca8c91c25ba9d16b90ba9efa3a7e5e316"&gt;4823b9e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;AVX/AVX2 SIMD intrinsics&lt;/strong&gt; implementation with extensive test coverage for 256-bit vector operations in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/11e1eed9693ba2c82718d7db2b139d01a3e095b9"&gt;11e1eed&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Unboxed Vec256 arrays&lt;/strong&gt; support with new maximum array length constants in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/a9453df7122fbe7eb5b465fd1fff7b271b9c6c94"&gt;a9453df&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Js&lt;em&gt;of&lt;/em&gt;ocaml toplevel support&lt;/strong&gt; enabling interactive OCaml toplevel functionality in browsers with effects handling in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/167" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;PPX document support&lt;/strong&gt;&lt;/a&gt; for merlin document commands to work with PPX-generated code using &lt;code&gt;[@@@merlin.document]&lt;/code&gt; attributes in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; by &lt;a href="https://github.com/maxmwang"&gt;Max Wang&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/167"&gt;oxcaml/merlin#167&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/171" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;PPX locate support&lt;/strong&gt;&lt;/a&gt; with &lt;code&gt;[@@@merlin.locate]&lt;/code&gt; attribute parsing for all merlin override attributes in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; by &lt;a href="https://github.com/maxmwang"&gt;Max Wang&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/merlin/issues/171"&gt;oxcaml/merlin#171&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Zero allocation checker improvements&lt;/strong&gt; with new &lt;code&gt;-zero-alloc-checker-details-extra&lt;/code&gt; flag for enhanced error reporting in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d14fa4bb1f6ada62d4587d6eece5e584b945de02"&gt;d14fa4b&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;DWARF debugging enhancements&lt;/strong&gt; including type shapes emission and debugging UID tracking in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/commit/146fd9041f485a5c94209894d87617a919a18df0"&gt;146fd90&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/commit/04781fe3663d791b41ac1b26d19525a72252bd31"&gt;04781fe&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Highly active development&lt;/strong&gt; across 3 of 5 repositories with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; leading with 41 commits focused on SIMD capabilities and unboxed integer types&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform browser support&lt;/strong&gt; advancement through &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt;'s js&lt;em&gt;of&lt;/em&gt;ocaml toplevel implementation enabling interactive OCaml in web browsers&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;IDE tooling improvements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with comprehensive PPX integration for document and locate commands&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization focus&lt;/strong&gt; spanning compiler optimizations, zero allocation checking, and memory efficiency improvements&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; and &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt; repositories this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Js&lt;em&gt;of&lt;/em&gt;ocaml ecosystem coordination&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; with toplevel support patches being applied across all js&lt;em&gt;of&lt;/em&gt;ocaml packages (&lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocaml/merlin/issues/1951" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Upstream integration planning&lt;/strong&gt;&lt;/a&gt; for &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; PPX features with corresponding PR submitted to &lt;a href="https://github.com/ocaml/merlin/issues/1951"&gt;ocaml/merlin#1951&lt;/a&gt; for broader community adoption&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/168" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler-IDE integration&lt;/strong&gt;&lt;/a&gt; through &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;'s oxcaml-specific constructs being supported in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;'s syntax hover features (&lt;a href="https://github.com/oxcaml/merlin/issues/168"&gt;oxcaml/merlin#168&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package management synchronization&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; ensuring consistent patch application across related js&lt;em&gt;of&lt;/em&gt;ocaml packages for unified functionality&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;SIMD and vectorization capabilities&lt;/strong&gt; becoming central focus with comprehensive AVX/AVX2 support and new unboxed vector array types in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; indicating high-performance computing priorities&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Browser-based OCaml development&lt;/strong&gt; advancement through js&lt;em&gt;of&lt;/em&gt;ocaml toplevel support in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; enabling interactive OCaml sessions in web environments&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;PPX tooling integration&lt;/strong&gt; expanding in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with document and locate commands supporting PPX-generated code through attribute-based overrides&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Unboxed primitive types expansion&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; adding 8-bit and 16-bit integers to complement existing types for improved memory efficiency&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Zero allocation optimization&lt;/strong&gt; emphasis with enhanced error reporting and analysis tools in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; for performance-critical code development&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-30"/><summary>Major SIMD and unboxed integer implementation in oxcaml compiler with js_of_ocaml toplevel support and merlin PPX enhancements</summary><published>2025-07-27T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-31</id><title>Week 31, 2025: Active compiler development with SIMD stabilization, atomic records, and tooling improvements across oxcaml/oxcaml and oxcaml/merlin</title><updated>2025-08-03T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4345" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;SIMD vec256 stabilization&lt;/strong&gt;&lt;/a&gt; for improved vector operations performance (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4345"&gt;oxcaml/oxcaml#4345&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4132" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Atomic record fields support&lt;/strong&gt;&lt;/a&gt; with new &lt;code&gt;[@atomic]&lt;/code&gt; attribute on mutable fields enabling lock-free programming (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4132"&gt;oxcaml/oxcaml#4132&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4228"&gt;oxcaml/oxcaml#4228&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4231"&gt;oxcaml/oxcaml#4231&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4407" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;LLVM backend call implementation&lt;/strong&gt;&lt;/a&gt; for function calls in LLVM code generation (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4407"&gt;oxcaml/oxcaml#4407&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4418" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced DWARF debugging&lt;/strong&gt;&lt;/a&gt; with new configuration flag &lt;code&gt;--dwarf&lt;/code&gt; to enable OxCaml-specific DWARF output (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4418"&gt;oxcaml/oxcaml#4418&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4336" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;SIMD load/store sanitization&lt;/strong&gt;&lt;/a&gt; for improved memory safety in vector operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4336"&gt;oxcaml/oxcaml#4336&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4421" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;BMI instruction support&lt;/strong&gt;&lt;/a&gt; with proper feature detection instead of LZCNT (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4421"&gt;oxcaml/oxcaml#4421&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4359" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Unboxed arrays conversion&lt;/strong&gt;&lt;/a&gt; from custom blocks to normal blocks for better performance (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4359"&gt;oxcaml/oxcaml#4359&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/oxcaml&lt;/strong&gt; led group activity with 26 commits focusing on SIMD stabilization, atomic record fields, and advanced type system features&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/171" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/merlin&lt;/strong&gt;&lt;/a&gt; advanced PPX integration and compiler synchronization with OxCaml 5.2.0minus-16 updates (&lt;a href="https://github.com/oxcaml/merlin/issues/171"&gt;oxcaml/merlin#171&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/172"&gt;oxcaml/merlin#172&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/opam-repository&lt;/strong&gt;, &lt;strong style="color: #cc6600;"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/strong&gt;, and &lt;strong style="color: #cc6600;"&gt;janestreet/opam-repository&lt;/strong&gt; had no recorded activity this week&lt;/li&gt;
&lt;li&gt;Development concentrated on compiler core improvements and tooling ecosystem integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/172" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler version synchronization&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; merging OxCaml 5.2.0minus-16 changes (&lt;a href="https://github.com/oxcaml/merlin/issues/172"&gt;oxcaml/merlin#172&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4418" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;DWARF improvements&lt;/strong&gt;&lt;/a&gt; in oxcaml/oxcaml compiler with enhanced debugging support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4418"&gt;oxcaml/oxcaml#4418&lt;/a&gt;) that will benefit merlin and other tooling&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4278" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Type system changes&lt;/strong&gt;&lt;/a&gt; from flambda2 work in oxcaml/oxcaml (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4278"&gt;oxcaml/oxcaml#4278&lt;/a&gt;) requiring corresponding updates in merlin for editor support&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4400" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Contractive type parameters&lt;/strong&gt;&lt;/a&gt; debate between &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt; and &lt;a href="https://github.com/goldfirere"&gt;Richard Eisenberg&lt;/a&gt; about motivation and interaction with datatype plans, with concrete examples for fixpoint patterns and capability types (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4400"&gt;oxcaml/oxcaml#4400&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4390" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Match-in-match optimization&lt;/strong&gt;&lt;/a&gt; discussion with &lt;a href="https://github.com/bclement-ocp"&gt;Basile Clément&lt;/a&gt; explaining the reviewable state of relations-as-projections PR and need for reduction strategy discussion (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4390"&gt;oxcaml/oxcaml#4390&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4285" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Implicit kinds constraints&lt;/strong&gt;&lt;/a&gt; discussion on whether type annotations should intersect with implicit kinds or raise errors (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4285"&gt;oxcaml/oxcaml#4285&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Advanced type system work&lt;/strong&gt; with multiple PRs focusing on flambda2 type analysis improvements and new language features like contractive types and atomic record fields&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;SIMD and performance focus&lt;/strong&gt; with vec256 stabilization and unboxed array optimizations showing continued emphasis on high-performance computing capabilities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Metaprogramming capabilities&lt;/strong&gt;&lt;/a&gt; development with runtime quotations adding compile-time code generation features to the language (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4395"&gt;oxcaml/oxcaml#4395&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/171" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;PPX ecosystem integration&lt;/strong&gt;&lt;/a&gt; becoming a priority with merlin locate support for preprocessors (&lt;a href="https://github.com/oxcaml/merlin/issues/171"&gt;oxcaml/merlin#171&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4418" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience improvements&lt;/strong&gt;&lt;/a&gt; through better debugging support with DWARF enhancements and command-line cleanup (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4418"&gt;oxcaml/oxcaml#4418&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4424"&gt;oxcaml/oxcaml#4424&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-31"/><summary>Active compiler development with SIMD stabilization, atomic records, and tooling improvements across oxcaml/oxcaml and oxcaml/merlin</summary><published>2025-08-03T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-32</id><title>Week 32, 2025: Major release week featuring block indices language implementation, LLVM backend progress, Merlin PPX system overhaul, and Jane Street v0.18 preview</title><updated>2025-08-10T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4017" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Block indices language feature&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/rtjoa"&gt;Ryan Tjoa&lt;/a&gt; introducing explicit indices for unboxed types in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4017"&gt;oxcaml/oxcaml#4017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4419" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;LLVM backend extcalls&lt;/strong&gt;&lt;/a&gt; implementation by &lt;a href="https://github.com/usuyus"&gt;Yusuf Onur Üşümez&lt;/a&gt; adding external call support in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4419"&gt;oxcaml/oxcaml#4419&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/177" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Merlin PPX overrides system&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/maxmwang"&gt;Max Wang&lt;/a&gt; enabling flexible command output control through &lt;code&gt;[@@@merlin.X]&lt;/code&gt; attributes in &lt;a href="https://github.com/oxcaml/merlin/issues/177"&gt;oxcaml/merlin#177&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;12 new Jane Street packages&lt;/strong&gt; including big&lt;em&gt;percent, expectree, flexible&lt;/em&gt;sexp, and PPX utilities for enhanced OCaml development (&lt;a href="https://github.com/janestreet/opam-repository/commit/09e29ef27266354355910a7f899d1d0afc066b96"&gt;09e29ef&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4454" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;DWARF debugging infrastructure&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/spiessimon"&gt;Simon Spies&lt;/a&gt; with comprehensive test framework in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4454"&gt;oxcaml/oxcaml#4454&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/3513" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Unboxed scalars primitives&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://github.com/jvanburen"&gt;Jacob Van Buren&lt;/a&gt; for small integer operations in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3513"&gt;oxcaml/oxcaml#3513&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Let_mutable language extension&lt;/strong&gt; in Merlin for enhanced compiler compatibility (&lt;a href="https://github.com/oxcaml/merlin/commit/a4a79a1c5ce973f6bf9af81a30949cf09e6c7883"&gt;a4a79a1c&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;OxCaml compiler&lt;/strong&gt; delivered major language features with block indices implementation, LLVM backend advancement, and extensive performance optimizations across 26 contributors&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Merlin language server&lt;/strong&gt; underwent significant enhancement with PPX overrides system and OxCaml 5.2.0minus-16 integration&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street ecosystem&lt;/strong&gt; released v0.18~preview.130.48+372 with 12 new packages and synchronized updates across 299 package files&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Development tooling&lt;/strong&gt; expanded significantly with DWARF debugging support, configuration documentation, and enhanced developer experience&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/172" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Compiler-Merlin synchronization&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; merging OxCaml 5.2.0minus-16 changes in &lt;a href="https://github.com/oxcaml/merlin/issues/172"&gt;oxcaml/merlin#172&lt;/a&gt;, ensuring compatibility with new language extensions and typing system improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4017" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Unboxed types ecosystem development&lt;/strong&gt;&lt;/a&gt; spanning oxcaml/oxcaml with block indices in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4017"&gt;oxcaml/oxcaml#4017&lt;/a&gt;, scalar primitives in &lt;a href="https://github.com/oxcaml/oxcaml/issues/3513"&gt;oxcaml/oxcaml#3513&lt;/a&gt;, and Jane Street's ppx_array utilities for optimal layout compilation&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street package ecosystem alignment&lt;/strong&gt; with v0.18 preview coordinating with oxcaml development cycles and providing enhanced tooling for unboxed types and PPX development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Unboxed types specialization&lt;/strong&gt; with comprehensive framework development including block indices, scalar primitives, and specialized PPX tooling across oxcaml/oxcaml and Jane Street packages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4419" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;LLVM backend maturation&lt;/strong&gt;&lt;/a&gt; with systematic feature addition including extcalls in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4419"&gt;oxcaml/oxcaml#4419&lt;/a&gt;, data declarations, and conditional symbol emission in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4460"&gt;oxcaml/oxcaml#4460&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4454" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Development tooling enhancement&lt;/strong&gt;&lt;/a&gt; with DWARF debugging support in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4454"&gt;oxcaml/oxcaml#4454&lt;/a&gt;, Merlin PPX integration in &lt;a href="https://github.com/oxcaml/merlin/issues/177"&gt;oxcaml/merlin#177&lt;/a&gt;, and comprehensive configuration documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4373" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance-focused optimization&lt;/strong&gt;&lt;/a&gt; including register allocation improvements in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4373"&gt;oxcaml/oxcaml#4373&lt;/a&gt;, interval tree data structures in &lt;a href="https://github.com/oxcaml/merlin/issues/173"&gt;oxcaml/merlin#173&lt;/a&gt;, and thread subsystem efficiency gains in &lt;a href="https://github.com/oxcaml/oxcaml/issues/4432"&gt;oxcaml/oxcaml#4432&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-32"/><summary>Major release week featuring block indices language implementation, LLVM backend progress, Merlin PPX system overhaul, and Jane Street v0.18 preview</summary><published>2025-08-10T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-33</id><title>Week 33, 2025: Major work on oxcaml core development, Merlin PPX integration, and Flambda compiler synchronization</title><updated>2025-08-17T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Small integer types stabilized&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; moving &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Int8&lt;/code&gt;, &lt;code&gt;Int16&lt;/code&gt;, &lt;code&gt;Int8_u&lt;/code&gt;, &lt;code&gt;Int16_u&lt;/code&gt;, and &lt;code&gt;Int_u&lt;/code&gt; modules from &lt;code&gt;stdlib_beta&lt;/code&gt; to &lt;code&gt;stdlib_stable&lt;/code&gt; for unboxed integer operations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/ae5ce4357a652830"&gt;ae5ce4357a652830&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Atomic locations API&lt;/strong&gt; added &lt;code&gt;Atomic.Loc&lt;/code&gt; module enabling atomic operations on record fields and other locations within non-atomic objects (&lt;a href="https://github.com/oxcaml/oxcaml/commit/d47fc3042352bd48"&gt;d47fc3042352bd48&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/177" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;PPX override system&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with &lt;code&gt;@@@merlin.document&lt;/code&gt; and &lt;code&gt;@@@merlin.locate&lt;/code&gt; attributes allowing PPX-expanded files to customize command outputs (&lt;a href="https://github.com/oxcaml/merlin/issues/177"&gt;oxcaml/merlin#177&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;DWARF type debugging&lt;/strong&gt; with new &lt;code&gt;-ddwarf-types&lt;/code&gt; compiler flag for debugging type generation in DWARF output (&lt;a href="https://github.com/oxcaml/oxcaml/commit/ece8435c4a16d36"&gt;ece8435c4a16d36&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Void type support&lt;/strong&gt; in C stubs eliminating upstream compatibility warnings (&lt;a href="https://github.com/oxcaml/oxcaml/commit/bbff682fa126203e"&gt;bbff682fa126203e&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Memory profiler participation API&lt;/strong&gt; with &lt;code&gt;Gc.Memprof.participate&lt;/code&gt; for domain-specific profiling control (&lt;a href="https://github.com/oxcaml/oxcaml/commit/c5bcd689cfb32adf"&gt;c5bcd689cfb32adf&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Core compiler development&lt;/strong&gt; dominated by &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 17 contributors delivering feature stabilization, backend optimizations, and JSIR development&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Editor tooling enhancements&lt;/strong&gt; in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with PPX override system implementation and comprehensive Flambda compiler synchronization&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Repository activity concentration&lt;/strong&gt; with only oxcaml/oxcaml and oxcaml/merlin showing activity, while oxcaml/opam-repository, oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml, and janestreet/opam-repository remained inactive&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler synchronization&lt;/strong&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with Flambda 5.2.0minus-17 integration bringing shared type system enhancements and magic number updates&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript compilation alignment&lt;/strong&gt; with &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; JSIR backend development potentially supporting future &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; integration&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;PPX tooling ecosystem&lt;/strong&gt; development in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; creating infrastructure that could benefit code generation workflows across the oxcaml repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4504" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Baremetal framework discussion&lt;/strong&gt;&lt;/a&gt; initiated by &lt;a href="https://github.com/nickbetteridge"&gt;@nickbetteridge&lt;/a&gt; about baremetal booting support (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4504"&gt;oxcaml/oxcaml#4504&lt;/a&gt;), with &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; suggesting Unikraft as a foundation and pointing to existing MirageOS compatibility solutions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Feature stabilization focus&lt;/strong&gt; with small integer types graduating from beta to stable, indicating maturation of the unboxed integer type system in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Advanced debugging infrastructure&lt;/strong&gt; expansion through comprehensive DWARF support improvements and new debugging flags for type generation&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;PPX ecosystem integration&lt;/strong&gt; with override mechanisms in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; enabling PPX tools to provide custom behavior for editor commands&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript compilation backend progress&lt;/strong&gt; with substantial JSIR development showing exception handling, multi-file support, and optimization integration&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Systematic upstream synchronization&lt;/strong&gt; with regular Flambda compiler merges maintaining compatibility with cutting-edge OCaml type system features&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-33"/><summary>Major work on oxcaml core development, Merlin PPX integration, and Flambda compiler synchronization</summary><published>2025-08-17T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-34</id><title>Week 34, 2025: High activity week in oxcaml/oxcaml with compiler optimizations and runtime improvements, plus tooling updates in Merlin</title><updated>2025-08-24T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;New &lt;a href="https://github.com/oxcaml/oxcaml/issues/4544" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;CFG prologue optimization flags&lt;/strong&gt;&lt;/a&gt; for fine-tuning function prologue placement including &lt;code&gt;-cfg-prologue-validate&lt;/code&gt;, &lt;code&gt;-cfg-prologue-shrink-wrap&lt;/code&gt;, and &lt;code&gt;-cfg-prologue-shrink-wrap-threshold&lt;/code&gt; enabling advanced control flow graph optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544"&gt;oxcaml/oxcaml#4544&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enhanced &lt;a href="https://github.com/oxcaml/oxcaml/issues/4551" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Atomic.t API&lt;/strong&gt;&lt;/a&gt; by exposing its internal structure as a record with mutable atomic contents field, enabling &lt;code&gt;%atomic.loc&lt;/code&gt; usage for creating atomic locations to atomic contents (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4551"&gt;oxcaml/oxcaml#4551&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4556" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;DWARF debugging silencing&lt;/strong&gt;&lt;/a&gt; mechanism to suppress shape-related errors during compilation while preserving fatal errors for invalid &lt;code&gt;[@@unboxed]&lt;/code&gt; constructs (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4556"&gt;oxcaml/oxcaml#4556&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/179" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced dot-merlin-reader discovery&lt;/strong&gt;&lt;/a&gt; with three-tier lookup system: environment variable override (&lt;code&gt;DOT_MERLIN_READER_EXE&lt;/code&gt;), same directory as Merlin executable, and PATH fallback (&lt;a href="https://github.com/oxcaml/merlin/issues/179"&gt;oxcaml/merlin#179&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed &lt;strong style="color: #cc6600;"&gt;caml&lt;em&gt;array&lt;/em&gt;blit segfaults&lt;/strong&gt; by correcting the noalloc annotation, resolving crashes with &lt;code&gt;%arrayblit&lt;/code&gt; operations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4568"&gt;oxcaml/oxcaml#4568&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved &lt;a href="https://github.com/oxcaml/oxcaml/issues/4553" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;unboxed product record updates&lt;/strong&gt;&lt;/a&gt; by eliminating unnecessary &lt;code&gt;caml_modify&lt;/code&gt; calls for nested structures, optimizing performance for mixed block field updates (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4553"&gt;oxcaml/oxcaml#4553&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4533" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/oxcaml&lt;/strong&gt;&lt;/a&gt; dominated activity with 17 contributors delivering compiler optimizations, runtime improvements, and new CFG features across 21 merged PRs (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4533"&gt;oxcaml/oxcaml#4533&lt;/a&gt; to &lt;a href="https://github.com/oxcaml/oxcaml/issues/4568"&gt;oxcaml/oxcaml#4568&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/179" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/merlin&lt;/strong&gt;&lt;/a&gt; received focused updates from &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; improving dot-merlin-reader discovery and merging OCaml 5.2.0minus-18 compiler changes (&lt;a href="https://github.com/oxcaml/merlin/issues/179"&gt;oxcaml/merlin#179&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/180"&gt;oxcaml/merlin#180&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/73" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;janestreet/opam-repository&lt;/strong&gt;&lt;/a&gt; had one bug fix PR from &lt;a href="https://github.com/lthls"&gt;Vincent Laviron&lt;/a&gt; addressing utop conflict clause capitalization (&lt;a href="https://github.com/janestreet/opam-repository/issues/73"&gt;janestreet/opam-repository#73&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/opam-repository&lt;/strong&gt; and &lt;strong style="color: #cc6600;"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/strong&gt; showed no activity during this week&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4564" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;OCaml 5.2.0minus-18 version coordination&lt;/strong&gt;&lt;/a&gt; between oxcaml/oxcaml (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4564"&gt;oxcaml/oxcaml#4564&lt;/a&gt;) and oxcaml/merlin (&lt;a href="https://github.com/oxcaml/merlin/issues/180"&gt;oxcaml/merlin#180&lt;/a&gt;) ensuring synchronized compiler and tooling updates&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janestreet/opam-repository/issues/73" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Cross-repository bug tracking&lt;/strong&gt;&lt;/a&gt; with janestreet/opam-repository PR (&lt;a href="https://github.com/janestreet/opam-repository/issues/73"&gt;janestreet/opam-repository#73&lt;/a&gt;) referencing related issue &lt;a href="https://github.com/oxcaml/oxcaml/issues/4437"&gt;oxcaml/oxcaml#4437&lt;/a&gt; for utop conflict resolution&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Shared contributor activity&lt;/strong&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; working on both compiler changes in oxcaml/oxcaml and corresponding tooling updates in oxcaml/merlin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Performance-oriented development&lt;/strong&gt;&lt;/a&gt; with emphasis on CFG optimization, unboxed type handling, and runtime efficiency improvements across multiple backend systems in oxcaml/oxcaml (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4544"&gt;oxcaml/oxcaml#4544&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4553"&gt;oxcaml/oxcaml#4553&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4556" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced debugging support&lt;/strong&gt;&lt;/a&gt; through DWARF improvements and better error handling mechanisms, making the compiler more developer-friendly while maintaining robustness (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4556"&gt;oxcaml/oxcaml#4556&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/179" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Tooling infrastructure improvements&lt;/strong&gt;&lt;/a&gt; with systematic enhancement of discovery mechanisms and environment overrides in development tools (&lt;a href="https://github.com/oxcaml/merlin/issues/179"&gt;oxcaml/merlin#179&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4167" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Runtime system hardening&lt;/strong&gt;&lt;/a&gt; with consistent error handling patterns and improved domain management, focusing on stability for concurrent OCaml applications (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4167"&gt;oxcaml/oxcaml#4167&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4534"&gt;oxcaml/oxcaml#4534&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-repository synchronization&lt;/strong&gt; patterns emerging with coordinated version updates and shared contributor activity ensuring consistent toolchain evolution&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-34"/><summary>High activity week in oxcaml/oxcaml with compiler optimizations and runtime improvements, plus tooling updates in Merlin</summary><published>2025-08-24T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-35</id><title>Week 35, 2025: Major oxcaml compiler optimizations, complete documentation toolchain integration, and Jane Street v0.18 preview release</title><updated>2025-08-31T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;New &lt;code&gt;-gdwarf-pedantic&lt;/code&gt; compiler flag&lt;/strong&gt; enables pedantic DWARF error checking with fatal errors instead of silent fallbacks (&lt;a href="https://github.com/oxcaml/oxcaml/commit/1d3e7ef8a91f6c2211db49dcc1add3cf9a94c3eb"&gt;oxcaml/oxcaml@1d3e7ef&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4571" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Affine switch recognition&lt;/strong&gt;&lt;/a&gt; in flambda2 optimizer prevents middle-end from blocking later affine switch optimizations (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4571"&gt;oxcaml/oxcaml#4571&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Atomic API consolidation&lt;/strong&gt; removes separate &lt;code&gt;Atomic.Contended&lt;/code&gt; module, streamlining atomic operations with simplified mode annotations (&lt;a href="https://github.com/oxcaml/oxcaml/commit/e801519d4472e656ae6077c46ec5be1fc3a433ce"&gt;oxcaml/oxcaml@e801519&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Odoc documentation toolchain&lt;/strong&gt;&lt;/a&gt; integration with full package suite including &lt;code&gt;odoc&lt;/code&gt;, &lt;code&gt;odoc-parser&lt;/code&gt;, &lt;code&gt;odoc-driver&lt;/code&gt;, &lt;code&gt;odoc-md&lt;/code&gt;, and &lt;code&gt;sherlodoc&lt;/code&gt; packages (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Eio async I/O library&lt;/strong&gt;&lt;/a&gt; added with platform-specific packages &lt;code&gt;eio&lt;/code&gt;, &lt;code&gt;eio_posix&lt;/code&gt;, &lt;code&gt;eio_linux&lt;/code&gt;, and &lt;code&gt;eio_main&lt;/code&gt; for effect-based direct-style I/O (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;ppx_box package&lt;/strong&gt; - New PPX syntax extension library for Jane Street's OCaml ecosystem (&lt;a href="https://github.com/janestreet/opam-repository/commit/2bd4fc7121ad1a58419f2c5f6eba929e044b4041"&gt;janestreet/opam-repository@2bd4fc7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;unique package&lt;/strong&gt; - New library providing uniqueness functionality with OCaml 5.2.0+ requirement (&lt;a href="https://github.com/janestreet/opam-repository/commit/2bd4fc7121ad1a58419f2c5f6eba929e044b4041"&gt;janestreet/opam-repository@2bd4fc7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/181" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Disabled spurious probe name error&lt;/strong&gt;&lt;/a&gt; that was incorrectly reported when using &lt;code&gt;%probe_is_enabled&lt;/code&gt; in OCaml code (&lt;a href="https://github.com/oxcaml/merlin/issues/181"&gt;oxcaml/merlin#181&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler development momentum&lt;/strong&gt; with &lt;a href="https://github.com/xclerc"&gt;Xavier Clerc&lt;/a&gt; and &lt;a href="https://github.com/polytypic"&gt;Vesa Karvonen&lt;/a&gt; driving major backend optimizations including DWARF debugging improvements, type safety enhancements, and mode system refinements across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Documentation infrastructure completion&lt;/strong&gt; by &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt; establishing comprehensive odoc toolchain and eio async I/O library in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; for improved developer experience&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Editor integration improvements&lt;/strong&gt; with &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; resolving user-reported probe error issues in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; while continuing work on VSCode syntax hover functionality&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Jane Street ecosystem update&lt;/strong&gt; with automated v0.18~preview.130.50+1016 release adding two new packages across 281 total packages in &lt;a href="https://github.com/janestreet/opam-repository"&gt;janestreet/opam-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;No activity&lt;/strong&gt; recorded in &lt;a href="https://github.com/oxcaml/js_of_ocaml"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/a&gt; during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Documentation toolchain coordination&lt;/strong&gt;&lt;/a&gt; between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with odoc integration supporting compiler development workflow through comprehensive API documentation (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Eio library patching collaboration&lt;/strong&gt; with &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; providing oxcaml-specific patches referenced in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; package sources until upstream integration&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/149" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Upstream coordination efforts&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; query protocol refactoring work being contributed back to the main OCaml Merlin project (&lt;a href="https://github.com/oxcaml/merlin/issues/149"&gt;oxcaml/merlin#149&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Ocaml-lsp-server compatibility&lt;/strong&gt; improvements in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; with patches for current odoc-parser integration supporting editor functionality (&lt;a href="https://github.com/oxcaml/opam-repository/commit/7ced23c5d63a57ac73e250298adbdbc3de3cd629"&gt;oxcaml/opam-repository@7ced23c&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Backend optimization focus&lt;/strong&gt; with systematic work on shrink-wrapping, prologue validation, and tail call preservation showing coordinated performance improvement efforts across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Mode system stabilization&lt;/strong&gt; with ongoing refinements to atomic operations, queue interfaces, and array/bigarray annotations indicating architectural maturation in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Documentation-first development&lt;/strong&gt; approach with complete odoc toolchain integration in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; supporting improved API documentation quality across the ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Git-based package management&lt;/strong&gt; transition in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; replacing patch files with direct repository references for more maintainable package definitions&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced debugging capabilities&lt;/strong&gt; through DWARF improvements, pedantic error checking, and comprehensive test coverage reflecting focus on developer experience in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Editor integration improvements&lt;/strong&gt; with enhanced VSCode functionality through new type location commands and syntax hover features in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-35"/><summary>Major oxcaml compiler optimizations, complete documentation toolchain integration, and Jane Street v0.18 preview release</summary><published>2025-08-31T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-36</id><title>Week 36, 2025: Major compiler advances in DWARF debugging, unboxed types, and SIMD with comprehensive package toolchain improvements</title><updated>2025-09-07T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4535" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;DWARF debugging performance controls&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with new &lt;code&gt;-dwarf-fidelity&lt;/code&gt; flag accepting low|medium|high|very-high|ultra-high values (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4535"&gt;oxcaml/oxcaml#4535&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4648" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Raw SIMD load/store intrinsics&lt;/strong&gt;&lt;/a&gt; for directly loading/storing vectors from nativeint# addresses (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4648"&gt;oxcaml/oxcaml#4648&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Untagged char literals&lt;/strong&gt;&lt;/a&gt; with syntax &lt;code&gt;#'a'&lt;/code&gt; enabled by small numbers extension (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658"&gt;oxcaml/oxcaml#4658&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4635" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Small integer and untagged immediate literals&lt;/strong&gt;&lt;/a&gt; including int8: &lt;code&gt;42s&lt;/code&gt;, int16: &lt;code&gt;42S&lt;/code&gt;, int8#: &lt;code&gt;#42s&lt;/code&gt;, int16#: &lt;code&gt;#42S&lt;/code&gt;, and int#: &lt;code&gt;#42m&lt;/code&gt; (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4635"&gt;oxcaml/oxcaml#4635&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml toplevel support&lt;/strong&gt; enabled for Oxcaml through unified patches (&lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/183" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Merlin outline command enhancement&lt;/strong&gt;&lt;/a&gt; with &lt;code&gt;-include-types&lt;/code&gt; flag allowing LSP control over type information display (&lt;a href="https://github.com/oxcaml/merlin/issues/183"&gt;oxcaml/merlin#183&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4659" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Complete Char_u module&lt;/strong&gt;&lt;/a&gt; mirroring Stdlib.Char with additional conversion functions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4659"&gt;oxcaml/oxcaml#4659&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Compiler development&lt;/strong&gt; dominated by &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; with 17 contributors delivering major DWARF debugging infrastructure, unboxed type system extensions, and JavaScript backend integration&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Package ecosystem&lt;/strong&gt; improvements in &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; focused on js&lt;em&gt;of&lt;/em&gt;ocaml fixes, toolchain updates, and migration to repository-based maintenance&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer tooling&lt;/strong&gt; enhancements in &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; with LSP integration improvements and performance optimization for large codebases&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-repository coordination&lt;/strong&gt; evident in js&lt;em&gt;of&lt;/em&gt;ocaml support spanning compiler backend integration and package repository fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;js&lt;em&gt;of&lt;/em&gt;ocaml ecosystem&lt;/strong&gt; coordination between &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; JavaScript backend integration (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;) and &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; toplevel support fixes (&lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Toolchain consistency&lt;/strong&gt;&lt;/a&gt; across repositories with &lt;a href="https://github.com/oxcaml/opam-repository"&gt;oxcaml/opam-repository&lt;/a&gt; migrating to oxcaml organization repositories for odoc, eio, and mdx packages (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Developer experience&lt;/strong&gt; improvements spanning &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; DWARF debugging enhancements and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; LSP integration for better IDE support&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance optimization&lt;/strong&gt; focus across &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt; shrink-wrapping and SIMD intrinsics and &lt;a href="https://github.com/oxcaml/merlin"&gt;oxcaml/merlin&lt;/a&gt; short-paths algorithm improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/182" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Merlin performance optimization&lt;/strong&gt;&lt;/a&gt; technical discussion between &lt;a href="https://github.com/liam923"&gt;Liam Stevenson&lt;/a&gt; and &lt;a href="https://github.com/lpw25"&gt;Leo White&lt;/a&gt; regarding short-paths algorithm fixes with detailed alternative implementation suggestions (&lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/11" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform build compatibility&lt;/strong&gt;&lt;/a&gt; discussion addressing macOS-specific issues with gpatch vs patch differences between &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt; and &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt; (&lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;DWARF debugging ecosystem maturation&lt;/strong&gt; with performance tuning controls, comprehensive type support, and parameter availability fixes indicating production readiness focus in &lt;a href="https://github.com/oxcaml/oxcaml"&gt;oxcaml/oxcaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Unboxed type system expansion&lt;/strong&gt;&lt;/a&gt; with literals, debugging support, and stdlib modules showing commitment to zero-cost abstractions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4658"&gt;oxcaml/oxcaml#4658&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4659"&gt;oxcaml/oxcaml#4659&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/8" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Repository-based package maintenance&lt;/strong&gt;&lt;/a&gt; trend emerging with migration from patch files to direct git+https URLs pointing to oxcaml organization forks (&lt;a href="https://github.com/oxcaml/opam-repository/issues/8"&gt;oxcaml/opam-repository#8&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript backend development&lt;/strong&gt;&lt;/a&gt; with JSIR integration and toplevel support suggesting multi-target compilation strategy (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/opam-repository/issues/7"&gt;oxcaml/opam-repository#7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/183" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;LSP tooling enhancement&lt;/strong&gt;&lt;/a&gt; focus on direct integration capabilities and performance optimization for enterprise-scale codebases (&lt;a href="https://github.com/oxcaml/merlin/issues/183"&gt;oxcaml/merlin#183&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/merlin/issues/182"&gt;oxcaml/merlin#182&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-36"/><summary>Major compiler advances in DWARF debugging, unboxed types, and SIMD with comprehensive package toolchain improvements</summary><published>2025-09-07T00:00:00+00:00</published></entry><entry><id>https://thicket.dev//groups/oxcaml/2025/week-37</id><title>Week 37, 2025: Major JSIR backend development for JavaScript compilation, TLS implementation, and opam package compatibility fixes</title><updated>2025-09-14T00:00:00+00:00</updated><content type="html">&lt;h2&gt;New Features&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;New JavaScript compilation backend&lt;/strong&gt;&lt;/a&gt; enabling Flambda2 to compile directly to js&lt;em&gt;of&lt;/em&gt;ocaml IR (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;) with comprehensive JSIR support including effects (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4656"&gt;oxcaml/oxcaml#4656&lt;/a&gt;), arrays (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4709"&gt;oxcaml/oxcaml#4709&lt;/a&gt;), and float32 conversions (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4717"&gt;oxcaml/oxcaml#4717&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4671" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Thread-local storage (TLS) implementation&lt;/strong&gt;&lt;/a&gt; providing per-thread storage with the same interface as DLS but without thread safety overhead (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4671"&gt;oxcaml/oxcaml#4671&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4648" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Raw SIMD load/store intrinsics&lt;/strong&gt;&lt;/a&gt; for directly loading/storing vectors from/to memory addresses (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4648"&gt;oxcaml/oxcaml#4648&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4677" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Small integer ecosystem completion&lt;/strong&gt;&lt;/a&gt; including array indexing support for int16# and int8# types (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4677"&gt;oxcaml/oxcaml#4677&lt;/a&gt;, &lt;a href="https://github.com/oxcaml/oxcaml/issues/4691"&gt;oxcaml/oxcaml#4691&lt;/a&gt;), comprehensive literal parsing (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4635"&gt;oxcaml/oxcaml#4635&lt;/a&gt;), and new &lt;code&gt;Char_u&lt;/code&gt; module in stdlib_stable (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4659"&gt;oxcaml/oxcaml#4659&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4478" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Enhanced debugging capabilities&lt;/strong&gt;&lt;/a&gt; including small integer support in DWARF (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4478"&gt;oxcaml/oxcaml#4478&lt;/a&gt;), configurable performance dials (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4535"&gt;oxcaml/oxcaml#4535&lt;/a&gt;), and improved parameter availability (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4652"&gt;oxcaml/oxcaml#4652&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Fixed js&lt;em&gt;of&lt;/em&gt;ocaml installation failures&lt;/strong&gt; by updating patch files for compatibility with macOS and opam 2.4.1 (&lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Group Overview&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/oxcaml&lt;/strong&gt; dominated activity with 17 contributors implementing a major new JavaScript compilation backend, comprehensive small integer type system, TLS support, and extensive debugging infrastructure improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/11" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/opam-repository&lt;/strong&gt;&lt;/a&gt; addressed critical installation issues affecting js&lt;em&gt;of&lt;/em&gt;ocaml packages with community collaboration on patch compatibility fixes (&lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/merlin/issues/184" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/merlin&lt;/strong&gt;&lt;/a&gt; maintained steady development with documentation updates (&lt;a href="https://github.com/oxcaml/merlin/issues/184"&gt;oxcaml/merlin#184&lt;/a&gt;) and ongoing syntax enhancement work (&lt;a href="https://github.com/oxcaml/merlin/issues/168"&gt;oxcaml/merlin#168&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;oxcaml/js&lt;em&gt;of&lt;/em&gt;ocaml&lt;/strong&gt; and &lt;strong style="color: #cc6600;"&gt;janestreet/opam-repository&lt;/strong&gt; had no recorded activity during this period&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cross-Repository Work&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript compilation pipeline&lt;/strong&gt;&lt;/a&gt; development in oxcaml/oxcaml creating new JSIR backend that directly integrates with js&lt;em&gt;of&lt;/em&gt;ocaml, establishing foundation for enhanced web compilation capabilities (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/11" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Package distribution coordination&lt;/strong&gt;&lt;/a&gt; between oxcaml/oxcaml's JSIR work and oxcaml/opam-repository's js&lt;em&gt;of&lt;/em&gt;ocaml patch fixes, ensuring installation compatibility across platforms (&lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Debugging infrastructure alignment&lt;/strong&gt;&lt;/a&gt; with oxcaml/oxcaml's enhanced DWARF capabilities potentially supporting better integration with oxcaml/merlin's development tools (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4440"&gt;oxcaml/oxcaml#4440&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notable Discussions&lt;/h2&gt;

&lt;li&gt;&lt;a href="https://github.com/oxcaml/opam-repository/issues/11" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Patch compatibility troubleshooting&lt;/strong&gt;&lt;/a&gt; involving &lt;a href="https://github.com/jonludlam"&gt;Jon Ludlam&lt;/a&gt;, &lt;a href="https://github.com/avsm"&gt;Anil Madhavapeddy&lt;/a&gt;, and &lt;a href="https://github.com/matthewelse"&gt;Matthew Else&lt;/a&gt; investigating differences in patch behavior across opam versions and operating systems, with potential opam expertise involvement needed (&lt;a href="https://github.com/oxcaml/opam-repository/issues/11"&gt;oxcaml/opam-repository#11&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;JSIR backend development coordination&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/smjleo"&gt;Leo Lee&lt;/a&gt; leading implementation efforts and receiving review feedback on JavaScript compilation architecture (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4638"&gt;oxcaml/oxcaml#4638&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oxcaml/oxcaml/issues/4693" style="text-decoration: none;"&gt;&lt;strong style="color: #cc6600;"&gt;Project planning discussions&lt;/strong&gt;&lt;/a&gt; with &lt;a href="https://github.com/mshinwell"&gt;Mark Shinwell&lt;/a&gt; opening 12 tracking issues for future compiler optimization work, establishing roadmap for upcoming development cycles (&lt;a href="https://github.com/oxcaml/oxcaml/issues/4693"&gt;oxcaml/oxcaml#4693&lt;/a&gt;-&lt;a href="https://github.com/oxcaml/oxcaml/issues/4705"&gt;oxcaml/oxcaml#4705&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Emerging Trends&lt;/h2&gt;

&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;JavaScript compilation maturity&lt;/strong&gt; with the new JSIR backend representing a complete alternative compilation path from Flambda2 to JavaScript, positioning oxcaml for enhanced web development capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Small integer type system completion&lt;/strong&gt; across all compiler phases from parsing through code generation, indicating production readiness for int8/int16 types in oxcaml applications&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Advanced debugging infrastructure&lt;/strong&gt; with sophisticated DWARF emission controls, metrics collection, and comprehensive small type support demonstrating enterprise-level debugging capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Performance-oriented backend development&lt;/strong&gt; including shrink-wrapping optimizations, SIMD intrinsics, and regalloc improvements showing continued focus on high-performance native code generation&lt;/li&gt;
&lt;li&gt;&lt;strong style="color: #cc6600;"&gt;Cross-platform package maintenance&lt;/strong&gt; emphasis with community collaboration on compatibility issues, ensuring oxcaml ecosystem reliability across different environments&lt;/li&gt;
&lt;/ul&gt;
</content><link href="https://thicket.dev//groups/oxcaml/2025/week-37"/><summary>Major JSIR backend development for JavaScript compilation, TLS implementation, and opam package compatibility fixes</summary><published>2025-09-14T00:00:00+00:00</published></entry></feed>
{"repo_full": "ocaml/RFCs", "org": "ocaml", "repo_name": "RFCs", "total_weeks": 49, "summaries": [{"week": 37, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-09-08 to 2025-09-14", "start_commit": null, "end_commit": null, "brief_summary": "New for...in loop syntax RFC proposed and ongoing discussions about language committee conflict of interest policies", "new_features_summary": null, "new_features": null, "activity_summary": "Sacha Ayoun proposed for...in syntax RFC while Language Committee conflict policy discussions continue approaching resolution", "activity": "- **Language syntax enhancement** proposed by [Sacha Ayoun](https://github.com/giltho) with new `for...in` construct RFC similar to other programming languages, aiming to improve code readability and newcomer friendliness ([#56](https://github.com/ocaml/RFCs/issues/56))\n- **Language Committee governance** discussions by [Florian Angeletti](https://github.com/Octachron) on conflict of interest policy nearing conclusion, with [Gabriel Scherer](https://github.com/gasche) providing detailed feedback on institutional differences and [Jeremy Yallop](https://github.com/yallop) expressing support for the proposal ([#55](https://github.com/ocaml/RFCs/issues/55))\n- **Community debate** on iterator syntax preferences with [Frédéric Loyer](https://github.com/F-Loyer) and [Kate](https://github.com/kit-ty-kate) discussing existing labeled iterator alternatives and standard library approaches in the for...in RFC discussion", "discussions_summary": "Active technical debate on for...in syntax necessity and Language Committee policy refinement discussions", "notable_discussions": "- **Syntax design debate** around the necessity of `for...in` loops given existing labeled iterators, with contributors comparing OCaml's current approaches to other languages like Rust and discussing readability trade-offs ([#56](https://github.com/ocaml/RFCs/issues/56))\n- **Governance policy discussions** reaching consensus on Language Committee conflict of interest handling, with detailed analysis of institutional differences between public institutions like INRIA and private companies, plus considerations of funding source transparency ([#55](https://github.com/ocaml/RFCs/issues/55))", "trends_summary": "Language modernization efforts and improved governance transparency emerging as key community priorities", "emerging_trends": "- **Language accessibility focus** with proposals targeting newcomer-friendly syntax changes that maintain OCaml's functional programming paradigms while borrowing familiar constructs from other languages\n- **Governance transparency initiatives** emphasizing clear conflict of interest policies and funding source disclosure to maintain community trust in language development decisions\n- **Cross-institutional collaboration** discussions highlighting the need for balanced representation between academic institutions and industry participants in language governance", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Sacha Ayoun authored new RFC proposal while multiple Language Committee members engaged in governance policy discussions", "contributors": "- [Sacha Ayoun](https://github.com/giltho) authored the new `for...in` syntax RFC proposal with comprehensive documentation and responded to community feedback about existing iterator alternatives ([#56](https://github.com/ocaml/RFCs/issues/56))\n- [Florian Angeletti](https://github.com/Octachron) continued development of Language Committee conflict of interest policy, incorporating community feedback and planning September finalization ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Gabriel Scherer](https://github.com/gasche) provided extensive analysis of institutional differences in conflict of interest considerations and shared insights about OCaml Software Foundation funding relationships ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Jeremy Yallop](https://github.com/yallop) expressed support for the governance policy approach and provided feedback on proposal refinements ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Frédéric Loyer](https://github.com/F-Loyer) and [Kate](https://github.com/kit-ty-kate) contributed to technical discussions about iterator syntax alternatives and standard library approaches ([#56](https://github.com/ocaml/RFCs/issues/56))\n- [Sébastien Hinderer](https://github.com/shindere) provided editorial feedback on language usage in the conflict of interest policy ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Richard Eisenberg](https://github.com/goldfirere) participated in governance policy discussions and expressed satisfaction with the current proposal text ([#55](https://github.com/ocaml/RFCs/issues/55))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 36, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-09-01 to 2025-09-07", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 35, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-08-25 to 2025-08-31", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 34, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-08-18 to 2025-08-24", "start_commit": null, "end_commit": null, "brief_summary": "Ongoing discussion on conflicts of interest policy for OCaml Language Committee", "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": "Continued committee deliberation on transparency policies and conflict resolution procedures", "notable_discussions": "- **OCaml Language Committee** conflicts of interest policy discussion by [Florian Angeletti](https://github.com/Octachron) with extensive **governance framework** deliberation including transparency measures and committee member affiliations ([#55](https://github.com/ocaml/RFCs/issues/55))\n- **Institutional bias analysis** by [Gabriel Scherer](https://github.com/gasche) examining differences between public research institutions and private companies in committee decision-making processes, with disclosure of **Jane Street funding** for INRIA compiler development ([#55](https://github.com/ocaml/RFCs/issues/55))\n- **Policy implementation timeline** discussion by [Jeremy Yallop](https://github.com/yallop) advocating for pragmatic consensus approach with **polymorphic principles** over detailed process rules ([#55](https://github.com/ocaml/RFCs/issues/55))\n- **Technical corrections** suggested by [Sébastien Hinderer](https://github.com/shindere) for proper grammar in conflict of interest documentation ([#55](https://github.com/ocaml/RFCs/issues/55))", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Committee members engaged in governance policy refinement with detailed procedural considerations", "contributors": "- [Florian Angeletti](https://github.com/Octachron) authored the conflicts of interest policy proposal and managed timeline discussion, indicating intent to wait for additional feedback before merging ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Gabriel Scherer](https://github.com/gasche) provided extensive analysis of institutional differences in committee representation, disclosed funding relationships with Jane Street, and supported moving forward with current consensus ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Jeremy Yallop](https://github.com/yallop) reviewed proposal text, provided feedback on policy approach emphasizing polymorphic principles, and endorsed the current framework ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Sébastien Hinderer](https://github.com/shindere) contributed technical writing review with grammar correction suggestion ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Richard Eisenberg](https://github.com/goldfirere) expressed support for the proposal text and readiness to proceed ([#55](https://github.com/ocaml/RFCs/issues/55))\n- [Guillaume Munch-Maccagnoni](https://github.com/gadmm) was referenced in discussion regarding concrete proposal improvements and committee decision-making processes ([#55](https://github.com/ocaml/RFCs/issues/55))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 33, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-08-11 to 2025-08-17", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 32, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-08-04 to 2025-08-10", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 31, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-07-28 to 2025-08-03", "start_commit": null, "end_commit": null, "brief_summary": "Ongoing governance discussions about OCaml Language Committee conflict of interest policy", "new_features_summary": null, "new_features": null, "activity_summary": "Committee governance policy development through detailed RFC review process", "activity": "- **Governance policy development** through extensive review of the OCaml Language Committee conflict of interest policy in [#55](https://github.com/ocaml/RFCs/issues/55)\n- **Committee transparency measures** being finalized including affiliation disclosure requirements and conflict reporting procedures discussed by [Florian Angeletti](https://github.com/Octachron)\n- **Implementation planning** for the governance policy with committee members agreeing to proceed with the current proposal structure", "discussions_summary": "Detailed technical and procedural debate about committee governance transparency", "notable_discussions": "- **Conflict of interest policy framework** extensively discussed by [Gabriel Scherer](https://github.com/gasche), [Jeremy Yallop](https://github.com/yallop), and [Guillaume Munch-Maccagnoni](https://github.com/gadmm) covering institutional vs. company affiliations and decision-making transparency in [#55](https://github.com/ocaml/RFCs/issues/55)\n- **Committee decision-making process** debate including consensus vs. voting approaches for technical decisions and handling of conflicted members in deliberations [#55](https://github.com/ocaml/RFCs/issues/55)\n- **Financial transparency requirements** discussion regarding OCaml Software Foundation funding relationships and their impact on committee member participation [#55](https://github.com/ocaml/RFCs/issues/55)", "trends_summary": "Focus on committee governance formalization and transparency protocols", "emerging_trends": "- **Governance formalization** trend with the OCaml Language Committee establishing formal conflict of interest policies and transparency requirements [#55](https://github.com/ocaml/RFCs/issues/55)\n- **Community transparency emphasis** with increased focus on making committee decision-making processes more visible and accountable to the broader OCaml community\n- **Policy consensus building** approach with committee members working toward practical governance solutions that balance effectiveness with transparency", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Committee members and community contributors engaged in governance policy development", "contributors": "- [Florian Angeletti](https://github.com/Octachron) authored and maintained the conflict of interest policy RFC, responding to feedback and planning implementation timeline [#55](https://github.com/ocaml/RFCs/issues/55)\n- [Gabriel Scherer](https://github.com/gasche) provided detailed analysis of institutional vs. company conflict distinctions and shared transparency about OCaml Software Foundation funding relationships [#55](https://github.com/ocaml/RFCs/issues/55)\n- [Jeremy Yallop](https://github.com/yallop) facilitated discussion process and advocated for practical policy implementation approaches [#55](https://github.com/ocaml/RFCs/issues/55)\n- [Richard Eisenberg](https://github.com/goldfirere) participated in policy review and expressed support for the current proposal structure [#55](https://github.com/ocaml/RFCs/issues/55)\n- [Sébastien Hinderer](https://github.com/shindere) contributed editorial feedback on the RFC text [#55](https://github.com/ocaml/RFCs/issues/55)\n- [Guillaume Munch-Maccagnoni](https://github.com/gadmm) provided feedback on the governance policy approach and committee decision-making processes [#55](https://github.com/ocaml/RFCs/issues/55)", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 30, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-07-21 to 2025-07-27", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 29, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-07-14 to 2025-07-20", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 28, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-07-07 to 2025-07-13", "start_commit": null, "end_commit": null, "brief_summary": "OCaml Language Committee governance discussion with new conflict of interest policy proposal opened for review", "new_features_summary": null, "new_features": null, "activity_summary": "Ongoing governance policy development focused on transparency and conflict of interest management for the OCaml Language Committee", "activity": "- **Governance policy development** with [#55](https://github.com/ocaml/RFCs/issues/55) proposing transparency-based conflict of interest policy for the OCaml Language Committee, introducing affiliation disclosure requirements and delegation procedures for conflicted committee members\n- **Committee member coordination** around implementation timeline with [Florian Angeletti](https://github.com/Octachron) planning amendments and merging for early September following holiday period", "discussions_summary": "Committee members engaged in detailed review of conflict of interest policy with focus on institutional treatment and implementation approach", "notable_discussions": "- **Conflict of interest policy design** in [#55](https://github.com/ocaml/RFCs/issues/55) with [Gabriel Scherer](https://github.com/gasche) providing detailed analysis of institutional differences between public institutions like INRIA versus private companies, and disclosure of Jane Street funding relationships\n- **Implementation pragmatism** discussed by [Jeremy Yallop](https://github.com/yallop) emphasizing need for operational committee policies over lengthy deliberation, supporting polymorphic principles over detailed rule anticipation\n- **Editorial feedback** from [Sébastien Hinderer](https://github.com/shindere) addressing language corrections and [Richard Eisenberg](https://github.com/goldfirere) expressing approval of current proposal text", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Active governance work by OCaml Language Committee members with policy development and community feedback on transparency procedures", "contributors": "- [Florian Angeletti](https://github.com/Octachron) authored the conflict of interest policy proposal ([#55](https://github.com/ocaml/RFCs/issues/55)), coordinated review timeline, and managed community feedback integration\n- [Gabriel Scherer](https://github.com/gasche) provided comprehensive policy analysis, disclosed Jane Street funding relationships affecting committee members, and contributed detailed feedback on institutional treatment approaches\n- [Jeremy Yallop](https://github.com/yallop) reviewed the proposal with focus on operational effectiveness, supported the polymorphic principle approach, and provided approval of the current text\n- [Sébastien Hinderer](https://github.com/shindere) contributed editorial feedback with language corrections for the policy text\n- [Richard Eisenberg](https://github.com/goldfirere) expressed approval of the written proposal and supported moving forward with the current approach", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 27, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-06-30 to 2025-07-06", "start_commit": null, "end_commit": null, "brief_summary": "Transparent ascription RFC received implementation approval from core maintainers", "new_features_summary": null, "new_features": null, "activity_summary": "Key RFC discussions with maintainer endorsements for transparent ascription implementation", "activity": "- **Transparent ascription RFC** ([#54](https://github.com/ocaml/RFCs/issues/54)) by [Clément Blaudeau](https://github.com/clementblaudeau) received strong endorsement from [Xavier Leroy](https://github.com/xavierleroy) and [Gabriel Scherer](https://github.com/gasche) to proceed with implementation as part of OCaml Foundation-funded module system work\n- [Leo White](https://github.com/lpw25) provided detailed technical feedback on **linking behavior** and syntax design decisions for static aliases in transparent ascription RFC ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Primitive aliases RFC** ([#44](https://github.com/ocaml/RFCs/issues/44)) by [Nailen Matschke](https://github.com/nmatschke) continues to receive positive feedback for avoiding error-prone duplication of external declarations\n- [Clément Blaudeau](https://github.com/clementblaudeau) integrated maintainer feedback into the transparent ascription proposal, updating **aliasing mechanism design** and **backward compatibility** considerations ([#54](https://github.com/ocaml/RFCs/issues/54))", "discussions_summary": "Technical discussions on module system evolution and external primitive handling", "notable_discussions": "- **Module system implementation strategy** discussion between [Xavier Leroy](https://github.com/xavierleroy), [Gabriel Scherer](https://github.com/gasche), and [Leo White](https://github.com/lpw25) regarding transparent ascription's relationship to lazy module strengthening and performance implications ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Backward compatibility planning** for transparent ascription RFC with focus on Dune integration and manual mapping file transitions, highlighting impact on large projects like the standard library and Coccinelle ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Modular implicits integration** discussion by [Samuel Vivien](https://github.com/samsa1) exploring how transparent ascription could reduce false ambiguities and improve ergonomics for common signature patterns ([#54](https://github.com/ocaml/RFCs/issues/54))", "trends_summary": "Focus on module system enhancements with OCaml Foundation support", "emerging_trends": "- **OCaml Foundation-funded development** driving significant module system improvements, with transparent ascription RFC moving toward implementation phase ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Performance-conscious language evolution** with discussions balancing new features like transparent ascription against existing optimizations such as lazy module strengthening ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Developer ergonomics improvements** emerging as key theme, with both transparent ascription and primitive aliases targeting reduction of boilerplate and error-prone patterns ([#54](https://github.com/ocaml/RFCs/issues/54), [#44](https://github.com/ocaml/RFCs/issues/44))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Core maintainers provided implementation guidance while RFC authors refined proposals", "contributors": "- [Clément Blaudeau](https://github.com/clementblaudeau) updated transparent ascription RFC with maintainer feedback, refined aliasing mechanism design, and addressed backward compatibility concerns ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Xavier Leroy](https://github.com/xavierleroy) provided RFC approval and encouraged implementation phase for transparent ascription proposal ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Gabriel Scherer](https://github.com/gasche) endorsed moving to prototype implementation and contributed detailed feedback on backward compatibility strategy ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Leo White](https://github.com/lpw25) provided technical guidance on linking behavior, syntax design, and compiler flag transitions for transparent ascription ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Nailen Matschke](https://github.com/nmatschke) maintained primitive aliases RFC and noted implementation progress with PR against main OCaml repository ([#44](https://github.com/ocaml/RFCs/issues/44))\n- [@samsa1](https://github.com/samsa1) contributed perspective on modular implicits integration and practical use cases for transparent ascription ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [@OlivierNicole](https://github.com/OlivierNicole) asked technical questions about performance implications and relationship to lazy module strengthening ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [@diremy](https://github.com/diremy) provided feedback on syntax design decisions and user experience considerations for alias inference ([#54](https://github.com/ocaml/RFCs/issues/54))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 26, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-06-23 to 2025-06-29", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 25, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-06-16 to 2025-06-22", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 24, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-06-09 to 2025-06-15", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 23, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-06-02 to 2025-06-08", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 22, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-05-26 to 2025-06-01", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 21, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-05-19 to 2025-05-25", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 20, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-05-12 to 2025-05-18", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 19, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-05-05 to 2025-05-11", "start_commit": null, "end_commit": null, "brief_summary": "Ongoing discussions about transparent ascription in OCaml module system with key maintainer feedback encouraging prototype implementation", "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": "Technical discussions on transparent ascription RFC with feedback from OCaml maintainers and encouragement to proceed with implementation", "notable_discussions": "- **Transparent ascription RFC** discussions in [#54](https://github.com/ocaml/RFCs/issues/54) with detailed feedback from [Clément Blaudeau](https://github.com/clementblaudeau), [Samuel Vivien](https://github.com/samsa1), [Olivier Nicole](https://github.com/OlivierNicole), [Xavier Leroy](https://github.com/xavierleroy), [Leo White](https://github.com/lpw25), [Gabriel Scherer](https://github.com/gasche), [Didier Remy](https://github.com/diremy), and [Jacques Garrigue](https://github.com/garrigue)\n- [Samuel Vivien](https://github.com/samsa1) highlighted **modular implicits benefits** and improved syntax for modules with similar signatures, noting reduced false ambiguities and cleaner module declarations\n- [Olivier Nicole](https://github.com/OlivierNicole) discussed **performance implications** compared to lazy module strengthening and questioned the continued need for `T with X` syntax after transparent ascription adoption\n- [Xavier Leroy](https://github.com/xavierleroy) provided **implementation encouragement** after discussions with [Clément Blaudeau](https://github.com/clementblaudeau), noting the proposal is well thought-out and ready for prototype development\n- [Leo White](https://github.com/lpw25) gave final **technical approval** with minor adjustments suggested for post-implementation refinement\n- [Gabriel Scherer](https://github.com/gasche) encouraged moving to **prototype implementation** as part of OCaml Foundation-funded module system work\n- [Didier Remy](https://github.com/diremy) raised concerns about **syntax ambiguity** and inference behavior, suggesting explicit user choice over automatic static/dynamic alias inference\n- [Clément Blaudeau](https://github.com/clementblaudeau) integrated feedback and discussed **linking behavior** for static aliases and transition strategy for `-no-alias-deps` flag\n- [Gabriel Scherer](https://github.com/gasche) addressed **backward compatibility** concerns, noting Dune can adapt automatically while manual alias projects need careful transition planning", "trends_summary": "Movement toward prototype implementation of transparent ascription with strong community support and technical consensus among maintainers", "emerging_trends": "- **RFC implementation readiness** with [#54](https://github.com/ocaml/RFCs/issues/54) moving from design discussion to prototype development phase, supported by OCaml Foundation funding\n- **Module system modernization** focus with transparent ascription addressing aliasing bugs and providing cleaner alternatives to static aliases\n- **Performance considerations** in language design with discussions comparing transparent ascription to lazy module strengthening approaches\n- **Community consensus building** process demonstrating thorough technical review before implementation commitment", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Multiple OCaml maintainers and researchers provided technical feedback on module system RFC with consensus to proceed to implementation", "contributors": "- [Clément Blaudeau](https://github.com/clementblaudeau) authored the transparent ascription RFC, integrated community feedback, and discussed implementation details including linking behavior and transition strategies for existing alias mechanisms ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Samuel Vivien](https://github.com/samsa1) provided feedback highlighting benefits for modular implicits and improved syntax for modules with similar signatures ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Olivier Nicole](https://github.com/OlivierNicole) raised questions about performance implications compared to lazy module strengthening and the future need for `T with X` syntax ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Xavier Leroy](https://github.com/xavierleroy) provided encouragement for prototype implementation after technical discussions, confirming the proposal is well-designed ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Leo White](https://github.com/lpw25) gave technical approval with suggestions for linking behavior and transition strategy for the `-no-alias-deps` flag ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Gabriel Scherer](https://github.com/gasche) encouraged moving to prototype implementation as part of OCaml Foundation-funded work and addressed backward compatibility concerns ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Didier Remy](https://github.com/diremy) provided feedback on syntax ambiguity and suggested explicit user choice for static/dynamic alias behavior ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Jacques Garrigue](https://github.com/garrigue) participated in technical discussions about the RFC proposal ([#54](https://github.com/ocaml/RFCs/issues/54))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 18, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-04-28 to 2025-05-04", "start_commit": null, "end_commit": null, "brief_summary": null, "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 17, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-04-21 to 2025-04-27", "start_commit": null, "end_commit": null, "brief_summary": "Continued technical discussion on transparent ascription RFC with implementation planning and backward compatibility considerations", "new_features_summary": null, "new_features": null, "activity_summary": "Ongoing technical review and implementation planning for transparent ascription RFC with module system experts", "activity": "- **Transparent ascription RFC** implementation planning discussion by [Clément Blaudeau](https://github.com/clementblaudeau) with support from [Xavier Leroy](https://github.com/xavierleroy) and [Gabriel Scherer](https://github.com/gasche) for moving to prototype development ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Module system aliasing** design refinements including restriction of static aliasing to persistent modules only, addressing bugs like 13997, 13979, and 13897 ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Backward compatibility** considerations for manual module alias mapping files used by projects like the standard library and Coccinelle, with transition strategy discussion by [Gabriel Scherer](https://github.com/gasche) ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Linking behavior** technical discussion between [Leo White](https://github.com/lpw25) and [Clément Blaudeau](https://github.com/clementblaudeau) regarding explicit static aliases and -no-alias-deps flag interaction ([#54](https://github.com/ocaml/RFCs/issues/54))", "discussions_summary": "Technical discussions on transparent ascription syntax ambiguity, performance implications, and modular implicits integration", "notable_discussions": "- **Modular implicits integration** discussion by [Samuel Vivien](https://github.com/samsa1) on how transparent ascription could reduce false ambiguities and improve syntax for modules with similar signatures ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Performance implications** inquiry by [Olivier Nicole](https://github.com/OlivierNicole) comparing transparent ascription with lazy module strengthening used at Jane Street ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Syntax ambiguity** concerns raised by [Didier Remy](https://github.com/diremy) about implicit static/dynamic alias inference, advocating for explicit user choice in the final syntax ([#54](https://github.com/ocaml/RFCs/issues/54))", "trends_summary": "Movement toward practical implementation phase for transparent ascription with consensus building among module system experts", "emerging_trends": "- **Implementation readiness** consensus emerging among core OCaml developers [Xavier Leroy](https://github.com/xavierleroy), [Gabriel Scherer](https://github.com/gasche), and [Leo White](https://github.com/lpw25) to move transparent ascription to prototype implementation phase ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **OCaml Foundation collaboration** on module system improvements through funded development work on transparent ascription implementation ([#54](https://github.com/ocaml/RFCs/issues/54))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Active technical review involving core OCaml team members and module system researchers with implementation planning focus", "contributors": "- [Clément Blaudeau](https://github.com/clementblaudeau) authored the transparent ascription RFC, provided technical updates on aliasing restrictions, and engaged in implementation planning discussions ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Xavier Leroy](https://github.com/xavierleroy) provided endorsement for moving to prototype implementation phase after technical discussion with the RFC author ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Gabriel Scherer](https://github.com/gasche) encouraged implementation work as part of OCaml Foundation-funded development and contributed analysis on backward compatibility challenges ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Leo White](https://github.com/lpw25) provided detailed technical feedback on linking behavior, alias dependencies, and transition strategy for the -no-alias-deps flag ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Samuel Vivien](https://github.com/samsa1) contributed perspective on modular implicits integration and practical usage scenarios for transparent ascription syntax ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Olivier Nicole](https://github.com/OlivierNicole) raised questions about performance implications and relationship to lazy module strengthening optimization ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Didier Remy](https://github.com/diremy) provided feedback on syntax design and advocated for explicit user control over static versus dynamic alias behavior ([#54](https://github.com/ocaml/RFCs/issues/54))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 16, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-04-14 to 2025-04-20", "start_commit": null, "end_commit": null, "brief_summary": "Continued development discussion on transparent ascription RFC with technical refinements and implementation planning", "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": "Transparent ascription RFC received detailed feedback from core team members with consensus to proceed to implementation", "notable_discussions": "- **Transparent ascription** RFC ([#54](https://github.com/ocaml/RFCs/issues/54)) by [Clément Blaudeau](https://github.com/clementblaudeau) received endorsement from [Xavier Leroy](https://github.com/xavierleroy) and [Gabriel Scherer](https://github.com/gasche) to proceed to prototype implementation as part of OCaml Foundation-funded work\n- [Leo White](https://github.com/lpw25) provided detailed **technical feedback** on linking behavior for explicit static aliases and transition strategy for the `-no-alias-deps` flag ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Samuel Vivien](https://github.com/samsa1) highlighted **modular implicits** benefits, noting transparent ascription would reduce false ambiguities and improve syntax ergonomics ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Olivier Nicole](https://github.com/OlivierNicole) raised questions about **performance implications** and relationship to lazy module strengthening used at Jane Street ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Didier Remy](https://github.com/diremy) contributed perspective on **syntax disambiguation** between static and dynamic aliases, advocating for explicit user choice rather than inference ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Gabriel Scherer](https://github.com/gasche) addressed **backward compatibility** concerns, noting Dune's ability to adapt but emphasizing need for careful transition planning for manual module alias users ([#54](https://github.com/ocaml/RFCs/issues/54))", "trends_summary": "Core team consensus emerging on module system improvements with focus on implementation feasibility and backward compatibility", "emerging_trends": "- **Module system enhancements** gaining traction with transparent ascription RFC receiving core team endorsement for implementation ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **OCaml Foundation funding** enabling dedicated work on complex module system features by [Clément Blaudeau](https://github.com/clementblaudeau) ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Industry-academia collaboration** evident with Jane Street's [Leo White](https://github.com/lpw25) providing detailed technical input on practical implementation concerns ([#54](https://github.com/ocaml/RFCs/issues/54))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Six community members engaged in detailed RFC discussion including core team members and PhD researchers", "contributors": "- [Clément Blaudeau](https://github.com/clementblaudeau) authored and refined the transparent ascription RFC with technical updates based on aliasing bug documentation ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Xavier Leroy](https://github.com/xavierleroy) provided endorsement after technical discussions, encouraging progression to prototype implementation ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Gabriel Scherer](https://github.com/gasche) advocated for implementation work as part of OCaml Foundation funding and addressed backward compatibility concerns ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Leo White](https://github.com/lpw25) contributed detailed technical feedback on linking behavior and transition strategies for compiler flags ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Samuel Vivien](https://github.com/samsa1) provided use case feedback from modular implicits perspective and syntax ergonomics considerations ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Olivier Nicole](https://github.com/OlivierNicole) raised performance questions and connections to Jane Street's lazy module strengthening implementation ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Didier Remy](https://github.com/diremy) contributed design feedback on syntax disambiguation and explicit vs. implicit user choices ([#54](https://github.com/ocaml/RFCs/issues/54))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 15, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-04-07 to 2025-04-13", "start_commit": null, "end_commit": null, "brief_summary": "New RFC for transparent ascription in the OCaml module system proposed with extensive technical discussion.", "new_features_summary": null, "new_features": null, "activity_summary": "Transparent ascription RFC submission with comprehensive technical review and design discussions from core developers.", "activity": "- **Transparent ascription RFC** introduced by [Clément Blaudeau](https://github.com/clementblaudeau) proposing signature language enhancements and aliasing mechanism redesign ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Module system improvements** focused on restricting static aliasing to persistent modules only and addressing aliasing bugs including issues 13997, 13979, and 13897 ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Technical validation** by [Xavier Leroy](https://github.com/xavierleroy) confirming the proposal is well thought-out and ready for prototype implementation ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Implementation planning** with [Gabriel Scherer](https://github.com/gasche) encouraging prototype development as part of OCaml Foundation-funded module system work ([#54](https://github.com/ocaml/RFCs/issues/54))", "discussions_summary": "Extensive technical discussions on module aliasing behavior, linking semantics, and compatibility with existing toolchain.", "notable_discussions": "- **Module aliasing semantics** debate between static and dynamic aliases with [Didier Remy](https://github.com/diremy) advocating for explicit user choice rather than inference ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Performance implications** discussion by [Olivier Nicole](https://github.com/OlivierNicole) comparing transparent ascription with lazy module strengthening used at Jane Street ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Modular implicits integration** highlighted by [Samuel Vivien](https://github.com/samsa1) noting benefits for reducing false ambiguities in modular implicit resolution ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Backward compatibility strategy** analysis by [Gabriel Scherer](https://github.com/gasche) emphasizing need for careful transition due to manual mapping files in projects like the standard library and Coccinelle ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Linking behavior clarification** by [Leo White](https://github.com/lpw25) proposing that explicit static aliases should never force linking regardless of compiler flags ([#54](https://github.com/ocaml/RFCs/issues/54))", "trends_summary": "Focus on module system refinements with emphasis on implementation readiness and compatibility planning.", "emerging_trends": "- **Implementation-ready proposals** with RFC moving toward prototype development phase following thorough technical review ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Cross-cutting language feature integration** considering how transparent ascription affects modular implicits and other advanced type system features ([#54](https://github.com/ocaml/RFCs/issues/54))\n- **Ecosystem compatibility focus** with detailed consideration of migration paths for existing codebases using manual module aliases ([#54](https://github.com/ocaml/RFCs/issues/54))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Multiple core OCaml developers engaged in detailed technical review of transparent ascription proposal.", "contributors": "- [Clément Blaudeau](https://github.com/clementblaudeau) authored the transparent ascription RFC and provided detailed technical updates addressing aliasing bugs and design refinements ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Samuel Vivien](https://github.com/samsa1) contributed modular implicits perspective highlighting reduced ambiguity benefits and improved module signature ergonomics ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Olivier Nicole](https://github.com/OlivierNicole) provided comparative analysis with lazy module strengthening and raised performance considerations ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Xavier Leroy](https://github.com/xavierleroy) conducted technical validation confirming proposal readiness for implementation ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Leo White](https://github.com/lpw25) offered detailed feedback on linking behavior and transition strategy for compiler flags ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Gabriel Scherer](https://github.com/gasche) facilitated implementation planning and highlighted backward compatibility requirements for ecosystem projects ([#54](https://github.com/ocaml/RFCs/issues/54))\n- [Didier Remy](https://github.com/diremy) provided design feedback advocating for explicit user control over static versus dynamic alias inference ([#54](https://github.com/ocaml/RFCs/issues/54))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 14, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-03-31 to 2025-04-06", "start_commit": null, "end_commit": null, "brief_summary": "Continued discussion on implicit source positions RFC with debate over design alternatives", "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": "RFC #52 received detailed technical discussion about representation choices and performance tradeoffs", "notable_discussions": "- RFC [#52](https://github.com/ocaml/RFCs/issues/52) on **implicit source positions** continued with extensive design discussion between [Olivier Nicole](https://github.com/OlivierNicole), [Gabriel Scherer](https://github.com/gasche), [Richard Eisenberg](https://github.com/goldfirere), and [Daniel Bünzli](https://github.com/dbuenzli)\n- Discussion focused on **representation alternatives** including `Lexing.position` vs abstract types and performance considerations for Jane Street's existing usage\n- [Gabriel Scherer](https://github.com/gasche) proposed GADT-based design with multiple representation types to balance flexibility and performance\n- [Daniel Bünzli](https://github.com/dbuenzli) advocated for measuring performance impact and avoiding premature optimization in design choices\n- [Richard Eisenberg](https://github.com/goldfirere) provided insights on Jane Street's usage patterns with 5,827 `[%call_pos]` occurrences in their codebase", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Four core OCaml community members actively participated in RFC design discussions", "contributors": "- [Olivier Nicole](https://github.com/OlivierNicole) authored the **implicit source positions** RFC and facilitated discussion between stakeholders ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Gabriel Scherer](https://github.com/gasche) proposed alternative **GADT-based design** approaches and analyzed representation tradeoffs ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Richard Eisenberg](https://github.com/goldfirere) provided detailed feedback on **Jane Street usage patterns** and performance requirements ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Daniel Bünzli](https://github.com/dbuenzli) contributed analysis of **representation efficiency** and measurement methodologies ([#52](https://github.com/ocaml/RFCs/issues/52))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 13, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-03-24 to 2025-03-30", "start_commit": null, "end_commit": null, "brief_summary": "New RFC submitted for Relocatable OCaml addressing compiler distribution portability challenges", "new_features_summary": null, "new_features": null, "activity_summary": "RFC proposal submission for relocatable OCaml compiler infrastructure with community feedback", "activity": "- **Relocatable OCaml** RFC submitted by [David Allsopp](https://github.com/dra27) proposing to make OCaml compiler distributions portable and moveable between directories ([#53](https://github.com/ocaml/RFCs/issues/53))\n- **Positive community response** from [Sébastien Hinderer](https://github.com/shindere) praising the clarity and digestibility of the RFC documentation despite the complex technical implementation details", "discussions_summary": "Initial technical feedback on relocatable OCaml proposal emphasizing documentation quality", "notable_discussions": "- [Sébastien Hinderer](https://github.com/shindere) provided positive feedback on the **Relocatable OCaml** RFC, specifically commending the explanation's readability and digestibility compared to the complex underlying technical work ([#53](https://github.com/ocaml/RFCs/issues/53))", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "David Allsopp authored new RFC proposal with Sébastien Hinderer providing review feedback", "contributors": "- [David Allsopp](https://github.com/dra27) authored the **Relocatable OCaml** RFC proposal addressing compiler portability challenges, building on proof-of-concept work presented at OCaml Workshop 2022 ([#53](https://github.com/ocaml/RFCs/issues/53))\n- [Sébastien Hinderer](https://github.com/shindere) provided constructive review feedback praising the documentation quality and accessibility of the technical proposal ([#53](https://github.com/ocaml/RFCs/issues/53))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 12, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-03-17 to 2025-03-23", "start_commit": null, "end_commit": null, "brief_summary": "Continued technical discussion on implicit source positions RFC with design debates on representation types", "new_features_summary": null, "new_features": null, "activity_summary": "Technical discussion on implicit source positions RFC focusing on position vs location representation trade-offs", "activity": "- Detailed **design debate** on implicit source positions RFC with [Olivier Nicole](https://github.com/OlivierNicole) from Tarides leading discussions on behalf of Jane Street ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Gabriel Scherer](https://github.com/gasche) proposed **GADT-based approach** for multiple position representation types, allowing both `Lexing.position` and richer location types ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Daniel Bünzli](https://github.com/dbuenzli) advocated for **compact text location** representations over current `Lexing.position` approach, questioning performance trade-offs ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Richard Eisenberg](https://github.com/goldfirere) from Jane Street discussed **technical debt implications** of changing from current implementation and explored feasibility of representation changes ([#52](https://github.com/ocaml/RFCs/issues/52))\n- Technical analysis revealed Jane Street has **5,827 `[%call_pos]` usages** and approximately 1,000 `pos_bol` field references in their codebase ([#52](https://github.com/ocaml/RFCs/issues/52))", "discussions_summary": "Extensive technical discussion on position representation types and performance trade-offs for implicit source positions", "notable_discussions": "- **Position vs location representation** debate examining whether to use single positions (`Lexing.position`) or location spans with start/end positions ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **Performance and space optimization** discussion analyzing executable size impact and runtime costs of different representation choices ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **Jane Street migration path** technical analysis examining feasibility of changing from current `Lexing.position` implementation to more compact representations ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **GADT-based design proposal** by [Gabriel Scherer](https://github.com/gasche) to support multiple position types through compile-time type selection ([#52](https://github.com/ocaml/RFCs/issues/52))", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Active technical discussion between OCaml maintainers and Jane Street on RFC design details", "contributors": "- [Olivier Nicole](https://github.com/OlivierNicole) from Tarides led RFC discussions, presenting Jane Street's requirements and exploring alternative approaches ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Gabriel Scherer](https://github.com/gasche) contributed detailed technical proposals including GADT-based design alternatives and abstract type approaches ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Daniel Bünzli](https://github.com/dbuenzli) provided critical analysis of performance implications and advocated for compact position representations ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Richard Eisenberg](https://github.com/goldfirere) from Jane Street analyzed migration feasibility and technical debt considerations for representation changes ([#52](https://github.com/ocaml/RFCs/issues/52))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 11, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-03-10 to 2025-03-16", "start_commit": null, "end_commit": null, "brief_summary": "Design discussions on implicit source positions RFC with focus on performance implications and API design alternatives", "new_features_summary": null, "new_features": null, "activity_summary": null, "activity": null, "discussions_summary": "Technical design debate on implicit source positions RFC covering performance trade-offs and representation alternatives", "notable_discussions": "- **Implicit source positions RFC** design discussions by [Olivier Nicole](https://github.com/OlivierNicole) with detailed technical debate on performance implications and API representation choices ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **Performance optimization** debate between [Daniel Bünzli](https://github.com/dbuenzli) and [Richard Eisenberg](https://github.com/goldfirere) regarding memory footprint and runtime costs of different location representation approaches ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **API design alternatives** proposed by [Gabriel Scherer](https://github.com/gasche) including GADT-based approach to support multiple position types with future extensibility ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **Jane Street implementation** experience shared by [Richard Eisenberg](https://github.com/goldfirere) covering practical usage patterns across 65+ million lines of OCaml code and technical debt considerations ([#52](https://github.com/ocaml/RFCs/issues/52))", "trends_summary": "Focus on balancing practical industry needs with language design principles for position tracking features", "emerging_trends": "- **Industry-academia collaboration** between Jane Street and OCaml core developers to standardize production-tested language features, with [Richard Eisenberg](https://github.com/goldfirere) representing industry experience ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **Performance-conscious language design** emphasizing measurement and optimization of memory and runtime characteristics before feature adoption, driven by [Daniel Bünzli](https://github.com/dbuenzli)'s advocacy for empirical evaluation ([#52](https://github.com/ocaml/RFCs/issues/52))\n- **Extensible API design patterns** using GADTs and abstract types to enable future enhancements without breaking existing code, as proposed by [Gabriel Scherer](https://github.com/gasche) ([#52](https://github.com/ocaml/RFCs/issues/52))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Technical discussions led by Tarides and Jane Street developers with OCaml core team input on language feature design", "contributors": "- [Olivier Nicole](https://github.com/OlivierNicole) from Tarides authored the RFC for implicit source positions based on Jane Street's production implementation ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Richard Eisenberg](https://github.com/goldfirere) from Jane Street provided detailed technical feedback on performance characteristics and practical usage patterns from large-scale deployment ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Gabriel Scherer](https://github.com/gasche) contributed API design alternatives including GADT-based approach for extensible position types ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Daniel Bünzli](https://github.com/dbuenzli) advocated for empirical performance evaluation and compact representation design considerations ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Nicolás Ojeda Bär](https://github.com/nojb) from LexiFi participated in technical discussions about practical applications and implementation concerns ([#52](https://github.com/ocaml/RFCs/issues/52))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 10, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-03-03 to 2025-03-09", "start_commit": null, "end_commit": null, "brief_summary": "Ongoing discussion on `include functor` RFC proposal with technical clarifications about structure and signature expansion", "new_features_summary": null, "new_features": null, "activity_summary": "Continued technical discussions on include functor proposal with detailed analysis of syntactic expansion", "activity": "- Ongoing **technical discussions** on the `include functor` RFC proposal by [Chris Casinghino](https://github.com/ccasin) with detailed **syntax clarification** discussions involving [François Pottier](https://github.com/fpottier), [Gabriel Scherer](https://github.com/gasche), [Leo White](https://github.com/lpw25), [Jeremy Yallop](https://github.com/yallop), and [Clément Blaudeau](https://github.com/clementblaudeau) ([#43](https://github.com/ocaml/RFCs/issues/43))\n- **RFC update** by [Chris Casinghino](https://github.com/ccasin) adding more detailed explanations about signature expansion following feedback from [François Pottier](https://github.com/fpottier) ([#43](https://github.com/ocaml/RFCs/issues/43))\n- **Design analysis** of include functor behavior in structures versus signatures, with discussions about syntactic sugar, mixin composition, and comparison with signature-returning functors ([#43](https://github.com/ocaml/RFCs/issues/43))", "discussions_summary": "Deep technical analysis of include functor semantics with focus on structure expansion and signature behavior", "notable_discussions": "- **Include functor expansion semantics**: [François Pottier](https://github.com/fpottier) requested explicit explanation of how `include functor` in structures expands to existing language constructs, questioning whether it's \"just sugar\" ([#43](https://github.com/ocaml/RFCs/issues/43))\n- **Signature versus structure behavior**: [Gabriel Scherer](https://github.com/gasche) expressed concerns about the naturality of `include functor` in signatures compared to structures, arguing that signature-returning functors might be more expressive ([#43](https://github.com/ocaml/RFCs/issues/43))\n- **Mixin composition alternatives**: [Clément Blaudeau](https://github.com/clementblaudeau) proposed viewing `include functor` as syntactic sugar for mixin composition with anonymous structures, suggesting a more general mixin construct ([#43](https://github.com/ocaml/RFCs/issues/43))\n- **Binding semantics debate**: [Jeremy Yallop](https://github.com/yallop) and [Leo White](https://github.com/lpw25) discussed the distinction between implicit binding in `include functor` versus traditional identifiers, focusing on scoping and nesting behavior ([#43](https://github.com/ocaml/RFCs/issues/43))", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Active participation from OCaml language experts in RFC design discussions", "contributors": "- [Chris Casinghino](https://github.com/ccasin) authored the `include functor` RFC proposal and provided detailed technical clarifications in response to community feedback ([#43](https://github.com/ocaml/RFCs/issues/43))\n- [François Pottier](https://github.com/fpottier) provided critical feedback requesting explicit explanation of structure expansion semantics and questioning the sugar-like nature of the proposal ([#43](https://github.com/ocaml/RFCs/issues/43))\n- [Gabriel Scherer](https://github.com/gasche) contributed detailed analysis comparing `include functor` with signature-returning functors and raised questions about the naturality of the construct in signatures ([#43](https://github.com/ocaml/RFCs/issues/43))\n- [Leo White](https://github.com/lpw25) participated in technical discussions about binding semantics and mixin behavior, providing insights from practical implementation perspective ([#43](https://github.com/ocaml/RFCs/issues/43))\n- [Jeremy Yallop](https://github.com/yallop) engaged in detailed semantic analysis of implicit binding behavior and scoping rules for the proposed feature ([#43](https://github.com/ocaml/RFCs/issues/43))\n- [Clément Blaudeau](https://github.com/clementblaudeau) proposed alternative design approaches using mixin composition and provided detailed expansion examples ([#43](https://github.com/ocaml/RFCs/issues/43))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 9, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-02-24 to 2025-03-02", "start_commit": null, "end_commit": null, "brief_summary": "Ongoing technical discussion on implicit source positions RFC with detailed design debates between OCaml core contributors", "new_features_summary": null, "new_features": null, "activity_summary": "Intensive design discussion on implicit source positions feature covering performance, API design, and compatibility considerations", "activity": "- **Implicit source positions** feature design discussion continued in [#52](https://github.com/ocaml/RFCs/pull/52) with detailed technical analysis by [Gabriel Scherer](https://github.com/gasche), [Richard Eisenberg](https://github.com/goldfirere), and [Daniel Bünzli](https://github.com/dbuenzli)\n- **Performance optimization** debate focused on `Lexing.position` vs. compact representations with [Richard Eisenberg](https://github.com/goldfirere) providing Jane Street usage data showing 5,827 `[%call_pos]` instances across their codebase ([#52](https://github.com/ocaml/RFCs/pull/52))\n- **API design alternatives** explored including GADT-based approach proposed by [Gabriel Scherer](https://github.com/gasche) to support multiple location types (`Pos` and `Loc` variants) ([#52](https://github.com/ocaml/RFCs/pull/52))\n- **Technical debt considerations** discussed regarding Jane Street's existing implementation and migration path to upstream OCaml ([#52](https://github.com/ocaml/RFCs/pull/52))", "discussions_summary": "Active debate on design tradeoffs between performance, generality, and compatibility for implicit source positions feature", "notable_discussions": "- **Memory footprint analysis** requested by [Daniel Bünzli](https://github.com/dbuenzli) to quantify real-world costs of different position representations in Jane Street's executables ([#52](https://github.com/ocaml/RFCs/pull/52))\n- **Representation choice** debate between direct positions (`[%call_pos]`) and location spans (`[%call_loc]`) with technical analysis of byte offset vs. line/column tradeoffs ([#52](https://github.com/ocaml/RFCs/pull/52))\n- **Convergence effort** discussion led by [Richard Eisenberg](https://github.com/goldfirere) seeking consensus on whether to support both position types or focus on a single abstract interface ([#52](https://github.com/ocaml/RFCs/pull/52))", "trends_summary": "Focus on balancing performance requirements with API generality in language feature design", "emerging_trends": "- **Performance-driven design** approach with emphasis on quantifying real-world costs before making API decisions ([#52](https://github.com/ocaml/RFCs/pull/52))\n- **Industrial usage influence** where Jane Street's large-scale deployment (65+ million lines of OCaml) significantly impacts upstream design decisions ([#52](https://github.com/ocaml/RFCs/pull/52))\n- **Abstract interface preference** emerging as compromise between different concrete representations for future flexibility ([#52](https://github.com/ocaml/RFCs/pull/52))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Multi-contributor technical discussion involving OCaml core team members and Jane Street representatives", "contributors": "- [Olivier Nicole](https://github.com/OlivierNicole) authored the implicit source positions RFC and participated in design discussions ([#52](https://github.com/ocaml/RFCs/pull/52))\n- [Gabriel Scherer](https://github.com/gasche) proposed GADT-based design alternatives and provided detailed technical analysis of representation options ([#52](https://github.com/ocaml/RFCs/pull/52))\n- [Richard Eisenberg](https://github.com/goldfirere) represented Jane Street's perspective, shared usage statistics, and facilitated consensus-building discussions ([#52](https://github.com/ocaml/RFCs/pull/52))\n- [Daniel Bünzli](https://github.com/dbuenzli) provided critical analysis of performance implications and requested quantitative measurements of memory costs ([#52](https://github.com/ocaml/RFCs/pull/52))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 8, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-02-17 to 2025-02-23", "start_commit": null, "end_commit": null, "brief_summary": "New RFC opened for implicit source positions feature and continued discussion on include functor proposal", "new_features_summary": null, "new_features": null, "activity_summary": "RFC discussion activity focused on language feature proposals", "activity": "- [Olivier Nicole](https://github.com/OlivierNicole) opened **RFC for implicit source positions** feature ([#52](https://github.com/ocaml/RFCs/issues/52)), proposing a new arrow type syntax `loc:[%call_pos]` to automatically capture call site positions for improved error reporting and debugging in monadic binds and testing frameworks\n- Continued **design discussions** on the `include functor` proposal ([#43](https://github.com/ocaml/RFCs/issues/43)) with [Gabriel Scherer](https://github.com/gasche), [Daniel Bünzli](https://github.com/dbuenzli), and [Richard Eisenberg](https://github.com/goldfirere) debating implementation approaches and signature representations", "discussions_summary": "Technical design discussions on implicit source positions and include functor proposals", "notable_discussions": "- **Implicit source positions RFC** design discussion ([#52](https://github.com/ocaml/RFCs/issues/52)) focusing on type representations and performance considerations, with [Daniel Bünzli](https://github.com/dbuenzli) questioning storage costs and [Richard Eisenberg](https://github.com/goldfirere) advocating for flexible type support based on Jane Street's implementation experience\n- **Include functor syntax debate** ([#43](https://github.com/ocaml/RFCs/issues/43)) examining the distinction between functor applications in structures versus signatures, with [Gabriel Scherer](https://github.com/gasche) proposing GADT-based alternatives for parametrized signatures", "trends_summary": "Growing focus on language features that improve debugging and error reporting capabilities", "emerging_trends": "- **Enhanced debugging support** through language features, with the implicit source positions RFC targeting better error reporting in monadic code and testing frameworks\n- **Continued evolution** of module system capabilities through the include functor proposal, reflecting ongoing needs for more expressive module composition patterns", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Single new RFC submission and continued discussion participation from core language committee members", "contributors": "- [Olivier Nicole](https://github.com/OlivierNicole) authored the **implicit source positions RFC** ([#52](https://github.com/ocaml/RFCs/issues/52)) detailing automatic call site position capture for improved debugging\n- [Daniel Bünzli](https://github.com/dbuenzli) provided **technical review feedback** on performance implications and type representation choices for the implicit source positions feature ([#52](https://github.com/ocaml/RFCs/issues/52))\n- [Gabriel Scherer](https://github.com/gasche) contributed **design analysis** comparing functor types versus signature-returning functors in the include functor discussion ([#43](https://github.com/ocaml/RFCs/issues/43))\n- [Richard Eisenberg](https://github.com/goldfirere) shared **implementation insights** from Jane Street's usage of implicit source positions and participated in technical design discussions ([#52](https://github.com/ocaml/RFCs/issues/52))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 7, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-02-10 to 2025-02-16", "start_commit": "308ebe961f885d4f36c9910cb34728d9e990868b", "end_commit": "308ebe961f885d4f36c9910cb34728d9e990868b", "brief_summary": "Formation of the OCaml Language Committee with comprehensive governance documentation merged", "new_features_summary": "New OCaml Language Committee documentation added with complete governance framework and decision-making processes", "new_features": "- **OCaml Language Committee documentation** added with comprehensive governance framework, member list, and decision-making processes for language and stdlib proposals ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Updated RFC README** with guidance on requesting committee review when consensus is elusive, directing contributors to tag committee chair [Florian Angeletti](https://github.com/Octachron) ([#51](https://github.com/ocaml/RFCs/issues/51))", "activity_summary": "Community discussion and establishment of formal language governance structure with active participation from core developers", "activity": "- **Language governance formalization** with establishment of 9-member committee including representatives from OCaml developers, educators, industrial users, and researchers ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Committee scope definition** covering language syntax/semantics, toplevel commands, and stdlib changes, with clear boundaries excluding internal compiler implementation details ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Decision-making process** outlined with shepherd assignment, community discussion, and voting mechanisms for reaching consensus on language proposals ([#51](https://github.com/ocaml/RFCs/issues/51))", "discussions_summary": "Rich community discussion on committee scope, governance structure, and relationship to existing development processes", "notable_discussions": "- **Committee scope clarification** regarding compiler flags and user interface boundaries, with [Josh Berdine](https://github.com/jberdine) raising concerns about command-line interface inclusion ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Community support confirmation** with [Olivier Nicole](https://github.com/OlivierNicole) and [David Allsopp](https://github.com/dra27) expressing support for addressing stalled proposals and reaching consensus ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Implementation timeline discussion** with committee officially launching after document approval and announcement plans across multiple community channels ([#51](https://github.com/ocaml/RFCs/issues/51))", "trends_summary": "Shift toward more formal governance structures to address consensus challenges in language evolution", "emerging_trends": "- **Formal governance adoption** following GHC Committee model to address consensus challenges in OCaml language and stdlib evolution ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Community-driven decision making** with emphasis on reaching consensus through structured discussion and voting when needed ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Cross-repository coordination** with plans to link committee documentation across ocaml/ocaml and RFC repositories for better contributor awareness ([#51](https://github.com/ocaml/RFCs/issues/51))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Richard Eisenberg led committee formation with support from Florian Angeletti and active community discussion", "contributors": "- [Richard Eisenberg](https://github.com/goldfirere) authored and drove the **OCaml Language Committee documentation** initiative, coordinated with core developers, and facilitated committee formation ([#51](https://github.com/ocaml/RFCs/issues/51))\n- [Florian Angeletti](https://github.com/Octachron) served as **committee chair** and coordinated launch planning, including announcement strategy across community channels ([#51](https://github.com/ocaml/RFCs/issues/51))\n- [Nicolás Ojeda Bär](https://github.com/nojb) provided **final approval** for merging the committee documentation and officially launched the committee ([#51](https://github.com/ocaml/RFCs/issues/51))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 6, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-02-03 to 2025-02-09", "start_commit": null, "end_commit": null, "brief_summary": "OCaml Language Committee formation documented through comprehensive RFC with community discussion and structural governance framework establishment.", "new_features_summary": null, "new_features": null, "activity_summary": "OCaml Language Committee establishment documented with governance structure, member roles, and decision-making processes through community collaboration.", "activity": "- **OCaml Language Committee formation** documented by [Richard Eisenberg](https://github.com/goldfirere) establishing governance structure for language evolution with 9-member committee including chair [Florian Angeletti](https://github.com/Octachron) ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Committee governance framework** defined with submission process, shepherd assignments, voting mechanisms, and three-year term limits to guide future RFC decisions ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **RFC process integration** updated to include committee review path when community consensus is elusive, providing structured decision-making alternative to developer meetings ([#51](https://github.com/ocaml/RFCs/issues/51))", "discussions_summary": "Committee scope clarification on compiler flags, contributor feedback on governance structure, and consensus-building approach discussions.", "notable_discussions": "- **Committee scope boundaries** discussed by [Josh Berdine](https://github.com/jberdine) regarding compiler flags inclusion in committee purview, with clarification that command-line interface changes may warrant committee consideration for language proposals ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Community approval process** debated by [David Allsopp](https://github.com/dra27) confirming committee formation readiness without requiring formal GitHub approvals, emphasizing consensus-building over formal voting ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Consensus mechanism benefits** highlighted by contributors as solution to stalled proposals lacking clear resolution paths, with committee providing structured decision-making when community discussion reaches impasse ([#51](https://github.com/ocaml/RFCs/issues/51))", "trends_summary": "Formalization of OCaml governance structures with emphasis on structured consensus-building and community representation in language evolution decisions.", "emerging_trends": "- **Governance formalization** with establishment of structured committee approach to language decisions, following successful GHC Steering Committee model for complex technical consensus-building ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Community representation emphasis** through diverse committee composition representing developers, educators, industrial users, researchers, and tooling developers to ensure broad perspective inclusion ([#51](https://github.com/ocaml/RFCs/issues/51))\n- **Process transparency** with public mailing list archives and clear documentation of decision-making procedures, enabling community visibility into language evolution discussions ([#51](https://github.com/ocaml/RFCs/issues/51))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "[Richard Eisenberg](https://github.com/goldfirere) authored committee documentation, [Florian Angeletti](https://github.com/Octachron) provided review coordination, multiple contributors engaged in governance discussion.", "contributors": "- [Richard Eisenberg](https://github.com/goldfirere) authored and refined the OCaml Language Committee documentation, coordinated with named committee members for approval, and responded to community feedback on governance structure ([#51](https://github.com/ocaml/RFCs/issues/51))\n- [Florian Angeletti](https://github.com/Octachron) served as designated committee chair, coordinated launch planning including announcements to caml-list and discuss forums, and provided process guidance for committee implementation ([#51](https://github.com/ocaml/RFCs/issues/51))\n- [Nicolás Ojeda Bär](https://github.com/nojb) approved committee formation and confirmed readiness for formal adoption, supporting the move to establish the committee as officially active ([#51](https://github.com/ocaml/RFCs/issues/51))\n- [David Allsopp](https://github.com/dra27) provided feedback on approval process, clarified that formal GitHub approvals are not required for RFCs, and supported the committee formation initiative ([#51](https://github.com/ocaml/RFCs/issues/51))\n- [Josh Berdine](https://github.com/jberdine) contributed feedback on committee scope boundaries, particularly regarding compiler flags and command-line interface considerations, and expressed support for the committee mechanism ([#51](https://github.com/ocaml/RFCs/issues/51))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 5, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-01-27 to 2025-02-02", "start_commit": "0a028c4d4dd745ae7b209faa1957ed86b67b2b5e", "end_commit": "0a028c4d4dd745ae7b209faa1957ed86b67b2b5e", "brief_summary": "OCaml Language Committee formally established with documentation and governance structure", "new_features_summary": "Formal establishment of OCaml Language Committee with complete governance framework", "new_features": "- **OCaml Language Committee establishment** with comprehensive governance documentation including member roles, decision-making processes, and community interaction guidelines ([#51](https://github.com/ocaml/RFCs/pull/51))\n- **RFC decision process enhancement** with formal committee review pathway for proposals lacking clear consensus, providing structured alternative to developer meetings ([0a028c4](https://github.com/ocaml/RFCs/commit/0a028c4d4dd745ae7b209faa1957ed86b67b2b5e))", "activity_summary": "Community governance milestone with active engagement around Language Committee formation", "activity": "- **Community governance advancement** with formal adoption of the Language Committee structure, representing a shift from informal consensus-building to structured decision-making processes ([#51](https://github.com/ocaml/RFCs/pull/51))\n- **Cross-community collaboration** involving multiple OCaml ecosystem stakeholders in establishing committee bylaws and operational procedures, drawing inspiration from successful GHC Steering Committee model ([#51](https://github.com/ocaml/RFCs/pull/51))\n- **Process refinement discussions** around committee scope and purview, with community feedback addressing concerns about compiler flag changes and CLI interface modifications ([#51](https://github.com/ocaml/RFCs/pull/51))", "discussions_summary": "Community consensus on Language Committee value with clarifications on scope and process", "notable_discussions": "- **Committee scope clarification** discussion led by [Josh Berdine](https://github.com/jberdine) regarding compiler flags and CLI interface changes being within committee purview, resulting in documentation updates ([#51](https://github.com/ocaml/RFCs/pull/51))\n- **Community support confirmation** with [David Allsopp](https://github.com/dra27) and [Olivier Nicole](https://github.com/OlivierNicole) expressing strong support for the committee as a solution to stalled proposals and consensus challenges ([#51](https://github.com/ocaml/RFCs/pull/51))\n- **Implementation timeline discussion** between [Richard Eisenberg](https://github.com/goldfirere) and [Florian Angeletti](https://github.com/Octachron) regarding committee launch coordination and cross-platform announcements ([#51](https://github.com/ocaml/RFCs/pull/51))", "trends_summary": "Formal governance structures emerging to address consensus challenges in language evolution", "emerging_trends": "- **Governance formalization** trend with establishment of structured committee-based decision making for language evolution, moving beyond informal developer meetings ([#51](https://github.com/ocaml/RFCs/pull/51))\n- **Cross-ecosystem learning** with OCaml community adopting proven governance models from Haskell/GHC ecosystem, suggesting broader pattern of language communities sharing organizational innovations ([#51](https://github.com/ocaml/RFCs/pull/51))\n- **Industrial involvement in governance** with significant representation from commercial users (Jane Street, LexiFi, Tarides) in committee formation, indicating industry investment in language direction ([#51](https://github.com/ocaml/RFCs/pull/51))", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Collaborative effort led by Richard Eisenberg with extensive community review and input", "contributors": "- [Richard Eisenberg](https://github.com/goldfirere) authored the Language Committee documentation and coordinated the formation process, drawing from GHC Steering Committee experience to establish OCaml's governance framework ([#51](https://github.com/ocaml/RFCs/pull/51))\n- [Florian Angeletti](https://github.com/Octachron) provided committee chair leadership and coordination for the launch process, including planning cross-platform announcements and integration with existing OCaml development workflows ([#51](https://github.com/ocaml/RFCs/pull/51))\n- [Nicolás Ojeda Bär](https://github.com/nojb) contributed to committee formation discussions and provided approval for the final governance structure as an initial committee member ([#51](https://github.com/ocaml/RFCs/pull/51))\n- [Josh Berdine](https://github.com/jberdine) engaged in scope clarification discussions, providing valuable feedback on committee purview regarding compiler flags and contributing to process refinement ([#51](https://github.com/ocaml/RFCs/pull/51))\n- [David Allsopp](https://github.com/dra27) provided community perspective on the committee's value and expressed support for the governance mechanism to address stalled proposals ([#51](https://github.com/ocaml/RFCs/pull/51))\n- [Olivier Nicole](https://github.com/OlivierNicole) participated in community discussion expressing support for the committee as addressing real consensus challenges in the OCaml ecosystem ([#51](https://github.com/ocaml/RFCs/pull/51))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 4, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-01-20 to 2025-01-26", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 3, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-01-13 to 2025-01-19", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 2, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2025-01-06 to 2025-01-12", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 1, "year": 2025, "repo": "ocaml/RFCs", "week_range": "2024-12-30 to 2025-01-05", "brief_summary": "Continued discussion on atomic record fields RFC with design considerations for type inference and inline records", "overall_activity": "- Ongoing discussion in **atomic record fields RFC** by [Gabriel Scherer](https://github.com/gasche) with detailed technical analysis of design tradeoffs between offset-only and value-and-offset approaches ([#39](https://github.com/ocaml/RFCs/issues/39))", "ongoing_summary": "Atomic record fields RFC continues with focus on type inference complexity and inline record compatibility", "ongoing_projects": "- **Atomic record fields implementation** with extensive discussion on type-checking complexity, principal mode compatibility, and inline record limitations by [Gabriel Scherer](https://github.com/gasche) ([#39](https://github.com/ocaml/RFCs/issues/39))", "priority_summary": null, "priority_items": null, "discussions_summary": "Technical design discussion on atomic field access patterns and type inference challenges", "notable_discussions": "- **Memory model design decisions** around atomic field access syntax with detailed comparison of `[%atomic.field x]` versus `[%atomic.loc r.x]` approaches, including type inference implications and principal mode warnings ([#39](https://github.com/ocaml/RFCs/issues/39))\n- **Fine-grained locking use cases** discussion by [Vesa Karvonen](https://github.com/polytypic) exploring practical applications for offset-based atomic operations in concurrent data structures ([#39](https://github.com/ocaml/RFCs/issues/39))", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Gabriel Scherer led technical discussions on atomic record fields design", "contributors": "- [Gabriel Scherer](https://github.com/gasche) continued leading **atomic record fields RFC** with detailed technical analysis of implementation approaches and type system interactions ([#39](https://github.com/ocaml/RFCs/issues/39))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 52, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-12-23 to 2024-12-29", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 51, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-12-16 to 2024-12-22", "brief_summary": "GC proposal discussion with expert feedback on reference counting and aging approaches", "overall_activity": "- **GC enhancement proposal** by [Christophe Raffalli](https://github.com/craff) discussing reference counting and aging mechanisms for improved minor heap performance ([#50](https://github.com/ocaml/RFCs/issues/50))", "ongoing_summary": "GC optimization proposal under review with technical discussions on implementation approaches", "ongoing_projects": "- **Minor heap optimization** proposal exploring reference counting and aging mechanisms for better latency control in applications like simple_httpd ([#50](https://github.com/ocaml/RFCs/issues/50))", "priority_summary": null, "priority_items": null, "discussions_summary": "Technical debate on GC design choices with core developers providing implementation insights", "notable_discussions": "- **Reference counting viability** discussed by [Stephen Dolan](https://github.com/stedolan) and [Damien Doligez](https://github.com/damiendoligez), highlighting atomic operation costs and cache contention concerns in multi-domain scenarios ([#50](https://github.com/ocaml/RFCs/issues/50))\n- **Aging approaches evaluation** by [Leo White](https://github.com/lpw25) noting past implementation attempts showed worse performance due to book-keeping overhead ([#50](https://github.com/ocaml/RFCs/issues/50))\n- **Terminology clarification** provided by [Stephen Dolan](https://github.com/stedolan) on remembered set vs. mark stack concepts in GC literature ([#50](https://github.com/ocaml/RFCs/issues/50))", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "GC experts providing detailed technical feedback on memory management proposal", "contributors": "- [Christophe Raffalli](https://github.com/craff) proposed GC optimizations for better minor heap latency control ([#50](https://github.com/ocaml/RFCs/issues/50))\n- [Stephen Dolan](https://github.com/stedolan) provided technical analysis on reference counting costs and terminology corrections ([#50](https://github.com/ocaml/RFCs/issues/50))\n- [Damien Doligez](https://github.com/damiendoligez) shared insights from past aging implementation attempts ([#50](https://github.com/ocaml/RFCs/issues/50))\n- [Leo White](https://github.com/lpw25) contributed historical context on performance benchmarks ([#50](https://github.com/ocaml/RFCs/issues/50))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 50, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-12-09 to 2024-12-15", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 49, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-12-02 to 2024-12-08", "brief_summary": "Ongoing GC performance improvements proposal with technical review from OCaml core team members.", "overall_activity": "- **GC performance optimization** proposal by [Christophe Raffalli](https://github.com/craff) continuing active development with document updates ([#50](https://github.com/ocaml/RFCs/pull/50))\n- Direct commit updating the **GC proposal document** by [Christophe Raffalli](https://github.com/craff) during the week (commit 21099f9)", "ongoing_summary": "GC proposal under active technical review with feedback from OCaml runtime experts.", "ongoing_projects": "- **Garbage collection improvements** proposal by [Christophe Raffalli](https://github.com/craff) exploring reference counting approaches for minor heaps with larger sizes and better latency characteristics ([#50](https://github.com/ocaml/RFCs/pull/50))", "priority_summary": null, "priority_items": null, "discussions_summary": "Technical review focusing on GC implementation details and performance tradeoffs.", "notable_discussions": "- **GC implementation alternatives** with detailed technical feedback from [Stephen Dolan](https://github.com/stedolan), [Damien Doligez](https://github.com/damiendoligez), and [Leo White](https://github.com/lpw25) addressing reference counting performance concerns, remembered set implementation, and atomic operations impact ([#50](https://github.com/ocaml/RFCs/pull/50))\n- **Terminology corrections** from [Stephen Dolan](https://github.com/stedolan) clarifying standard GC terminology usage and distinguishing remembered sets from mark stacks ([#50](https://github.com/ocaml/RFCs/pull/50))\n- **Historical context** from [Leo White](https://github.com/lpw25) on previously attempted aging approaches and their performance limitations ([#50](https://github.com/ocaml/RFCs/pull/50))", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Single contributor developing GC improvements with review from OCaml runtime team.", "contributors": "- [Christophe Raffalli](https://github.com/craff) proposing **GC performance optimizations** with reference counting approach for larger minor heaps and improved latency ([#50](https://github.com/ocaml/RFCs/pull/50))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 48, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-11-25 to 2024-12-01", "brief_summary": "GC optimization proposal and type-parameterized modules discussion dominated RFC activity", "overall_activity": "- **Garbage collection improvement** proposal by [Christophe Raffalli](https://github.com/craff) focused on **minor heap management** with reference counting approach ([#50](https://github.com/ocaml/RFCs/issues/50))\n- Continued development of **type-parameterized modules** feature by [Samuel Vivien](https://github.com/samsa1) with detailed discussions on **value restriction** and **semantic approaches** ([#40](https://github.com/ocaml/RFCs/issues/40))\n- **Technical refinements** to GC proposal with multiple iterations to address **merge conflicts** and **presentation clarity** ([#48](https://github.com/ocaml/RFCs/issues/48), [#49](https://github.com/ocaml/RFCs/issues/49))", "ongoing_summary": "Type-parameterized modules design continues with focus on value restriction semantics", "ongoing_projects": "- **Type-parameterized modules** implementation by [Samuel Vivien](https://github.com/samsa1) addressing **value restriction** challenges and **explicit application** syntax decisions with input from [Gabriel Scherer](https://github.com/gasche) and [Didier Remy](https://github.com/diremy) ([#40](https://github.com/ocaml/RFCs/issues/40))", "priority_summary": "GC proposal needs performance benchmarking and terminology clarification", "priority_items": "- **GC proposal evaluation** by [Christophe Raffalli](https://github.com/craff) requires **performance analysis** against current approach, with concerns raised by [Stephen Dolan](https://github.com/stedolan) about **atomic operations overhead** and [Damien Doligez](https://github.com/damiendoligez) referencing **past aging approaches** ([#50](https://github.com/ocaml/RFCs/issues/50))", "discussions_summary": "Deep technical discussions on GC implementation and module system semantics", "notable_discussions": "- **GC implementation trade-offs** between reference counting and current remembered set approach, with [Stephen Dolan](https://github.com/stedolan) highlighting **cache contention** concerns and [Leo White](https://github.com/lpw25) noting **terminology improvements** needed ([#50](https://github.com/ocaml/RFCs/issues/50))\n- **Module system design** debates on **value restriction** versus **weak value restriction** approaches for type-parameterized modules, with [Gabriel Scherer](https://github.com/gasche) and [Didier Remy](https://github.com/diremy) providing **semantic analysis** ([#40](https://github.com/ocaml/RFCs/issues/40))", "trends_summary": "Focus on performance-critical language features with emphasis on GC and type system improvements", "emerging_trends": "- **Performance-oriented proposals** targeting **runtime efficiency** improvements through GC optimization and module system enhancements\n- **Iterative proposal refinement** process demonstrated through multiple PR attempts with **community feedback** integration ([#48](https://github.com/ocaml/RFCs/issues/48), [#49](https://github.com/ocaml/RFCs/issues/49), [#50](https://github.com/ocaml/RFCs/issues/50))\n- **Cross-institutional collaboration** between **INRIA researchers** and **community contributors** on fundamental language improvements", "issues_summary": null, "good_first_issues": null, "contributors_summary": "Primary contributions from INRIA researchers focusing on GC and type system improvements", "contributors": "- [Christophe Raffalli](https://github.com/craff) leading **GC optimization** proposal development with **multiple iterations** and **technical discussions** ([#48](https://github.com/ocaml/RFCs/issues/48), [#49](https://github.com/ocaml/RFCs/issues/49), [#50](https://github.com/ocaml/RFCs/issues/50))\n- [Samuel Vivien](https://github.com/samsa1) advancing **type-parameterized modules** design with **semantic refinements** and **community collaboration** ([#40](https://github.com/ocaml/RFCs/issues/40))", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 47, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-11-18 to 2024-11-24", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 46, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-11-11 to 2024-11-17", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 45, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-11-04 to 2024-11-10", "brief_summary": null, "overall_activity": null, "ongoing_summary": "Active discussion continues on atomic record fields RFC implementation details", "ongoing_projects": "- Ongoing **atomic record fields RFC** ([#39](https://github.com/ocaml/RFCs/issues/39)) with detailed technical discussions by [Gabriel Scherer](https://github.com/gasche), [Vesa Karvonen](https://github.com/polytypic), [@clef-men](https://github.com/clef-men), [KC Sivaramakrishnan](https://github.com/kayceesrk), and [Olivier Nicole](https://github.com/OlivierNicole) focusing on API design tradeoffs between `('r, 'v) Field.t` and `'v Loc.t` approaches, type inference challenges, and fine-grained locking implementations", "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 44, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-10-28 to 2024-11-03", "brief_summary": null, "overall_activity": null, "ongoing_summary": "Ongoing technical discussions on memory model and unit headers for OCaml files", "ongoing_projects": "- **Memory model refinement** for OCaml's atomic operations with focus on **relaxed read semantics** by [Gabriel Scherer](https://github.com/gasche) and community ([#42](https://github.com/ocaml/RFCs/issues/42))\n- **Unit header syntax** proposal to enable **compilation-unit configuration** directly in source files discussed at maintainer meeting ([#26](https://github.com/ocaml/RFCs/issues/26))", "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 43, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-10-21 to 2024-10-27", "brief_summary": "Discussion resumed on closed PR #27 about new keywords and raw identifiers syntax", "overall_activity": "- Continued **discussion** on [Stephen Dolan](https://github.com/stedolan)'s closed PR about **new keywords** and **raw identifier syntax** ([#27](https://github.com/ocaml/RFCs/issues/27))\n- [Gabriel Scherer](https://github.com/gasche) noted that the **raw token syntax** portion was already implemented in [ocaml/ocaml#12323](https://github.com/ocaml/ocaml/issues/12323) but **compiler options** remain unimplemented\n- Discussion around **closing versus merging** the PR given its partial implementation status", "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": "Clarification about partial implementation status of new keywords RFC", "notable_discussions": "- **Implementation status** clarification by [Gabriel Scherer](https://github.com/gasche) noting that **raw identifier syntax** (\\#identifier) was implemented but **optional keyword compiler flags** were not ([#27](https://github.com/ocaml/RFCs/issues/27))\n- Practical **usage examples** shared showing raw identifiers being used for **variant names** that conflict with keywords like Shape.\\#function and Shape.\\#lazy\n- **Process question** about whether to close or merge the RFC given its partial implementation in the main OCaml repository", "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": "Stephen Dolan and Gabriel Scherer engaged in RFC implementation discussion", "contributors": "- [Stephen Dolan](https://github.com/stedolan) original author of the **new keywords RFC** with continued engagement on implementation status ([#27](https://github.com/ocaml/RFCs/issues/27))\n- [Gabriel Scherer](https://github.com/gasche) provided **implementation updates** and **process guidance** for the partially-implemented RFC", "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 42, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-10-14 to 2024-10-20", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}, {"week": 41, "year": 2024, "repo": "ocaml/RFCs", "week_range": "2024-10-07 to 2024-10-13", "brief_summary": null, "overall_activity": null, "ongoing_summary": null, "ongoing_projects": null, "priority_summary": null, "priority_items": null, "discussions_summary": null, "notable_discussions": null, "trends_summary": null, "emerging_trends": null, "issues_summary": null, "good_first_issues": null, "contributors_summary": null, "contributors": null, "org": "ocaml", "repo_name": "RFCs", "repo_full": "ocaml/RFCs"}]}